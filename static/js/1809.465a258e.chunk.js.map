{"version":3,"file":"static/js/1809.465a258e.chunk.js","mappings":"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","sources":["components/training/RichTextEditor.jsx","pages/training/program/CreateProgram.jsx"],"sourcesContent":["import React from \"react\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\n\nconst RichTextEditor = ({ value, onChange }) => {\n  return <ReactQuill value={value} onChange={onChange} />;\n};\n\nexport default RichTextEditor;\n","import React, { useEffect, useState } from \"react\";\r\nimport { CgListTree } from \"react-icons/cg\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport RichTextEditor from \"../../../components/training/RichTextEditor\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/auth\";\r\n\r\nconst CreateProgram = () => {\r\n  //console.log('Session:'+session.user.userType);\r\n  // const router = useRouter();\r\n  const navigate = useNavigate()\r\n  const { userData, signOut } = useAuth()\r\n  const [classMode, setClass] = useState(\"1\");\r\n  const [id, setId] = useState(null)\r\n  const [programType, setProgramType] = useState(\"\");\r\n  const [programOutline, setProgramOutline] = useState([\r\n  ])\r\n  function handleClassChange(event) {\r\n    setClass(event.target.value);\r\n  }\r\n\r\n  function handleTypeChange(event) {\r\n    console.log(event.target.value);\r\n    setProgramType(event.target.value);\r\n  }\r\n\r\n  const options = [\r\n    { value: \"5\", label: \"5\" },\r\n    { value: \"10\", label: \"10\" },\r\n    { value: \"15\", label: \"15\" },\r\n  ];\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const [clientData, setClientData] = useState([]);\r\n  const [selectedClient, setSelectedClient] = useState([]);\r\n  const [programId, setProgramId] = useState(null);\r\n  const [programData, setProgramData] = useState([]);\r\n  const [selectedProgram, setSelectedProgram] = useState(null);\r\n  const [programOutlineId, setProgramOutlineId] = useState(null)\r\n  const [projectId, setProjectId] = useState(null);\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [buttonR, setButtonR] = useState(false);\r\n  const [buttonD, setButtonD] = useState(false);\r\n  const [csv, setCsv] = useState([]);\r\n  const [fileName, setFileName] = useState('');\r\n  // const programOutline = [];\r\n\r\n  const handleFileUpload = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      const uploadedFileName = selectedFile.name;\r\n      setFileName(uploadedFileName);\r\n\r\n      uploadFileToServer(selectedFile);\r\n      // console.log('Uploaded file name:', uploadedFileName);\r\n      const file = uploadedFileName.split('.');\r\n      // console.log('------------file', file[0])\r\n      // // programOutline.concat(file[0])\r\n      setProgramOutline([file[0]])\r\n\r\n    }\r\n  };\r\n\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleContentChange = (value) => {\r\n    setContent(value);\r\n  };\r\n\r\n  const data = {\r\n    user: [\r\n      {\r\n        fullName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        employeeId: \"\",\r\n        branchName: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const styles = {\r\n    container: (base) => ({\r\n      ...base,\r\n      flex: 1,\r\n    }),\r\n    control: (base) => ({\r\n      ...base,\r\n      border: \"1px solid rgb(209 213 219)\",\r\n      boxShadow: \"none\",\r\n      \"&:hover\": {\r\n        border: \"1px solid rgb(17 24 39)\",\r\n      },\r\n    }),\r\n    input: (base) => ({\r\n      ...base,\r\n      color: \"rgb(75 85 99)\",\r\n      paddingLeft: \"6px\",\r\n      paddingBottom: \"3px\",\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"1.25rem\",\r\n      // opacity: \"0 !important\",\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      color: \"#a1a9bb\",\r\n      paddingLeft: \"6px\",\r\n\r\n      fontSize: \"0.870rem\",\r\n      lineHeight: \"1.25rem\",\r\n    }),\r\n  };\r\n\r\n  //Fetching client data\r\n  const getClientData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/clients/listofclient?filter=%7B%22search%22%3A%22%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setClientData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setClientData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  //handling client select\r\n  const handleClient = (option) => {\r\n    setSelectedClient(option);\r\n    setProgramId(option.data);\r\n    setSelectedProgram(null);\r\n    setProjectId(null);\r\n    setProjectData([]);\r\n  };\r\n\r\n  //Fetching program data\r\n  const getProgramData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/projects/listofProgramName?id=${programId}&filter=%7B%22search%22%3A%22%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n        setProgramData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setProgramData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleProgram = (option) => {\r\n    setSelectedProgram(option);\r\n    setProjectId(option.data);\r\n  };\r\n\r\n  const getProjectData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/programTrainers/getprogramTrainersName?id=${projectId}&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        console.log(data.data);\r\n        setProjectData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setProjectData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClientData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (programId) {\r\n      getProgramData();\r\n    }\r\n  }, [programId]);\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      getProjectData();\r\n    }\r\n  }, [projectId]);\r\n\r\n  const clientOptions = clientData?.map((client) => {\r\n    return { data: client?.client_id, label: client?.client_name };\r\n  });\r\n\r\n  const programOptions = programData?.map((program) => {\r\n    return {\r\n      data: program?.project_id,\r\n      label: `${program?.project_title} ~ ProgramId: ${program?.project_id} ~ ${program?.location_of_training\r\n        ? program?.location_of_training\r\n        : \"No location allocate\"\r\n        } `,\r\n    };\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (!csv.length) {\r\n    //   return toast.error(\"Please provide announcement list\");\r\n    // }\r\n    var formData = {};\r\n    Array.from(e.currentTarget.elements).forEach((field) => {\r\n      if (!field.name) return;\r\n      formData[field.name] = field.value;\r\n    });\r\n\r\n    if (content) {\r\n      formData[\"objectives\"] = content;\r\n    }\r\n    // formData[\"programOutline\"] = programOutlineId\r\n    console.log(formData, \"formData\");\r\n\r\n\r\n    // let programStartDate = moment(\r\n    //   formData[\"programStartDate\"],\r\n    //   moment.ISO_8601\r\n    // );\r\n    // formData[\"programStartDate\"] = programStartDate\r\n    //   .utc()\r\n    //   .format(\"YYYY-MM-DD HH:mm:ss\");\r\n    // let programEndDate = moment(formData[\"programEndDate\"], moment.ISO_8601);\r\n    // formData[\"programEndDate\"] = programEndDate\r\n    //   .utc()\r\n    //   .format(\"YYYY-MM-DD HH:mm:ss\");\r\n    // let nominationDateTime = moment(\r\n    //   formData[\"nominationDateTime\"],\r\n    //   moment.ISO_8601\r\n    // );\r\n    // formData[\"nominationDateTime\"] = nominationDateTime\r\n    //   .utc()\r\n    //   .format(\"YYYY-MM-DD HH:mm:ss\");\r\n    // if (selectedOption.length) {\r\n    //   formData[\"intervalDays\"] = selectedOption\r\n    //     .map((option) => option.value)\r\n    //     .join(\",\");\r\n    // }\r\n    addPrgram(formData);\r\n  };\r\n\r\n  const addPrgram = async (formData) => {\r\n    var response;\r\n    let form = new URLSearchParams(Object.entries(formData)).toString();\r\n    response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/programs/add?access_token=${userData?.accessToken}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n\r\n        method: \"POST\",\r\n        body: form,\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      toast.error(data?.error?.message);\r\n    } else {\r\n      if (data.status === \"failure\") {\r\n        toast.error(data.msg);\r\n      } else if (data.code == 409) {\r\n        toast.error(data.msg);\r\n      } else {\r\n        // uploadCsv(data.data);\r\n        toast.success(\" Program created and emails sent successfully !!\");\r\n        navigate(\"/program\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const uploadCsv = async (id) => {\r\n    var bulkUser = JSON.stringify(csv);\r\n    if (bulkUser.length && id) {\r\n      let response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/employees/addBulkEmployee?access_token=${userData?.accessToken}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n          method: \"POST\",\r\n          body: bulkUser,\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      if (!response.ok) {\r\n        toast.error(data?.error?.message);\r\n      } else {\r\n        // document.getElementById(\"adduser\").reset();\r\n        createAnnouncementList(id, data.data);\r\n\r\n        // toast.success(\" Program created and emails sent successfully !!\");\r\n      }\r\n    } else {\r\n      toast.error(data?.error?.message);\r\n    }\r\n  };\r\n\r\n  const createAnnouncementList = async (id, employees) => {\r\n    let response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/announcements/add/${id}?access_token=${userData?.accessToken}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        method: \"POST\",\r\n        body: JSON.stringify(employees),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      toast.error(data?.error?.message);\r\n    } else {\r\n      toast.success(\" Program created and emails sent successfully !!\");\r\n      navigate(\"/program\");\r\n    }\r\n  };\r\n\r\n  console.log(selectedProgram, \"selectedProgram\");\r\n\r\n  const handleClick = (e) => {\r\n    // e.preventDefaul \r\n    const file = fileName.split('.');\r\n    console.log('------------file', file[0])\r\n    // programOutline.concat(file[0])\r\n    setProgramOutline([file[0]])\r\n  }\r\n\r\n  const uploadFileToServer = async (file) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_PUBLIC_URL}/api/programOutlines/uploadFile/${selectedProgram ? selectedProgram.data : null}?access_token=${userData?.accessToken}`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        toast.success(\"File uploaded successfully.\");\r\n        // const fileee = fileName.split('.');\r\n        // console.log('------------file', fileee[0])\r\n        // programOutline.concat(file[0])\r\n        setProgramOutline([file.name])\r\n        setProgramOutlineId(data.data.id)\r\n        console.log('File uploaded successfully.');\r\n      } else {\r\n        console.error('Failed to upload file.');\r\n        toast.error(\"File uploaded successfully.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      toast.error(\"File uploaded successfully.\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <div className=\"max-w-4xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\r\n  <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n    <div className=\"mb-4\">\r\n      <label className=\"block text-gray-700 font-bold mb-2\" for=\"full-name\">\r\n        Full Name\r\n      </label>\r\n      <input className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"full-name\" type=\"text\" placeholder=\"Enter your full name\"/>\r\n    </div>\r\n    <div className=\"mb-4\">\r\n      <label className=\"block text-gray-700 font-bold mb-2\" for=\"email\">\r\n        Email\r\n      </label>\r\n      <input className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"email\" type=\"email\" placeholder=\"Enter your email address\"/>\r\n    </div>\r\n    <div className=\"mb-4\">\r\n      <label className=\"block text-gray-700 font-bold mb-2\" for=\"password\">\r\n        Password\r\n      </label>\r\n      <input className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" type=\"password\" placeholder=\"Enter your password\"/>\r\n    </div>\r\n    <div className=\"mb-4\">\r\n      <label className=\"block text-gray-700 font-bold mb-2\" for=\"confirm-password\">\r\n        Confirm Password\r\n      </label>\r\n      <input className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"confirm-password\" type=\"password\" placeholder=\"Confirm your password\"/>\r\n    </div>\r\n    <div className=\"mb-4\">\r\n      <label className=\"block text-gray-700 font-bold mb-2\" for=\"message\">\r\n        Message\r\n      </label>\r\n      <textarea className=\"appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"message\" rows=\"5\" placeholder=\"Enter your message\"></textarea>\r\n    </div>\r\n    <div className=\"flex items-center justify-center\">\r\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div> */}\r\n\r\n      <div className=\"flex mt-1 flex-col w-full justify-center\">\r\n        <div className=\"relative py-5 w-full  px-1 \">\r\n          <div className=\"relative px-4 py-2  rounded-md  bg-white \">\r\n            <div className=\"w-full mx-auto\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"h-10 w-10 bg-sky-500 rounded-full flex flex-shrink-0 justify-center items-center text-white text-2xl font-semibold\">\r\n                  <CgListTree />\r\n                </div>\r\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                  <h2 className=\"leading-relaxed\">Create a Program</h2>\r\n                  <p className=\"text-sm text-gray-500 font-normal leading-relaxed\">\r\n                    Enter the program details.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"divide-y divide-gray-200\"\r\n              >\r\n                <div className=\"flex flex-col w-full justify-between py-8 text-base leading-6 space-x-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                  <div className=\"flex flex-col w-full space-y-1\">\r\n                    <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Client Name*</label>\r\n                        <div className=\"relative focus-within:text-gray-600 text-gray-400\">\r\n                          <Select\r\n                            //isMulti={true}\r\n                            options={clientOptions}\r\n                            onChange={handleClient}\r\n                            value={selectedClient}\r\n                            styles={styles}\r\n                            placeholder=\"Select Client\"\r\n                            getOptionValue={(option) => option.data}\r\n                          />\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"clientName\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Client Name\"\r\n                          required\r\n                          defaultValue={selectedClient?.label}\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"clientId\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Client Name\"\r\n                          required\r\n                          defaultValue={selectedClient?.data}\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <div className=\"flex justify-between w-full items-center\">\r\n                          <label className=\"leading-loose\">Program Name*</label>\r\n                          <label className=\"leading-loose\">\r\n                            Program Id:\r\n                            {selectedProgram ? selectedProgram.data : null}\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"relative focus-within:text-gray-600 text-gray-400\">\r\n                          <Select\r\n                            //isMulti={true}\r\n                            options={programOptions}\r\n                            onChange={handleProgram}\r\n                            value={selectedProgram}\r\n                            styles={styles}\r\n                            placeholder=\"Select Program\"\r\n                            getOptionValue={(option) => option.data}\r\n                          />\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"programName\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Name\"\r\n                          defaultValue={selectedProgram?.label}\r\n                          required\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"programId\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Id\"\r\n                          defaultValue={projectId}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Program Type*</label>\r\n                        <select\r\n                          name=\"programType\"\r\n                          required\r\n                          onChange={handleTypeChange}\r\n                          value={programType}\r\n                          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                        >\r\n                          <option value=\"\">Select program type</option>\r\n                          <option value=\"1\">Open</option>\r\n                          <option value=\"0\">Close</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program Start Date*\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"programStartDate\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program  Start Date\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program Start Time*\r\n                        </label>\r\n                        <input\r\n                          type=\"time\"\r\n                          name=\"programStartTime\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Start Time\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program End Date*\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"programEndDate\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program End Date\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program End Time*\r\n                        </label>\r\n                        <input\r\n                          type=\"time\"\r\n                          name=\"programEndTime\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program End Time\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap\">\r\n                      {programType == \"1\" ? (\r\n                        <>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">\r\n                              Nomination End Date*\r\n                            </label>\r\n                            <input\r\n                              type=\"date\"\r\n                              name=\"nominationDate\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"Program Date/Time\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">\r\n                              Nomination End Time*\r\n                            </label>\r\n                            <input\r\n                              type=\"time\"\r\n                              name=\"nominationTime\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"Program Date/Time\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">\r\n                              Nomination Limit*\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              name=\"nominationLimit\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"Program nomination limit\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">Program Outline</label>\r\n                            <select\r\n                              name=\"programOutline\"\r\n                              value={programOutlineId}\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            >\r\n                              {/* <option value=\"\">Select program outline</option>\r\n                              <option value=\"1\">MS Excel - Basic to intermediate</option>\r\n                              <option value=\"2\">MS Excel - Advance</option>\r\n                              <option value=\"3\">MS Powerpoint - Basic to Intermediate</option>\r\n                              <option value=\"4\">MS Powerpoint - Advance</option>\r\n                              <option value=\"5\">Basics Of Banking</option> */}\r\n\r\n                              {\r\n                                programOutline && programOutline.map((item, index) => {\r\n                                  return (\r\n                                    <option value={item}>{item}</option>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </select>\r\n                          </div>\r\n\r\n                          {/* <div className=\"w-1/4 px-2\">\r\n                            <label className=\"leading-loose\"> file Type</label>\r\n                            <select\r\n                              name=\"programOutline\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Select files type</option>\r\n                              <option value=\"1\">Pdf</option>\r\n                              <option value=\"2\">Excel</option>\r\n                              <option value=\"3\">Powerpoint</option>\r\n                              {/* <option value=\"4\">MS Powerpoint - Advance</option>\r\n                              <option value=\"5\">Basics Of Banking</option> */}\r\n                          {/* </select>\r\n                          </div> */}\r\n                          {/* <form id=\"fileUploadForm\" enctype=\"multipart/form-data\"> */}\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">Files</label>\r\n\r\n                            <input\r\n                              type=\"file\"\r\n                              name=\"files\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"choose file\"\r\n                              onChange={handleFileUpload}\r\n                            />\r\n                            {/* <p>{fileName && `Selected file: ${fileName}`}</p> */}\r\n                          </div>\r\n                          {/* <div className=\"w-1/4 px-2 m-[30px] \"> */}\r\n                          {/* <input type=\"button\" className=\"rounded to-blue-600 p-3\" name=\"button\" value=\"button\" />\r\n                             */}\r\n                          {/* <button\r\n                              // type=\"submit\"\r\n                              onClick={handleClick}\r\n                              className=\"bg-sky-500 flex-inline justify-center items-center text-white px-4 py-2 rounded-md focus:outline-none\"\r\n                            >upload</button>\r\n                          </div> */}\r\n                          {/* </form> */}\r\n\r\n                        </>\r\n                      ) : null}\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Training Mode*</label>\r\n                        <select\r\n                          name=\"trainingType\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          value={classMode}\r\n                          onChange={handleClassChange}\r\n                          required\r\n                        >\r\n                          <option value=\"1\">Class Room Training</option>\r\n                          <option value=\"2\">Virtual Training</option>\r\n                        </select>\r\n                      </div>\r\n                      {/* {classMode === \"2\" && (\r\n                        <div className=\"w-1/2 px-2\">\r\n                          <label className=\"leading-loose\">\r\n                            Classroom session link\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"meetingLink\"\r\n                            className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            placeholder=\"Classroom session link\"\r\n                          />\r\n                        </div>\r\n                      )} */}\r\n                      {classMode == \"1\" ? (\r\n                        <div className=\"w-1/2 px-2\">\r\n                          <label className=\"leading-loose\">Location*</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"location\"\r\n                            className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            placeholder=\"City\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      ) : null}\r\n                      {/* <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Interval Days</label>\r\n                        <Select\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          isMulti={true}\r\n                          value={selectedOption}\r\n                          onChange={handleChange}\r\n                          options={options}\r\n                          getOptionValue={(option) => option.value}\r\n                        />\r\n                      </div> */}\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Program Color*</label>\r\n                        <input\r\n                          type=\"color\"\r\n                          name=\"color\"\r\n                          className=\"block w-full\"\r\n                          placeholder=\"Program Color\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Status*</label>\r\n                        <select\r\n                          name=\"status\"\r\n                          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                        >\r\n                          <option value=\"1\">Active</option>\r\n                          <option value=\"0\">In Active</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Objectives</label>\r\n                        <RichTextEditor\r\n                          value={content}\r\n                          onChange={handleContentChange}\r\n                        />\r\n                      </div>\r\n                      {/* {buttonD ? ( */}\r\n                      {/* <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Announcement List\r\n                        </label>\r\n                        <BulkUploader setButtonR={setButtonR} setCsv={setCsv} />\r\n                      </div> */}\r\n\r\n                      {/* ) : null} */}\r\n                    </div>\r\n\r\n                    {/* <div className=\"w-1/2 px-2\">\r\n                      <label className=\"leading-loose\">Venue</label>\r\n                      <textarea\r\n                        name=\"\"\r\n                        className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                        placeholder=\"Venue\"\r\n                      ></textarea>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n                {/* {buttonR ? ( */}\r\n                <div className=\"py-4  space-x-4\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-sky-500 flex-inline justify-center items-center text-white px-4 py-2 rounded-md focus:outline-none\"\r\n                  >\r\n                    Create Program\r\n                  </button>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </form>\r\n              {/* <span className=\"flex w-full justify-between  items-center\">\r\n                <p className=\"text-sm w-fit font-normal px-6 text-gray-700\">\r\n                  *To add users in batch first download this excel file and fill\r\n                  the required fields and then re-upload this file.\r\n                </p>\r\n                <div onClick={() => setButtonD(true)}>\r\n                  <ExcelDownloder\r\n                    data={data}\r\n                    filename={\"batchlist\"}\r\n                    type=\"button\"\r\n                    className=\"flex w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\r\n                  >\r\n                    Download.Excel\r\n                  </ExcelDownloder>\r\n                </div>\r\n              </span> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProgram;\r\n\r\n\r\n"],"names":["_ref","value","onChange","_jsx","ReactQuill","CreateProgram","navigate","useNavigate","userData","signOut","useAuth","classMode","setClass","useState","id","setId","programType","setProgramType","programOutline","setProgramOutline","selectedOption","setSelectedOption","clientData","setClientData","selectedClient","setSelectedClient","programId","setProgramId","programData","setProgramData","selectedProgram","setSelectedProgram","programOutlineId","setProgramOutlineId","projectId","setProjectId","projectData","setProjectData","buttonR","setButtonR","buttonD","setButtonD","csv","setCsv","fileName","setFileName","content","setContent","styles","container","base","flex","control","border","boxShadow","input","color","paddingLeft","paddingBottom","fontSize","lineHeight","placeholder","useEffect","fetch","concat","process","accessToken","then","async","data","response","json","ok","error","message","statusText","Promise","reject","catch","console","log","clientOptions","map","client","client_id","label","client_name","programOptions","program","project_id","project_title","location_of_training","addPrgram","form","URLSearchParams","Object","entries","formData","toString","headers","method","body","_data$error","status","code","toast","msg","success","uploadFileToServer","FormData","append","file","name","children","className","_jsxs","CgListTree","onSubmit","e","preventDefault","Array","from","currentTarget","elements","forEach","field","Select","options","option","getOptionValue","type","required","defaultValue","event","target","_Fragment","item","index","selectedFile","files","uploadedFileName","split","RichTextEditor"],"sourceRoot":""}
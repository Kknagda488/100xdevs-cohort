{"version":3,"file":"static/js/1742.ebae80a0.chunk.js","mappings":"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","sources":["components/training/RichTextEditor.jsx","pages/training/program/UpdateProgram.jsx"],"sourcesContent":["import React from \"react\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\n\nconst RichTextEditor = ({ value, onChange }) => {\n  return <ReactQuill value={value} onChange={onChange} />;\n};\n\nexport default RichTextEditor;\n","import React, { useEffect, useState } from \"react\";\r\n// import { getSession, signOut } from \"next-auth/react\";\r\nimport { CgListTree } from \"react-icons/cg\";\r\nimport Select from \"react-select\";\r\n// import { useExcelDownloder } from \"react-xls\";\r\n// import BulkUploader from \"../../components/adminComponents/parts/BulkUploader\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\n// import { useRouter } from \"next/router\";\r\nimport moment from \"moment\";\r\nimport RichTextEditor from \"../../../components/training/RichTextEditor\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/auth\";\r\n// import { response } from \"express\";\r\n\r\nconst UpdateProgram = () => {\r\n  //console.log('Session:'+session.user.userType);\r\n  // const router = useRouter();\r\n  // const [batchId, setBatchId] = useState(router.query.batchId);\r\n  const { id } = useParams()\r\n  console.log(\"--------------id\", id)\r\n  const navigate = useNavigate()\r\n  const { userData, signOut } = useAuth()\r\n  const [programId, setProgramId] = useState(id);\r\n  // console.log(programId);\r\n  const [programOutline, setProgramOutline] = useState([\r\n  ])\r\n\r\n  const [programOutlineId, setProgramOutlineId] = useState(null)\r\n  const [classMode, setClass] = useState(\"1\");\r\n  const [programType, setProgramType] = useState(\"\");\r\n  function handleClassChange(event) {\r\n    setClass(event.target.value);\r\n  }\r\n\r\n  function handleTypeChange(event) {\r\n    setProgramType(event.target.value);\r\n  }\r\n\r\n  const options = [\r\n    { value: \"5\", label: \"5\" },\r\n    { value: \"10\", label: \"10\" },\r\n    { value: \"15\", label: \"15\" },\r\n  ];\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const [clientData, setClientData] = useState([]);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [programData, setProgramData] = useState([]);\r\n  const [fileName, setFileName] = useState('');\r\n  const [program, setProgram] = useState({});\r\n  const [selectedProgram, setSelectedProgram] = useState(null);\r\n  const [projectId, setProjectId] = useState(null);\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [buttonR, setButtonR] = useState(false);\r\n  const [buttonD, setButtonD] = useState(false);\r\n  const [csv, setCsv] = useState([]);\r\n  // const { ExcelDownloder, Type } = useExcelDownloder();\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleContentChange = (value) => {\r\n    setContent(value);\r\n  };\r\n  const handleFileUpload = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      const uploadedFileName = selectedFile.name;\r\n      setFileName(uploadedFileName);\r\n\r\n      uploadFileToServer(selectedFile);\r\n      // console.log('Uploaded file name:', uploadedFileName);\r\n      // const file = uploadedFileName.split('.');\r\n      // console.log('------------file', file[0])\r\n      // // programOutline.concat(file[0])\r\n      // setProgramOutline([file[0]])\r\n\r\n    }\r\n  };\r\n\r\n  const uploadFileToServer = async (file) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_PUBLIC_URL}/api/programOutlines/updateFile/${selectedProgram ? selectedProgram.data : null}?access_token=${userData?.accessToken}`, {\r\n        method: 'PUT',\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        toast.success(\"File uploaded successfully.\");\r\n        // const fileee = fileName.split('.');\r\n        // console.log('------------file', fileee[0])\r\n        // programOutline.concat(file[0])\r\n        setProgramOutline([file.name])\r\n        setProgramOutlineId(data.data.id)\r\n        console.log('File updated successfully.');\r\n      } else {\r\n        console.error('Failed to updated file.');\r\n        toast.error(\"File updated successfully.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updated file:', error);\r\n      toast.error(\"File updated Faild.\");\r\n    }\r\n  };\r\n  const data = {\r\n    user: [\r\n      {\r\n        fullName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        employeeId: \"\",\r\n        branchName: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const styles = {\r\n    container: (base) => ({\r\n      ...base,\r\n      flex: 1,\r\n    }),\r\n    control: (base) => ({\r\n      ...base,\r\n      border: \"1px solid rgb(209 213 219)\",\r\n      boxShadow: \"none\",\r\n      \"&:hover\": {\r\n        border: \"1px solid rgb(17 24 39)\",\r\n      },\r\n    }),\r\n    input: (base) => ({\r\n      ...base,\r\n      color: \"rgb(75 85 99)\",\r\n      paddingLeft: \"6px\",\r\n      paddingBottom: \"3px\",\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"1.25rem\",\r\n      // opacity: \"0 !important\",\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      color: \"#a1a9bb\",\r\n      paddingLeft: \"6px\",\r\n\r\n      fontSize: \"0.870rem\",\r\n      lineHeight: \"1.25rem\",\r\n    }),\r\n  };\r\n\r\n  //Fetching client data\r\n  const getClientData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/clients/listofclient?filter=%7B%22search%22%3A%22%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setClientData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setClientData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  //handling client select\r\n  const handleClient = (option) => {\r\n    setSelectedClient(option);\r\n    // setProgramId(option.data);\r\n    setSelectedProgram(null);\r\n    setProjectId(null);\r\n    setProjectData([]);\r\n  };\r\n\r\n  //Fetching program data\r\n  const getProgramData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/projects/listofProgramName?id=${selectedClient.data}&filter=%7B%22search%22%3A%22%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n        // console.log(data.data);\r\n        setProgramData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setProgramData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleProgram = (option) => {\r\n    setSelectedProgram(option);\r\n    setProjectId(option.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClientData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedClient) {\r\n      getProgramData();\r\n    }\r\n  }, [selectedClient]);\r\n\r\n  const clientOptions = clientData?.map((client) => {\r\n    return { data: client?.client_id, label: client?.client_name };\r\n  });\r\n\r\n  const programOptions = programData?.map((program) => {\r\n    return {\r\n      data: program?.project_id,\r\n      label: `${program?.project_title} ~ ProgramId: ${program?.project_id} ~ ${program?.location_of_training\r\n        ? program?.location_of_training\r\n        : \"No location allocate\"\r\n        } `,\r\n    };\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    var formData = {};\r\n    Array.from(e.currentTarget.elements).forEach((field) => {\r\n      if (!field.name) return;\r\n      formData[field.name] = field.value;\r\n    });\r\n\r\n    if (content) {\r\n      formData[\"objectives\"] = content;\r\n    }\r\n    // if (programType == \"0\") {\r\n    //   formData[\"nominationDate\"] = null;\r\n    //   formData[\"nominationTime\"] = null;\r\n    // }\r\n    // let programStartDate = moment(\r\n    //   formData[\"programStartDate\"],\r\n    //   moment.ISO_8601\r\n    // );\r\n    // formData[\"programStartDate\"] = programStartDate\r\n    //   .utc()\r\n    //   .format(\"YYYY-MM-DD HH:mm:ss\");\r\n    // let programEndDate = moment(formData[\"programEndDate\"], moment.ISO_8601);\r\n    // formData[\"programEndDate\"] = programEndDate\r\n    //   .utc()\r\n    //   .format(\"YYYY-MM-DD HH:mm:ss\");\r\n    // let nominationDateTime = moment(\r\n    //   formData[\"nominationDateTime\"],\r\n    //   moment.ISO_8601\r\n    // );\r\n    // formData[\"nominationDateTime\"] = nominationDateTime\r\n    //   .utc()\r\n    //   .format(\"YYYY-MM-DD HH:mm:ss\");\r\n\r\n    updateProgram(formData);\r\n  };\r\n\r\n  const updateProgram = async (formData) => {\r\n    try {\r\n      var response;\r\n      let form = new URLSearchParams(Object.entries(formData)).toString();\r\n      response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/programs/edit/${programId}?access_token=${userData?.accessToken}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n\r\n          method: \"POST\",\r\n          body: form,\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        toast.error(data?.error?.message);\r\n      } else {\r\n        if (data.code === 404) {\r\n          toast.error(data.msg);\r\n        } else if (data.status === \"failure\") {\r\n          toast.error(data.msg);\r\n        } else {\r\n          // uploadCsv(data.data);\r\n          toast.success(\"Program updated successfully!!\");\r\n          navigate(\"/program\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const getOneProgram = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/programs/getProgramById/${programId}?access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          throw new Error(error);\r\n        }\r\n        console.log(data.data);\r\n        setProgram(data.data);\r\n        if (data.data.objectives) {\r\n          setContent(data.data.objectives);\r\n        }\r\n        setColor(data.data.color);\r\n      })\r\n      .catch((error) => {\r\n        setProgram({});\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleProgramDate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let formData = {};\r\n      Array.from(e.currentTarget.elements).forEach((field) => {\r\n        if (!field.name) return;\r\n        formData[field.name] = field.value;\r\n      });\r\n      let form = new URLSearchParams(Object.entries(formData)).toString();\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/programs/updateProgramTime/${programId}?access_token=${userData?.accessToken}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n\r\n          method: \"PUT\",\r\n          body: form,\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      if (!response.ok) {\r\n        toast.error(data?.error?.message);\r\n        return Promise.reject(data?.error);\r\n      } else if (data.code === 400) {\r\n        toast.error(data.msg);\r\n      } else {\r\n        toast.success(data.msg);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"There was an error!\", error);\r\n      if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n        signOut();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (programId) {\r\n      getOneProgram();\r\n    }\r\n  }, [programId]);\r\n  // console.log(selectedOption)\r\n  useEffect(() => {\r\n    if (program) {\r\n      if (program.intervalDays) {\r\n        setSelectedOption(() => {\r\n          return program.intervalDays.split(\",\").map((day) => ({\r\n            label: day,\r\n            value: day,\r\n          }));\r\n        });\r\n      }\r\n      if (program.clientId) {\r\n        setSelectedClient({\r\n          label: program.clientName,\r\n          data: program.clientId,\r\n        });\r\n      }\r\n      if (program.programId) {\r\n        // setProgramOutlineId( program.programName)\r\n        setSelectedProgram({\r\n          label:\r\n            program.programName +\r\n            \" ~ ProgramId: \" +\r\n            program.programId +\r\n            \" ~ \" +\r\n            program.location,\r\n          data: program.programId,\r\n        });\r\n      }\r\n      setClass(program.trainingType);\r\n      setProgramType(program.programType);\r\n    }\r\n  }, [program]);\r\n\r\n  console.log(selectedProgram, \"program\");\r\n  return (\r\n    <div>\r\n      <div className=\"flex mt-5 flex-col w-full justify-center  \">\r\n        <div className=\"relative py-5 w-full  px-1 \">\r\n          <div className=\"relative px-4 py-2  rounded-md  bg-white \">\r\n            <div className=\"w-full mx-auto\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"h-10 w-10 bg-sky-500 rounded-full flex flex-shrink-0 justify-center items-center text-white text-2xl font-semibold\">\r\n                  <CgListTree />\r\n                </div>\r\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\r\n                  <h2 className=\"leading-relaxed\">Update Program</h2>\r\n                  <p className=\"text-gray-500 font-normal leading-relaxed text-lg\">\r\n                    Enter the program details.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"divide-y divide-gray-200\"\r\n              >\r\n                <div className=\"flex flex-col w-full justify-between py-8 text-base leading-6 space-x-4 text-gray-700 sm:text-lg sm:leading-7\">\r\n                  <div className=\"flex flex-col w-full space-y-1\">\r\n                    <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Client Name</label>\r\n                        <div className=\"relative focus-within:text-gray-600 text-gray-400\">\r\n                          <Select\r\n                            //isMulti={true}\r\n                            options={clientOptions}\r\n                            onChange={handleClient}\r\n                            value={selectedClient}\r\n                            styles={styles}\r\n                            placeholder=\"Select Client\"\r\n                            getOptionValue={(option) => option.data}\r\n                          />\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"clientName\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Client Name\"\r\n                          required\r\n                          defaultValue={selectedClient?.label}\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"clientId\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Client Name\"\r\n                          required\r\n                          defaultValue={selectedClient?.data}\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <div className=\"flex justify-between w-full items-center\">\r\n                          <label className=\"leading-loose\">Program Name</label>\r\n                          <label className=\"leading-loose\">\r\n                            Program Id:\r\n                            {selectedProgram ? selectedProgram.data : null}\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"relative focus-within:text-gray-600 text-gray-400\">\r\n                          <Select\r\n                            //isMulti={true}\r\n                            options={programOptions}\r\n                            onChange={handleProgram}\r\n                            value={selectedProgram}\r\n                            styles={styles}\r\n                            placeholder=\"Select Program\"\r\n                            getOptionValue={(option) => option.data}\r\n                          />\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"programName\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Name\"\r\n                          defaultValue={selectedProgram?.label}\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"programId\"\r\n                          className=\"hidden px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Id\"\r\n                          defaultValue={selectedProgram?.data}\r\n\r\n                        />\r\n                        {/* <h1>{selectedProgram?.data}</h1>\r\n                         */}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Program Type</label>\r\n                        <select\r\n                          name=\"programType\"\r\n                          required\r\n                          onChange={handleTypeChange}\r\n                          value={programType}\r\n                          defaultValue={program?.programType}\r\n                          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                        >\r\n                          <option value=\"\">Select program type</option>\r\n                          <option value=\"1\">Open</option>\r\n                          <option value=\"0\">Close</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap\">\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program Start Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"programStartDate\"\r\n                          required\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Start Date\"\r\n                          defaultValue={\r\n                            program?.programStartDate\r\n                              ? moment(program?.programStartDate).format(\r\n                                \"YYYY-MM-DD\"\r\n                              )\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program Start Time\r\n                        </label>\r\n                        <input\r\n                          type=\"time\"\r\n                          name=\"programStartTime\"\r\n                          required\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program Start Time\"\r\n                          defaultValue={program?.programStartTime}\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program End Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"programEndDate\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program End Date\"\r\n                          required\r\n                          defaultValue={\r\n                            program?.programEndDate\r\n                              ? moment(program?.programEndDate).format(\r\n                                \"YYYY-MM-DD\"\r\n                              )\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">\r\n                          Program End Time\r\n                        </label>\r\n                        <input\r\n                          type=\"time\"\r\n                          name=\"programEndTime\"\r\n                          required\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          placeholder=\"Program End Date\"\r\n                          defaultValue={program?.programEndTime}\r\n                        />\r\n                      </div>\r\n                      {programType == \"1\" ? (\r\n                        <>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">\r\n                              Nomination End Date*\r\n                            </label>\r\n                            <input\r\n                              type=\"date\"\r\n                              name=\"nominationDate\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"Program Date\"\r\n                              required\r\n                              defaultValue={\r\n                                program.nominationDate\r\n                                  ? moment(program.nominationDate).format(\r\n                                    \"YYYY-MM-DD\"\r\n                                  )\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">\r\n                              Nomination End Time*\r\n                            </label>\r\n                            <input\r\n                              type=\"time\"\r\n                              name=\"nominationTime\"\r\n                              required\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"Program Time\"\r\n                              defaultValue={program.nominationTime}\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">\r\n                              Nomination Limit*\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              name=\"nominationLimit\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"Program nomination limit\"\r\n                              defaultValue={program.nominationLimit}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">Program Outline</label>\r\n                            <select\r\n                              name=\"programOutline\"\r\n                              defaultValue={program.programOutline}\r\n                              value={programOutlineId}\r\n                              // required\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            >\r\n                              <option value=\"\">{program.programOutline}</option>\r\n                              {\r\n                                programOutline && programOutline.map((item, index) => {\r\n                                  return (\r\n                                    <option value={item}>{item}</option>\r\n                                  )\r\n                                })\r\n                              }\r\n                              {/* <option value=\"\">{program.programOutline}</option> */}\r\n                              {/* <option value=\"1\">MS Excel - Basic to intermediate</option>\r\n                              <option value=\"2\">MS Excel - Advance</option>\r\n                              <option value=\"3\">MS Powerpoint - Basic to Intermediate</option>\r\n                              <option value=\"4\">MS Powerpoint - Advance</option>\r\n                              <option value=\"5\">Basics Of Banking</option> */}\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"w-1/2 px-2\">\r\n                            <label className=\"leading-loose\">Files</label>\r\n\r\n                            <input\r\n                              type=\"file\"\r\n                              name=\"files\"\r\n                              className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                              placeholder=\"choose file\"\r\n                              onChange={handleFileUpload}\r\n                            />\r\n                            {/* <p>{fileName && `Selected file: ${fileName}`}</p> */}\r\n                          </div>\r\n                        </>\r\n                      ) : null}\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Training Mode</label>\r\n                        <select\r\n                          name=\"trainingType\"\r\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                          value={classMode}\r\n                          required\r\n                          onChange={handleClassChange}\r\n                          defaultValue={program?.trainingType}\r\n                        >\r\n                          <option value=\"1\">Class Room Training</option>\r\n                          <option value=\"2\">Virtual Training</option>\r\n                        </select>\r\n                      </div>\r\n                      {classMode == \"1\" ? (\r\n                        <div className=\"w-1/2 px-2\">\r\n                          <label className=\"leading-loose\">Location</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"location\"\r\n                            className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                            placeholder=\"City\"\r\n                            defaultValue={program?.location}\r\n                          />\r\n                        </div>\r\n                      ) : null}\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Program Color</label>\r\n                        <input\r\n                          type=\"color\"\r\n                          name=\"color\"\r\n                          className=\"block w-full\"\r\n                          placeholder=\"Program Color\"\r\n                          required\r\n                          onChange={(e) => {\r\n                            setColor(e.target.value);\r\n                          }}\r\n                          value={color}\r\n                        />\r\n                      </div>\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Status</label>\r\n                        <select\r\n                          placeholder=\"Select status\"\r\n                          name=\"status\"\r\n                          required\r\n                          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                        >\r\n                          <option\r\n                            value=\"1\"\r\n                            selected={program?.status == 1 ? true : false}\r\n                          >\r\n                            Active\r\n                          </option>\r\n                          <option\r\n                            value=\"0\"\r\n                            selected={program?.status == 0 ? true : false}\r\n                          >\r\n                            In Active\r\n                          </option>\r\n                        </select>\r\n                      </div>{\" \"}\r\n                      <div className=\"w-1/2 px-2\">\r\n                        <label className=\"leading-loose\">Objectives</label>\r\n                        <RichTextEditor\r\n                          value={content}\r\n                          onChange={handleContentChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"py-4  space-x-4\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-sky-500 flex-inline justify-center items-center text-white px-4 py-2 rounded-md focus:outline-none\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProgram;\r\n"],"names":["_ref","value","onChange","_jsx","ReactQuill","UpdateProgram","id","useParams","console","log","navigate","useNavigate","userData","signOut","useAuth","programId","setProgramId","useState","programOutline","setProgramOutline","programOutlineId","setProgramOutlineId","classMode","setClass","programType","setProgramType","selectedOption","setSelectedOption","clientData","setClientData","selectedClient","setSelectedClient","programData","setProgramData","fileName","setFileName","program","setProgram","selectedProgram","setSelectedProgram","projectId","setProjectId","projectData","setProjectData","buttonR","setButtonR","buttonD","setButtonD","csv","setCsv","color","setColor","content","setContent","uploadFileToServer","async","formData","FormData","append","file","response","fetch","concat","process","data","accessToken","method","body","json","ok","toast","success","name","error","styles","container","base","flex","control","border","boxShadow","input","paddingLeft","paddingBottom","fontSize","lineHeight","placeholder","useEffect","then","message","statusText","Promise","reject","catch","clientOptions","map","client","client_id","label","client_name","programOptions","project_id","project_title","location_of_training","updateProgram","form","URLSearchParams","Object","entries","toString","headers","_data$error","code","status","msg","Error","objectives","intervalDays","split","day","clientId","clientName","programName","location","trainingType","children","className","_jsxs","CgListTree","onSubmit","e","preventDefault","Array","from","currentTarget","elements","forEach","field","Select","options","option","getOptionValue","type","required","defaultValue","event","target","programStartDate","moment","format","programStartTime","programEndDate","programEndTime","_Fragment","nominationDate","nominationTime","nominationLimit","item","index","selectedFile","files","uploadedFileName","selected","RichTextEditor"],"sourceRoot":""}
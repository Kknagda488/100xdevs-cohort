{"version":3,"file":"static/js/4125.7864df28.chunk.js","mappings":"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","sources":["pages/training/Certificates.jsx"],"sourcesContent":["\r\n\r\nimport moment from \"moment\";\r\n// import { getSession } from \"next-auth/react\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport { useAuth } from \"../../context/auth\";\r\n\r\nfunction Certificates({ session }) {\r\n  const [name, setName] = useState(\"Select a file...\");\r\n  // const [programName, setProgramName] = useState(\"\");\r\n  const { userData } = useAuth()\r\n  const [certificates, setCertificates] = useState([]);\r\n  const [csv, setCsv] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [pgindex, setPgindex] = useState(1);\r\n  const [pageLimit, setPageLimit] = useState(30);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files.length) {\r\n      setName(e.target.files[0].name);\r\n      readXlsxFile(e.target.files[0]).then((rows) => {\r\n        rows.shift();\r\n        let tutorials = [];\r\n        rows.forEach((row, i) => {\r\n          let tutorial = {\r\n            name: row[0],\r\n            email: row[1],\r\n            programName: row[2],\r\n            programDate: row[3],\r\n            programDate2: row[4],\r\n          };\r\n\r\n          tutorials.push(tutorial);\r\n        });\r\n\r\n        setCsv(tutorials);\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleSelectChange = (e) => {\r\n  //   setProgramName(e.target.value);\r\n  // };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!csv.length) {\r\n        toast.error(\"Please provide users.\");\r\n        return;\r\n      }\r\n\r\n      // console.log(csv)\r\n      // return \r\n      setLoading(true);\r\n      var response;\r\n      var bulkUser = JSON.stringify(csv);\r\n      console.log(\"======================================================\", csv, \"-------------------------------------------\", bulkUser)\r\n      response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/certificates/generate-certificate?access_token=${userData?.accessToken}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n          method: \"POST\",\r\n          body: bulkUser,\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        toast.error(data?.error?.message);\r\n      } else if (data.status === \"failure\") {\r\n        toast.error(data.msg);\r\n      } else {\r\n        toast.success(data.msg);\r\n        setName(\"Select a file...\");\r\n        setCsv([]);\r\n        e.target.reset();\r\n        fetchCertificateList();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    console.log(pageNo);\r\n    if (pageNo >= pgindex) {\r\n      return;\r\n    } else {\r\n      setPageNo(pageNo + 1);\r\n    }\r\n  };\r\n  const previous = () => {\r\n    if (pageNo <= 1) {\r\n      return;\r\n    } else {\r\n      setPageNo(pageNo - 1);\r\n    }\r\n  };\r\n\r\n  const fetchCertificateList = async () => {\r\n    try {\r\n      const filter = {\r\n        pageLimit,\r\n        pageNo,\r\n      };\r\n      const params = encodeURIComponent(JSON.stringify(filter));\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/certificates/list?filter=${params}&access_token=${userData?.accessToken}`\r\n      );\r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response statusText\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      const data = await response.json();\r\n      setCertificates(data.data.certifiates);\r\n      setPgindex(data.data.lastPage);\r\n    } catch (error) {\r\n      console.error(\"There was an error!\", error);\r\n      if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n        // signOut();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCertificateList();\r\n  }, [pageLimit, pageNo]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full h-full\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"flex flex-col w-full mt-1\">\r\n          <div className=\"grid grid-cols-1\">\r\n            {/* <div>\r\n                <label className=\"leading-loose\">Select Program</label>\r\n                <div className=\"relative focus-within:text-gray-600 text-gray-400\">\r\n                  <select\r\n                    className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                    onChange={handleSelectChange}\r\n                  >\r\n                    <option value=\"\">Select Program</option>\r\n                    <option value=\"Program Name 1\">Program Name 1</option>\r\n                    <option value=\"Program Name 2\">Program Name 2</option>\r\n                    <option value=\"Program Name 3\">Program Name 3</option>\r\n                  </select>\r\n                </div>\r\n              </div> */}\r\n            <div className=\"flex flex-col\">\r\n              {/* <label className=\"leading-loose\">Upload user list</label> */}\r\n              <span\r\n                htmlFor=\"files\"\r\n                className=\"relative flex w-full items-center bg-gray-200 rounded-md cursor-pointer \"\r\n              >\r\n                <input\r\n                  id=\"files\"\r\n                  name=\"files\"\r\n                  className=\"absolute w-full opacity-0\"\r\n                  type=\"file\"\r\n                  onChange={handleChange}\r\n                  accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                />\r\n                <span className=\"flex rounded-l-lg py-2 text-sm px-5 h-full bg-sky-500 text-white w-fit\">\r\n                  Upload user list\r\n                </span>\r\n                <p className=\"text-sm font-medium  px-6 text-gray-700\">\r\n                  {name}\r\n                </p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pt-4 flex  space-x-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"bg-sky-500 flex justify-center items-center w-100 text-white px-4 py-2 rounded-md focus:outline-none\"\r\n          >\r\n            {loading ? <span>Generating...</span> : <span>Generate</span>}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <h5 className=\" text-md font-medium tracking-wide my-2 text-gray-700 lg:text-xl \">\r\n        Certificate data\r\n      </h5>\r\n      <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-3\">\r\n        <table className=\"w-full text-sm text-left text-gray-500 \">\r\n          <thead className=\"text-md m-4 bg-sky-600 text-white   \">\r\n            <tr>\r\n              {/* <th scope=\"col\" className=\"px-6 py-3\">\r\n                Sr. No\r\n              </th> */}\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Name\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Email\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Program Name\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Program Date\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Status\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Certificate File\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {certificates.map((data, i) => (\r\n              <tr key={i + 1} className=\"bg-white border-b\">\r\n                {/* <td className=\"px-6 py-4 text-gray-900\"> {i + 1}</td> */}\r\n                <th\r\n                  scope=\"row\"\r\n                  className=\"flex flex-row items-center px-6 py-4 font-medium text-gray-900  w-44\"\r\n                >\r\n                  {data?.name}\r\n                </th>\r\n                <td className=\"px-6 py-4 text-gray-900\">{data?.email}</td>\r\n                <td className=\"px-6 py-4 text-gray-900\">{data?.programName}</td>\r\n                <td className=\"px-6 py-4 text-gray-900\">\r\n                  {data?.programDate\r\n                    ? moment(data?.programDate).format(\"DD-MM-YYYY\")\r\n                    : \"-\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 text-gray-900\">\r\n                  {data?.response ? (\r\n                    JSON.parse(data?.response).accepted.length ? (\r\n                      <span className=\"inline-flex items-center rounded-md bg-green-50 px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20\">\r\n                        success\r\n                      </span>\r\n                    ) : (\r\n                      <span classNam=\"inline-flex items-center rounded-md bg-red-50 px-2 py-1 text-xs font-medium text-red-700 ring-1 ring-inset ring-red-600/10\">\r\n                        Failed\r\n                      </span>\r\n                    )\r\n                  ) : (\r\n                    \"-\"\r\n                  )}\r\n                </td>\r\n                <td className=\"px-6 py-4 text-gray-900\">\r\n                  <a href={data?.file} target=\"_blank\" rel=\"noreferrer\">\r\n                    View File\r\n                  </a>\r\n                </td>\r\n                {/* <th\r\n                      scope=\"row\"\r\n                      className=\"px-6 py-4 font-medium text-gray-900  whitespace-nowrap\"\r\n                    >\r\n                      {data?.employeeId}\r\n                    </th> */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"flex flex-row justify-around mt-10 items-center  \">\r\n        <span className=\"text-sm flex text-gray-700 \"></span>\r\n        <div className=\"flex\">\r\n          <div className=\"dropdown flex items-center relative\">\r\n            <p>Show</p>\r\n            <span className=\"bg-gray-100 text-gray-700 mx-2  font-normal tracking-wide rounded inline-flex items-center\">\r\n              <select\r\n                className=\"bg-transparent px-3 py-2  outline-none \"\r\n                value={pageLimit}\r\n                onChange={(e) => {\r\n                  setPageLimit(e.target.value);\r\n                  setPageNo(1);\r\n                }}\r\n              >\r\n                <option className=\"mr-1\">5</option>\r\n                <option className=\"mr-1\">10</option>\r\n                <option className=\"mr-1\">20</option>\r\n                <option className=\"mr-1\">30</option>\r\n                <option className=\"mr-1\">40</option>\r\n                <option className=\"mr-1\">50</option>\r\n                <option className=\"mr-1\">100</option>\r\n                <option className=\"mr-1\">250</option>\r\n                <option className=\"mr-1\">500</option>\r\n              </select>\r\n            </span>\r\n            <p>Entries</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <a\r\n            onClick={() => previous()}\r\n            className={` ${pageNo === 1\r\n              ? \"hidden\"\r\n              : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 bg-gray-200 cursor-pointer rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700   \"\r\n              }`}\r\n          >\r\n            Previous\r\n          </a>\r\n\r\n          <a\r\n            onClick={() => next()}\r\n            className={` ${pageNo >= pgindex\r\n              ? \"hidden\"\r\n              : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 cursor-pointer bg-gray-200 rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700   \"\r\n              }`}\r\n          >\r\n            Next\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Certificates;\r\n"],"names":["_ref","session","name","setName","useState","userData","useAuth","certificates","setCertificates","csv","setCsv","loading","setLoading","pageNo","setPageNo","pgindex","setPgindex","pageLimit","setPageLimit","fetchCertificateList","async","filter","params","encodeURIComponent","JSON","stringify","response","fetch","concat","process","accessToken","ok","error","data","message","statusText","Promise","reject","json","certifiates","lastPage","console","useEffect","_jsxs","className","children","onSubmit","e","preventDefault","length","toast","bulkUser","log","headers","method","body","_data$error","status","msg","success","target","reset","_jsx","htmlFor","id","type","onChange","files","readXlsxFile","then","rows","shift","tutorials","forEach","row","i","tutorial","email","programName","programDate","programDate2","push","accept","disabled","scope","map","moment","format","parse","accepted","classNam","href","file","rel","value","onClick"],"sourceRoot":""}
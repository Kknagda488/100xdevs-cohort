{"version":3,"file":"static/js/7670.d0c56441.chunk.js","mappings":"uOAGA,MAAMA,EAAO,CAET,CAAEC,GAAI,EAAGC,QAAS,OAAQC,QAAS,WAAYC,SAAU,QAASC,KAAM,KAAMC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,iBAAkB,GAAIC,cAAe,MAAOC,eAAgB,IAAKC,WAAY,UAAWC,kBAAmB,GACvN,CAAEZ,GAAI,EAAGC,QAAS,OAAQC,QAAS,WAAYC,SAAU,YAAaC,KAAM,KAAMC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,iBAAkB,GAAIC,cAAe,MAAOC,eAAgB,IAAKC,WAAY,UAAWC,kBAAmB,MAkF/N,EA/E2BC,KACvB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,UAW3CG,EAAAA,EAAAA,YAAU,KARWC,WAInBL,EAAWhB,EAAK,EAKdsB,EAAc,GACb,CAACJ,IAwBN,OAEIK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEFD,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAAD,SAAA,EACVE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAC1B,GAAG,mBAAkBuB,SAAC,gBAClCD,EAAAA,EAAAA,MAACK,EAAAA,EAAM,CACLC,QAAQ,mBACR5B,GAAG,oBACH6B,MAAOZ,EACPa,MAAM,aACNC,SAhC2BC,IAC7Bd,EAAac,EAAMC,OAAOJ,MAAM,EAgC9BK,MAAO,CAAEC,SAAU,QAASC,SAAU,QAASb,SAAA,EAE/CE,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACR,MAAM,QAAON,SAAC,WACxBE,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACR,MAAM,SAAQN,SAAC,YACzBE,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACR,MAAM,UAASN,SAAC,aAC1BE,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACR,MAAM,YAAWN,SAAC,qBAKhCE,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEI,OAAQ,IAAKC,MAAO,OAAOC,UAAU,QAAUjB,UAC3DE,EAAAA,EAAAA,KAACgB,EAAAA,GAAQ,CACP1C,KAAMe,EACN4B,qBAAmB,EACnBC,uBAAqB,EACrBC,wBAAsB,EACtBC,QA5CU,CACZ,CAAEC,MAAO,KAAMC,WAAY,OAAQR,MAAO,IAC1C,CAAEO,MAAO,UAAWC,WAAY,SAAUR,MAAO,KACjD,CAAEO,MAAO,UAAWC,WAAY,YAAaR,MAAO,KACpD,CAAEO,MAAO,WAAYC,WAAY,WAAYR,MAAO,KACpD,CAAEO,MAAO,OAAQC,WAAY,OAAQR,MAAO,KAC5C,CAAEO,MAAO,OAAQC,WAAY,QAASC,KAAM,SAAUT,MAAO,KAC7D,CAAEO,MAAO,OAAQC,WAAY,QAASC,KAAM,SAAUT,MAAO,KAC7D,CAAEO,MAAO,OAAQC,WAAY,QAASC,KAAM,SAAUT,MAAO,KAC7D,CAAEO,MAAO,mBAAoBC,WAAY,oBAAqBC,KAAM,SAAUT,MAAO,KACrF,CAAEO,MAAO,gBAAiBC,WAAY,gBAAiBR,MAAO,KAC9D,CAAEO,MAAO,iBAAkBC,WAAY,kBAAmBC,KAAM,SAAUT,MAAO,KACjF,CAAEO,MAAO,aAAcC,WAAY,aAAcR,MAAO,KACxD,CAAEO,MAAO,oBAAqBC,WAAY,qBAAsBC,KAAM,SAAUT,MAAO,MAgCrFU,MAAO,CAAEC,QAASC,EAAAA,GAClBC,UAAW,CACTF,QAAS,CACPG,iBAAiB,UAKrB,C","sources":["pages/Reports/KotakBoRoRmReports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nconst rows = [\r\n    // Sample data, replace with your actual data\r\n    { id: 1, empCode: 'E001', empName: 'John Doe', function: 'Sales', role: 'RO', day1: 80, day2: 85, day3: 75, assessmentScores: 90, certification: 'Yes', feedbackScores: 4.5, attendance: 'Present', interactionScores: 5.0 },\r\n    { id: 2, empCode: 'E002', empName: 'Jane Doe', function: 'Marketing', role: 'RM', day1: 75, day2: 80, day3: 85, assessmentScores: 92, certification: 'Yes', feedbackScores: 4.8, attendance: 'Present', interactionScores: 4.7 },\r\n    // Add more rows as needed\r\n];\r\nconst KotakBoRoRmReports = () => {\r\n    const [reports, setReports] = useState([]);\r\n    const [timeRange, setTimeRange] = useState('daily'); // Default time range is daily\r\n  \r\n    // Fetch reports data based on the selected time range\r\n    const fetchReports = async () => {\r\n      // Implement your API call or data fetching logic here\r\n      // Update the 'data' variable with the fetched data\r\n    //   const data = await yourApiCall(timeRange); // Replace 'yourApiCall' with your actual API call\r\n      setReports(rows);\r\n    };\r\n    // const [reportFrequency, setReportFrequency] = useState('Daily');\r\n\r\n    useEffect(() => {\r\n        fetchReports();\r\n      }, [timeRange]);\r\n    \r\n      // Handle time range change\r\n      const handleTimeRangeChange = (event) => {\r\n        setTimeRange(event.target.value);\r\n      };\r\n\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'S.No', width: 90 },\r\n        { field: 'empCode', headerName: 'E.Code', width: 120 },\r\n        { field: 'empName', headerName: 'Emp. Name', width: 150 },\r\n        { field: 'function', headerName: 'Function', width: 120 },\r\n        { field: 'role', headerName: 'Role', width: 120 },\r\n        { field: 'day1', headerName: 'Day 1', type: 'number', width: 100 },\r\n        { field: 'day2', headerName: 'Day 2', type: 'number', width: 100 },\r\n        { field: 'day3', headerName: 'Day 3', type: 'number', width: 100 },\r\n        { field: 'assessmentScores', headerName: 'Assessment Scores', type: 'number', width: 150 },\r\n        { field: 'certification', headerName: 'Certification', width: 120 },\r\n        { field: 'feedbackScores', headerName: 'Feedback Scores', type: 'number', width: 150 },\r\n        { field: 'attendance', headerName: 'Attendance', width: 120 },\r\n        { field: 'interactionScores', headerName: 'Interaction Scores', type: 'number', width: 150 },\r\n    ];\r\n\r\n    return (\r\n\r\n        <div>\r\n      {/* Dropdown to select time range */}\r\n      <FormControl>\r\n        <InputLabel id=\"time-range-label\">Time Range</InputLabel>\r\n        <Select\r\n          labelId=\"time-range-label\"\r\n          id=\"time-range-select\"\r\n          value={timeRange}\r\n          label=\"Time Range\"\r\n          onChange={handleTimeRangeChange}\r\n          style={{ minWidth: '150px', fontSize: '16px' }}\r\n        >\r\n          <MenuItem value=\"daily\">Daily</MenuItem>\r\n          <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n          <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n          <MenuItem value=\"quarterly\">Quarterly</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* Data Grid to display reports */}\r\n      <div style={{ height: 400, width: '100%',marginTop:'20px'  }}>\r\n        <DataGrid\r\n          rows={reports}\r\n          disableColumnFilter\r\n          disableColumnSelector\r\n          disableDensitySelector\r\n          columns={columns}\r\n          slots={{ toolbar: GridToolbar }}\r\n          slotProps={{\r\n            toolbar: {\r\n              showQuickFilter: true,\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default KotakBoRoRmReports"],"names":["rows","id","empCode","empName","function","role","day1","day2","day3","assessmentScores","certification","feedbackScores","attendance","interactionScores","KotakBoRoRmReports","reports","setReports","useState","timeRange","setTimeRange","useEffect","async","fetchReports","_jsxs","children","FormControl","_jsx","InputLabel","Select","labelId","value","label","onChange","event","target","style","minWidth","fontSize","MenuItem","height","width","marginTop","DataGrid","disableColumnFilter","disableColumnSelector","disableDensitySelector","columns","field","headerName","type","slots","toolbar","GridToolbar","slotProps","showQuickFilter"],"sourceRoot":""}
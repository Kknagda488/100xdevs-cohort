{"version":3,"file":"static/js/5083.2f33272b.chunk.js","mappings":"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","sources":["components/training/batch/charts/AverageChart.jsx","components/training/batch/charts/PercentChart.js","components/Loader.js","components/training/batch/charts/BarChart.jsx","components/training/batch/batchComponents/DynamicOverviewReport.jsx","components/training/batch/batchComponents/ChartList.jsx","components/training/batch/batchComponents/ReportGenerator.jsx","components/training/batch/batchComponents/BatchReportList.jsx","components/training/batch/batchComponents/BatchReport.jsx","pages/training/program/BatchReport.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\n\nfunction AverageChart({ bars, headLabel, averages }) {\n  console.log(bars, headLabel, averages, \"bars, headLabel, averages\");\n  const aref = useRef(null);\n  const ddata = {\n    labels: headLabel,\n    datasets: bars,\n  };\n\n  const options = {\n    responsive: true,\n\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: \"Parameter Trending in (%)\",\n      },\n      datalabels: {\n        formatter: function (value, context) {\n          if (value == 0) {\n            return ``;\n          } else {\n            return `${value}`;\n          }\n          //return `${value}%`;\n        },\n\n        color: \"black\",\n        font: {\n          size: 8.9,\n        },\n        anchor: \"end\",\n        align: \"top\",\n      },\n    },\n\n    scales: {\n      x: {\n        ticks: {\n          maxRotation: 80,\n          minRotation: 80,\n          font: {\n            size: 13,\n          },\n          display: true,\n          autoSkip: false,\n          // callback: function (val, index) {\n          //   // Hide every 2nd tick label\n          //   console.log(this.getLabelForValue(val), \"iuytrttyy\");\n          //   return index % 2 === 0 ? this.getLabelForValue(val) : \"\";\n          // },\n          callback: function (label, index, labels) {\n            var newlabel = this.getLabelForValue(label);\n            if (/\\s/.test(newlabel)) {\n              var words = newlabel;\n              var count = 0;\n\n              var split = words.split(\" \");\n              for (var i = 0; i < split.length; i++) {\n                if (split[i] != \"\") {\n                  count += 1;\n                }\n              }\n              var label1 = split.slice(0, count / 2 + 2);\n\n              var sentence = label1.join(\" \");\n              var senCount = sentence.length;\n\n              var stringOne = `.{1,${senCount}}`;\n              var regex = new RegExp(stringOne, \"g\");\n              console.log(regex, \"ooo\");\n              return newlabel.match(regex);\n              //return newlabel.match(/.{1,31}/g);\n            } else {\n              return newlabel;\n            }\n          },\n        },\n      },\n      y: {\n        suggestedMin: 0,\n        suggestedMax: 105,\n        fontSize: 70,\n      },\n    },\n    layout: {\n      padding: 2,\n    },\n  };\n\n  const imageDownloader = async (i) => {\n    const pricingTableElmt = document.querySelector(`#overview`);\n    if (!pricingTableElmt) return;\n\n    const canvas = await html2canvas(pricingTableElmt);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    const fname = document.querySelector(`#title01`).innerHTML;\n\n    downloadjs(dataURL, `Overview_${fname}.png`, \"image/png\");\n  };\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <div\n        className=\"flex flex-col justify-center items-center\"\n        style={{ width: 1100 }}\n      >\n        <button\n          className=\"text-md font-normal text-white px-3 w-fit py-1 rounded-md my-3 bg-sky-500\"\n          onClick={() => imageDownloader()}\n        >\n          Download Overview Chart\n        </button>\n        <Bar\n          ref={aref}\n          id=\"overview\"\n          data={ddata}\n          width={40}\n          height={25}\n          options={options}\n          plugins={[ChartDataLabels]}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AverageChart;\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n//const labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\nexport default function PercentChart({ headLabel, averages }) {\n  const labels = headLabel;\n\n  console.log('---------------------------------------', averages, headLabel)\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Average Score\",\n        data: averages,\n        backgroundColor: \"#383191\",\n      },\n    ],\n  };\n  const options = {\n    responsive: true,\n\n    plugins: {\n      legend: {\n        display: true,\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: \"Parameter wise Average Trending\",\n      },\n      datalabels: {\n        formatter: function (value, context) {\n          if (value == 0) {\n            return ``;\n          } else {\n            return value;\n          }\n          //return `${value}%`;\n        },\n\n        color: \"white\",\n        scales: {\n          y: {\n            suggestedMin: 0,\n            suggestedMax: 10,\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          maxRotation: 80,\n          minRotation: 80,\n          callback: function (label, index, labels) {\n            var newlabel = this.getLabelForValue(label);\n            if (/\\s/.test(newlabel)) {\n              var words = newlabel;\n              var count = 0;\n\n              var split = words.split(\" \");\n              for (var i = 0; i < split.length; i++) {\n                if (split[i] != \"\") {\n                  count += 1;\n                }\n              }\n              var label1 = split.slice(0, count / 2 + 2);\n\n              var sentence = label1.join(\" \");\n              var senCount = sentence.length;\n\n              var stringOne = `.{1,${senCount}}`;\n              var regex = new RegExp(stringOne, \"g\");\n              console.log(regex, \"ooo\");\n              return newlabel.match(regex);\n              //return newlabel.match(/.{1,31}/g);\n            } else {\n              return newlabel;\n            }\n          },\n        },\n      },\n    },\n  };\n  const imageDownloader = async (i) => {\n    const pricingTableElmt = document.querySelector(`#average`);\n    if (!pricingTableElmt) return;\n\n    const canvas = await html2canvas(pricingTableElmt);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    const fname = document.querySelector(`#title01`).innerHTML;\n\n    downloadjs(dataURL, `Percentage_${fname}.png`, \"image/png\");\n    // downloadjs(dataURL, \"download.png\", \"image/png\");\n  };\n  return (\n    <div\n      className=\"flex flex-col justify-center items-center\"\n      style={{ width: 1100 }}\n    >\n      <button\n        className=\"text-md font-normal text-white px-3 w-fit py-1 rounded-md my-3 bg-sky-500\"\n        onClick={() => imageDownloader()}\n      >\n        Download Average Chart\n      </button>\n      <Bar\n        id=\"average\"\n        width={40}\n        height={25}\n        options={options}\n        data={data}\n        plugins={[ChartDataLabels]}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Loader() {\n  return (\n    <div className=\"flex justify-center items-center w-full mb-2\" role=\"status\">\n      <svg\n        aria-hidden=\"true\"\n        className=\"mr-2 w-8 h-8 text-gray-200 animate-spin  fill-sky-500\"\n        viewBox=\"0 0 100 101\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n          fill=\"currentFill\"\n        />\n      </svg>\n      <span className=\"text-md text-sky-500 font-medium\">Please Wait...</span>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useCallback, useRef, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\nimport { v4 as uuid_v4 } from \"uuid\";\nimport { AiOutlineDownload } from \"react-icons/ai\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// import { faker } from \"@faker-js/faker\";\nimport { saveAs } from \"file-saver\";\n// import XlsxPopulate from \"-populate\";\n\n// import XlsxPopulate from \"xlsx-populate\";\nimport * as XLSX from 'xlsx';\n\nimport jsPDF from \"jspdf\";\nimport AverageChart from \"./AverageChart\";\nimport PercentChart from \"./PercentChart\";\nimport Loader from \"../../../Loader\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction BarChart({ chartData, excelData, batchData }) {\n  console.log(chartData, \"chartData-chartData\");\n  const [exr, setexr] = useState([]);\n  const [downloader, setDownloader] = useState(false);\n  const [formChanger, setFormChanger] = useState(false);\n  const [barChanger, setBarChanger] = useState(false);\n  const [bars, setBars] = useState([]);\n  const [headLabel, setHeadLabel] = useState([]);\n  const [averages, setAverages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const ref = useRef(null);\n\n  var counter = 1;\n  var ne = [];\n  var ave = [];\n  var links = [];\n  const fileName = `${batchData?.teamInfo?.createdDate?.substring(0, 10)} ${batchData?.assessmentRes?.assessmentType\n    } Report ${batchData?.teamInfo?.programName} ${batchData?.teamInfo?.tranineeName\n    }`.toUpperCase();\n  // const handleCaptureClick = useCallback(async () => {\n\n  //   const pricingTableElmt = document.querySelector(\"#report-container\");\n  //   if (!pricingTableElmt) return;\n\n  //   const copiedPricingTableElmt = pricingTableElmt.cloneNode(true); //as HTMLElement;\n  //   copiedPricingTableElmt.style.position = \"fixed\";\n  //   copiedPricingTableElmt.style.right = \"100%\";\n  //   copiedPricingTableElmt.style.height = \"auto\";\n\n  //   document.body.append(copiedPricingTableElmt);\n\n  //   const canvas = await html2canvas(copiedPricingTableElmt);\n\n  //   copiedPricingTableElmt.remove();\n\n  //   const dataURL = canvas.toDataURL(\"image/png\");\n  //   downloadjs(dataURL, \"download.png\", \"image/png\");\n  // }, []);\n\n  //const file = `${reportsData?.assessmentRes?.assessmentType}_assessment_${reportsData?.assessmentRes?.name}_${reportsData?.teamInfo?.tranineeName}`;\n  // const type = reportData?.assessmentRes?.assessmentType;\n  const file = \"newexcel\";\n  function getSheetData(data, header) {\n    console.log(data, \"getsheetData\");\n    var lengthArray = data.map((t) => Object.keys(t).length);\n    var BigObjectIndex = lengthArray.indexOf(Math.max.apply(null, lengthArray));\n\n    console.log(data[BigObjectIndex]);\n    var fields = Object.keys(data[BigObjectIndex]);\n    var sheetData = data.map(function (row) {\n      return fields.map(function (fieldName) {\n        return row[fieldName] ? row[fieldName] : \"\";\n      });\n    });\n\n    sheetData.unshift(header);\n\n    return sheetData;\n  }\n  async function saveAsExcel() {\n    var newData = exr;\n    var data = newData;\n    var header = [\n      \"Parameters\",\n      \"Excellent\",\n      \"Very Good\",\n      \"Good\",\n      \"Satisfactory\",\n      \"Average\",\n      \"Poor\",\n      \"Total Score\",\n      \"Average Score\",\n    ];\n\n    var wsData = getSheetData(data, header);\n    var ws = XLSX.utils.aoa_to_sheet(wsData);\n\n    var wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\n\n    var fname = document.getElementById(\"title02\").innerText;\n    XLSX.writeFile(wb, `${fname}.xlsx`);\n  }\n  // async function saveAsExcel() {\n  //   console.log(exr, \"exr\");\n  //   var newData = exr;\n\n  //   var data = newData;\n  //   console.log(JSON.parse(JSON.stringify(data)) + \"excel-data\");\n  //   var header = [\n  //     \"Parameters\",\n  //     \"Excellent\",\n  //     \"Very Good\",\n  //     \"Good\",\n  //     \"Satisfactory\",\n  //     \"Average\",\n  //     \"Poor\",\n  //     \"Total Score\",\n  //     \"Average Score\",\n  //   ];\n\n\n  //   // XlsxPopulate.fromBlankAsync().then(async (workbook) => {\n  //   //   const sheet1 = workbook.sheet(0);\n  //   //   // const sheet2 = workbook.sheet(1);\n  //   //   // workbook.addSheet(SHEET2, 1);\n  //   //   const sheetData = getSheetData(data, header);\n  //   //   console.log(sheetData, \"sheetData\");\n  //   //   const totalColumns = sheetData[0].length;\n\n  //   //   sheet1.cell(\"A1\").value(sheetData);\n\n  //   //   const range = sheet1.usedRange();\n  //   //   const endColumn = String.fromCharCode(64 + totalColumns);\n  //   //   sheet1.column(\"A\").width(80).hidden(false);\n  //   //   sheet1.row(1).style(\"bold\", true);\n  //   //   sheet1.row(14).style(\"bold\", true);\n  //   //   //static changes\n  //   //   // sheet1.row(2).style(\"bold\", true);\n  //   //   // sheet1.row(12).style(\"bold\", true);\n  //   //   // sheet1.row(19).style(\"bold\", true);\n  //   //   // sheet1.row(22).style(\"bold\", true);\n  //   //   // sheet1.row(27).style(\"bold\", true);\n  //   //   // sheet1.row(28).style(\"bold\", true);\n  //   //   // sheet1.row(38).style(\"bold\", true);\n  //   //   // sheet1.row(45).style(\"bold\", true);\n  //   //   // sheet1.row(48).style(\"bold\", true);\n  //   //   // sheet1.range(\"B2:\" + \"I2\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B12:\" + \"I12\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B19:\" + \"I19\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B22:\" + \"I22\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B28:\" + \"I28\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B38:\" + \"I38\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B45:\" + \"I45\").style(\"fill\", \"000000\");\n  //   //   // sheet1.range(\"B48:\" + \"I48\").style(\"fill\", \"000000\");\n  //   //   //static changes\n  //   //   // sheet1.row(headLabel.length + 7).style(\"bold\", true); // +5 for dynamic\n  //   //   range.style(\"border\", true);\n  //   //   return workbook.outputAsync().then((res) => {\n  //   //     var fname = document.getElementById(\"title02\").innerText;\n  //   //     console.log(fname, \"fname\");\n  //   //     saveAs(res, `${fname}.xlsx`);\n  //   //   });\n  //   // });\n  // }\n  const A4_PAPER_DIMENSIONS = {\n    width: 210,\n    height: 297,\n  };\n\n  const A4_PAPER_RATIO = A4_PAPER_DIMENSIONS.width / A4_PAPER_DIMENSIONS.height;\n\n  const imageDimensionsOnA4 = (dimensions) => {\n    const isLandscapeImage = dimensions.width >= dimensions.height;\n\n    if (isLandscapeImage) {\n      return {\n        width: A4_PAPER_DIMENSIONS.width,\n        height:\n          A4_PAPER_DIMENSIONS.width / (dimensions.width / dimensions.height),\n      };\n    }\n\n    const imageRatio = dimensions.width / dimensions.height;\n    if (imageRatio > A4_PAPER_RATIO) {\n      const imageScaleFactor =\n        (A4_PAPER_RATIO * dimensions.height) / dimensions.width;\n\n      const scaledImageHeight = A4_PAPER_DIMENSIONS.height * imageScaleFactor;\n\n      return {\n        height: scaledImageHeight,\n        width: scaledImageHeight * imageRatio,\n      };\n    }\n\n    return {\n      width:\n        A4_PAPER_DIMENSIONS.height / (dimensions.height / dimensions.width),\n      height: A4_PAPER_DIMENSIONS.height,\n    };\n  };\n  async function saveAssessmentExcel() {\n    var newData = exr;\n    var data = newData;\n    var header = [\n      \"Questions\",\n      \"Total Score\",\n      \"Average Score\",\n      \"Option 1\",\n      \"Option 2\",\n      \"Option 3\",\n      \"Option 4\",\n      \"Option 5\",\n    ];\n\n    var wsData = getSheetData(data, header);\n    var ws = XLSX.utils.aoa_to_sheet(wsData);\n\n    var wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\n\n    var fname = document.getElementById(\"title02\").innerText;\n    XLSX.writeFile(wb, `${fname}.xlsx`);\n  }\n  // async function saveAssessmentExcel() {\n  //   var newData = exr;\n\n  //   var data = newData;\n\n  //   var header = [\n  //     \"Questions\",\n  //     \"Total Score\",\n  //     \"Average Score\",\n  //     \"Option 1\",\n  //     \"Option 2\",\n  //     \"Option 3\",\n  //     \"Option 4\",\n  //     \"Option 5\",\n  //   ];\n  //   console.log(newData, \"newData\");\n\n  //   // XlsxPopulate.fromBlankAsync().then(async (workbook) => {\n  //   //   const sheet1 = workbook.sheet(0);\n  //   //   // const sheet2 = workbook.sheet(1);\n  //   //   // workbook.addSheet(SHEET2, 1);\n  //   //   const sheetData = getSheetData(data, header);\n\n  //   //   const totalColumns = sheetData[0].length;\n\n  //   //   sheet1.cell(\"A1\").value(sheetData);\n\n  //   //   const range = sheet1.usedRange();\n  //   //   const endColumn = String.fromCharCode(64 + totalColumns);\n  //   //   // sheet1.row(1).style(\"bold\", true);\n\n  //   //   // sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"000000\");\n  //   //   // range.style(\"border\", true);\n  //   //   return workbook.outputAsync().then((res) => {\n  //   //     var fname = document.getElementById(\"title02\").innerText;\n  //   //     console.log(fname, \"fname\");\n  //   //     saveAs(res, `${fname}.xlsx`);\n  //   //   });\n  //   // });\n  // }\n\n  const downloadImage = useCallback(async () => {\n    setLoading(true);\n    const pdf = new jsPDF();\n    // var width = pdf.internal.pageSize.getWidth() - 12;\n    // var height = 130;\n    const title = document.querySelector(`#title01`);\n    if (!title) return;\n    const canvas = await html2canvas(title);\n    const titleURL = canvas.toDataURL(\"image/png\");\n    const iDimensions = imageDimensionsOnA4({\n      width: document.querySelector(`#title01`).clientWidth,\n      height: document.querySelector(`#title01`).clientHeight,\n    });\n    pdf.addImage(\n      titleURL,\n      \"PNG\",\n      (A4_PAPER_DIMENSIONS.width - iDimensions.width) / 2,\n      (A4_PAPER_DIMENSIONS.height - iDimensions.height) / 2,\n      iDimensions.width,\n      iDimensions.height,\n      \"\",\n      \"FAST\"\n    );\n    pdf.addPage();\n    for (var i = 0; i <= chartData.length; i++) {\n      const pricingTableElmt = document.querySelector(`#charts${i}`);\n      if (!pricingTableElmt) return;\n\n      const canvas = await html2canvas(pricingTableElmt);\n      const dataURL = canvas.toDataURL(\"image/png\");\n\n      const imageDimensions = imageDimensionsOnA4({\n        width: document.querySelector(`#charts${i}`).clientWidth,\n        height: document.querySelector(`#charts${i}`).clientHeight,\n      });\n\n      links.push({\n        url: dataURL,\n        name: `chart${i}.png`,\n        type: \"image/png\",\n      });\n      //  pdf.addImage(dataURL, \"PNG\", 6, 6, width, height, \"\", \"FAST\");\n      pdf.addImage(\n        dataURL,\n        \"PNG\",\n        (A4_PAPER_DIMENSIONS.width - imageDimensions.width) / 2,\n        (A4_PAPER_DIMENSIONS.height - imageDimensions.height) / 2,\n        imageDimensions.width,\n        imageDimensions.height,\n        \"\",\n        \"FAST\"\n      );\n      if (links.length < chartData.length) {\n        pdf.addPage();\n      }\n\n      if (links.length == chartData.length) {\n        var fname = document.getElementById(\"title01\").innerText;\n        pdf.save(`${fname}.pdf`);\n        setLoading(false);\n      }\n\n      // downloadjs(dataURL, \"download.png\", \"image/png\");\n    }\n  }, []);\n  const exsave = (data) => {\n    console.log(data, \"iuhygfjhgvkmnb\");\n    var a = []; //excel whole data holder\n    var c = []; //percent object holder\n    var b = []; //data object holder\n    var cav = []; //average chart data\n    var headerLabel = []; // labels for excel\n    var dataset = []; // graph data holder\n    var collector; // condition\n    var ip = []; //percent chart data holder\n    //percentages data representer in graph\n    var poor = [];\n    var average = [];\n    var satisfactory = [];\n    var good = [];\n    var vgood = [];\n    var excellent = [];\n    //averages data representer in graph\n    var avrarr = [];\n    var apoor = [];\n    var aaverage = [];\n    var asatisfactory = [];\n    var agood = [];\n    var avgood = [];\n    var aexcellent = [];\n\n    //counting length of ratings type\n    let countRatings = data.filter((rate) => {\n      return rate.type.toLowerCase().includes(\"ratings\");\n    });\n    //seperate rating type questions\n    var b = data.map((bi, index) => {\n      if (bi.type == \"ratings\") {\n        collector = false;\n        var sum = bi.data.reduce((pv, cv) => pv + cv, 0);\n        //data object for excel\n        var dataobject = {\n          question: bi.label,\n          great: JSON.stringify(bi.data[5]),\n          verygood: JSON.stringify(bi.data[4]),\n          good: JSON.stringify(bi.data[3]),\n          satisfactory: JSON.stringify(bi.data[2]),\n          average: JSON.stringify(bi.data[1]),\n          poor: JSON.stringify(bi.data[0]),\n          totalScore: sum,\n          averageScore: (\n            (bi.data[5] * 5 +\n              bi.data[4] * 4 +\n              bi.data[3] * 3 +\n              bi.data[2] * 2 +\n              bi.data[1] * 1 +\n              bi.data[0] * 0) /\n            sum\n          ).toFixed(2),\n        };\n\n        console.log(dataobject, \"dataobject\");\n        //data object for percentage in excel\n        var percentobject = {\n          question: bi.label,\n          great: `${JSON.stringify(Math.trunc((bi.data[5] * 100) / sum))}%`,\n          verygood: `${JSON.stringify(Math.trunc((bi.data[4] * 100) / sum))}%`,\n          good: `${JSON.stringify(Math.trunc((bi.data[3] * 100) / sum))}%`,\n          satisfactory: `${JSON.stringify(\n            Math.trunc((bi.data[2] * 100) / sum)\n          )}%`,\n          average: `${JSON.stringify(Math.trunc((bi.data[1] * 100) / sum))}%`,\n          poor: `${JSON.stringify(Math.trunc((bi.data[0] * 100) / sum))}%`,\n        };\n\n        console.log(percentobject, \"percentobject\");\n        //data object for percentage in chart\n\n        var perc = {\n          question: bi.label,\n          great: Math.trunc((bi.data[5] * 100) / sum),\n          verygood: Math.trunc((bi.data[4] * 100) / sum),\n          good: Math.trunc((bi.data[3] * 100) / sum),\n          satisfactory: Math.trunc((bi.data[2] * 100) / sum),\n          average: Math.trunc((bi.data[1] * 100) / sum),\n          poor: Math.trunc((bi.data[0] * 100) / sum),\n        };\n\n        console.log(perc, \"perc\");\n\n        var s = [];\n        ip.push(perc);\n        console.log(\"ip2\", ip, index == 0);\n        //changed here added ladder\n        // if (index == 0) {\n        //   console.log(\"index2\", index);\n        //   b.push(\n        //     {\n        //       question: \"Program Relevance\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     dataobject\n        //   );\n        //   c.push(\n        //     {\n        //       question: \"Program Relevance\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     percentobject\n        //   );\n        //   console.log(b, c, \"bc\");\n        // } else if (index == 9) {\n        //   b.push(\n        //     {\n        //       question: \"Trainer Quality\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     dataobject\n        //   );\n        //   c.push(\n        //     {\n        //       question: \"Trainer Quality\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     percentobject\n        //   );\n        // } else if (index == 15) {\n        //   b.push(\n        //     {\n        //       question: \"Facilities and Infrastructures\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     dataobject\n        //   );\n        //   c.push(\n        //     {\n        //       question: \"Facilities and Infrastructures\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     percentobject\n        //   );\n        // } else if (index == 17) {\n        //   b.push(\n        //     {\n        //       question: \"Overall Score\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     dataobject\n        //   );\n        //   c.push(\n        //     {\n        //       question: \"Overall Score\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     percentobject\n        //   );\n        // } else if (index == 18) {\n        //   b.push(\n        //     {\n        //       question: \"Comments & Observation\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     dataobject\n        //   );\n        //   c.push(\n        //     {\n        //       question: \"Comments & Observation\",\n        //       great: 0,\n        //       verygood: 0,\n        //       good: 0,\n        //       satisfactory: 0,\n        //       average: 0,\n        //       poor: 0,\n        //       totalScore: 0,\n        //       averageScore: 0,\n        //     },\n        //     percentobject\n        //   );\n        // } else {\n        // }\n        b.push(dataobject);\n        c.push(percentobject);\n        //b.push(dataobject);\n\n        console.log(b, \"b-data\", countRatings);\n        cav.push(dataobject);\n        //\n\n        //when lenghth of objects matches with b which is (dataobject array)\n\n        //changed here + 5\n\n        if (countRatings.length == b.length) {\n          console.log(\n            \"countRatings.length + 4 == b.length\",\n            countRatings.length + 4 == b.length\n          );\n          // a = b.concat(s, c);\n          var poorTotal;\n          var averageTotal;\n          var satisfactoryTotal;\n          var goodTotal;\n          var vgoodTotal;\n          var excellentTotal;\n          var newSum;\n          // counting avaerages of each question object\n          const collectAvg = cav.map((av) => {\n            avrarr.push(parseFloat(av.averageScore));\n            apoor.push(parseFloat(av.poor));\n            aaverage.push(parseFloat(av.average));\n            asatisfactory.push(parseFloat(av.satisfactory));\n            agood.push(parseFloat(av.good));\n            avgood.push(parseFloat(av.verygood));\n            aexcellent.push(parseFloat(av.great));\n\n            return av;\n          });\n          //counting total to add additional fields as dataobjects in excel\n          poorTotal = apoor.reduce((pv, cv) => pv + cv, 0);\n          averageTotal = aaverage.reduce((pv, cv) => pv + cv, 0);\n          satisfactoryTotal = asatisfactory.reduce((pv, cv) => pv + cv, 0);\n          goodTotal = agood.reduce((pv, cv) => pv + cv, 0);\n          vgoodTotal = avgood.reduce((pv, cv) => pv + cv, 0);\n          excellentTotal = aexcellent.reduce((pv, cv) => pv + cv, 0);\n          newSum =\n            poorTotal +\n            averageTotal +\n            satisfactoryTotal +\n            goodTotal +\n            vgoodTotal +\n            excellentTotal;\n          s.push(\n            {\n              question: \"Total\",\n              great: JSON.stringify(excellentTotal),\n              verygood: JSON.stringify(vgoodTotal),\n              good: JSON.stringify(goodTotal),\n              satisfactory: JSON.stringify(satisfactoryTotal),\n              average: JSON.stringify(averageTotal),\n              poor: JSON.stringify(poorTotal),\n            },\n            {\n              question: \"Total Percentages\",\n              great: `${((excellentTotal * 100) / newSum).toFixed(2)}%`,\n              verygood: `${((vgoodTotal * 100) / newSum).toFixed(2)}%`,\n              good: `${((goodTotal * 100) / newSum).toFixed(2)}%`,\n              satisfactory: `${((satisfactoryTotal * 100) / newSum).toFixed(\n                2\n              )}%`,\n\n              average: `${((averageTotal * 100) / newSum).toFixed(2)}%`,\n              poor: `${((poorTotal * 100) / newSum).toFixed(2)}%`,\n            },\n            {\n              question: \"\",\n              great: \"\",\n              verygood: \"\",\n              good: \"\",\n              satisfactory: \"\",\n              average: \"\",\n              poor: \"\",\n            },\n            {\n              question: \"Parameters\",\n              great: \"Excellent\",\n              verygood: \"Very Good\",\n              good: \"Good\",\n              satisfactory: \"Satisfactory\",\n              average: \"Average\",\n              poor: \"Poor\",\n            }\n          );\n\n          // arranging dataset of percentages that are stored in ip for graph\n          console.log(\"ip\", ip);\n          const collect = ip.map((obj) => {\n            poor.push(obj.poor);\n            average.push(obj.average);\n            satisfactory.push(obj.satisfactory);\n            good.push(obj.good);\n            vgood.push(obj.verygood);\n            excellent.push(obj.great);\n            headerLabel.push(obj.question);\n\n            return obj;\n          });\n          dataset = [\n            {\n              label: \"Poor\",\n              backgroundColor: \"red\",\n              borderColor: \"red\",\n              borderWidth: 1,\n              data: poor,\n              barThickness: 9,\n            },\n            {\n              label: \"Average\",\n              backgroundColor: \"#ede500\",\n              borderColor: \"#ede500\",\n              borderWidth: 1,\n              data: average,\n              barThickness: 9,\n            },\n            {\n              label: \"Satisfactory\",\n              backgroundColor: \"orange\",\n              borderColor: \"orange\",\n              borderWidth: 1,\n              data: satisfactory,\n              barThickness: 9,\n            },\n            {\n              label: \"Good\",\n              backgroundColor: \"green\",\n              borderColor: \"green\",\n              borderWidth: 1,\n              data: good,\n              barThickness: 9,\n            },\n            {\n              label: \"Very Good\",\n              backgroundColor: \"#4a86ff\",\n              borderColor: \"#4a86ff\",\n              borderWidth: 1,\n              data: vgood,\n              // barPercentage: 2,\n              barThickness: 9,\n              // maxBarThickness: 8,\n            },\n            {\n              label: \"Excellent\",\n              backgroundColor: \"darkblue\",\n              borderColor: \"darkblue\",\n              borderWidth: 1,\n              data: excellent,\n              barThickness: 9,\n            },\n          ];\n          a = b.concat(s, c);\n        }\n      } else {\n        collector = true;\n        var sum = bi.data.reduce((pv, cv) => pv + cv, 0);\n        var inc = 1;\n        var dataobject = bi.data.reduce(\n          (a, b) => ((a[`opt${inc++}`] = JSON.stringify(b)), a),\n          {}\n        );\n        dataobject = {\n          question: bi.label,\n          totalScore: sum,\n          averageScore: sum / bi.data.length,\n          ...dataobject,\n        };\n\n        a.push(dataobject);\n      }\n    });\n    console.log(\n      headLabel,\n      dataset,\n      avrarr,\n      collector,\n      a,\n      \"headLabel, dataset,avrarr, collector, a.length\"\n    );\n    setHeadLabel(headerLabel);\n    setBars(dataset);\n    setAverages(avrarr);\n    setFormChanger(collector);\n    setexr(a);\n\n    // setBars(g);\n  };\n  const imageDownloader = async (i) => {\n    const pricingTableElmt = document.querySelector(`#charts${i}`);\n    if (!pricingTableElmt) return;\n\n    const canvas = await html2canvas(pricingTableElmt);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    var fname = document.querySelector(`#button${i}`).innerHTML;\n    downloadjs(dataURL, `${fname}.png`, \"image/png\");\n  };\n  console.log(ne, \"ne\");\n\n  return (\n    <div\n      id=\"report-container\"\n      className=\"flex flex-col justify-center items-center py-7  \"\n    >\n      <h1\n        id=\"title01\"\n        className=\"font-semibold flex w-full justify-center items-center  h-14 capitalize text-lg text-gray-700 \"\n      >\n        {/* {batchData?.assessmentRes?.assessmentType}\n        {\"\"} Report {\"\"}\n        {batchData?.teamInfo?.programName} */}\n        Chart {batchData?.assessmentRes?.assessmentType} Report_\n        {batchData?.teamInfo?.name}\n      </h1>\n      <h1\n        id=\"title02\"\n        className=\"hidden font-semibold  w-full justify-center items-center  h-14 capitalize text-lg text-gray-700 \"\n      >\n        {/* {batchData?.assessmentRes?.assessmentType}\n        {\"\"} Report {\"\"}\n        {batchData?.teamInfo?.programName} */}\n        Overview {batchData?.assessmentRes?.assessmentType} Report_\n        {batchData?.teamInfo?.name}\n      </h1>\n      <div className=\" flex w-full justify-between items-center px-8\">\n        {loading ? (\n          <span className=\"flex mt-5 w-fit items-center justify-center py-2 rounded-md px-5 text-sm  text-white font-medium\">\n            <Loader />\n          </span>\n        ) : (\n          <span className=\"flex mt-5 w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\">\n            <a href=\"#\" onClick={downloadImage}>\n              Download Overview Chart.pdf\n            </a>\n          </span>\n        )}\n        <div className=\"relative\">\n          <button\n            type=\"button\"\n            className=\"flex mt-5 w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n            // onClick={() => saveAdvanceExcel()}\n            onClick={() => {\n              exsave(ne);\n              setDownloader(!downloader);\n              setBarChanger(true);\n            }}\n          >\n            {/* <AiOutlineDownload className=\"text-xl mr-1\" /> */}\n            Generate Overview Report2\n          </button>\n          {downloader ? (\n            <div className=\" absolute  -mt-4 top-0 left-0  z-50  w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n              <div className=\" space-y-1\" role=\"none\">\n                {formChanger ? (\n                  <button\n                    onClick={() => saveAssessmentExcel()}\n                    className=\"text-gray-700 rounded-t-md   flex  w-full px-4 py-2 text-sm hover:bg-blue-500 hover:text-white\"\n                  >\n                    <AiOutlineDownload className=\"text-xl mr-1\" /> Download\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => saveAsExcel()}\n                    className=\"text-gray-700 rounded-t-md   flex  w-full px-4 py-2 text-sm hover:bg-blue-500 hover:text-white\"\n                  >\n                    <AiOutlineDownload className=\"text-xl mr-1\" /> Download\n                  </button>\n                )}\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {/* <button\n          type=\"button\"\n          className=\"flex mt-5 w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n          // onClick={() => saveAdvanceExcel()}\n          onClick={() => {\n            setBars(ave);\n            setBarChanger(true);\n          }}\n        >\n          <AiOutlineDownload className=\"text-xl mr-1\" />\n          Create Chart\n        </button> */}\n\n        {/* <button\n          type=\"button\"\n          className=\"flex w-fit  items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n          onClick={() => exsave(ne)}\n        >\n          save Excel\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"flex w-fit  items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n          onClick={() => saveAssessmentExcel()}\n        >\n          save Excel\n        </button> */}\n      </div>\n      {barChanger ? (\n        <div className=\"flex flex-col \">\n          <AverageChart headLabel={headLabel} bars={bars} averages={averages} />\n\n          <PercentChart headLabel={headLabel} bars={bars} averages={averages} />\n        </div>\n      ) : null}\n      {chartData.map((chart, index) => {\n        if (chart.type !== \"response\") {\n          const labels = chart.options;\n\n          const result = [\n            ...chart.data\n              .reduce((mp, o) => {\n                if (!mp.has(o)) mp.set(o, { option: o, count: 0 });\n\n                mp.get(o).count++;\n                return mp;\n              }, new Map())\n              .values(),\n          ];\n\n          let cd = [...result];\n\n          for (var i = 0; i <= labels?.length; i++) {\n            var c = result.map((j) => {\n              return j.option;\n            });\n\n            if (c.indexOf(i) == -1) {\n              cd.push({ option: i, count: 0 });\n            }\n          }\n\n          var firstRun = cd.sort(function (a, b) {\n            return a.option - b.option;\n          });\n\n          var g = [];\n          var newData = firstRun.map((d) => {\n            g.push(d.count);\n            return d.count;\n          });\n\n          ne.push({\n            label: chart.label,\n            data: g,\n            options: chart.options,\n            type: chart.type,\n          });\n          ave.push({\n            label: chart.label,\n            data: g,\n          });\n\n          const data = {\n            labels,\n            datasets: [\n              {\n                label: `Participants Responses (${chart.data.length})`,\n                data: newData,\n                backgroundColor: \"rgb(0,191,255,0.5)\",\n              },\n            ],\n\n            //datasets: chartData, labels.map(() =>faker.datatype.number({ min: 0, max: 1000 }) ),\n          };\n\n          const options = {\n            responsive: true,\n\n            plugins: {\n              legend: {\n                display: true,\n                position: \"top\",\n              },\n              title: {\n                display: true,\n                text: `${chart.label}`,\n              },\n              datalabels: {\n                formatter: (value, ctx) => {\n                  let datasets = ctx.chart.data.datasets;\n                  let percentage;\n                  if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n                    let sum = datasets[0].data.reduce((a, b) => a + b, 0);\n                    percentage = Math.round((value / sum) * 100) + \"%\";\n                    return percentage;\n                  } else {\n                    return percentage;\n                  }\n                },\n\n                color: \"darkgreen\",\n              },\n            },\n            scales: {\n              y: {\n                suggestedMin: 0,\n                suggestedMax: chart.data.length + 2,\n              },\n            },\n          };\n\n          return (\n            <div key={uuid_v4()} className=\"w-1/2 my-2 py-4 px-2\">\n              <Bar\n                id={`charts${index}`}\n                ref={ref}\n                options={options}\n                data={data}\n                plugins={[ChartDataLabels]}\n              />\n              <span className=\"text-md font-normal text-white px-3 py-1 rounded-md my-3 bg-sky-500\">\n                <button\n                  id={`button${index}`}\n                  type=\"button\"\n                  onClick={() => imageDownloader(index)}\n                >\n                  Download Chart #{index + 1}\n                </button>\n              </span>\n            </div>\n          );\n        } else {\n          return (\n            <div key={uuid_v4()} className=\"flex flex-col  w-[557.333px]\">\n              <div\n                id={`charts${index}`}\n                className=\"flex flex-col w-full justify-center items-center \"\n              >\n                <p className=\"text-sm space-y-1  text-gray-600 font-medium my-3\">\n                  {chart.label}\n                </p>\n                <div className=\"grid grid-cols-1 w-full gap-2 my-2\">\n                  {chart.data.map((re) => {\n                    return (\n                      <span key={uuid_v4()} className=\"w-full \">\n                        <p className=\"text-sm p-3 rounded-md text-gray-700 font-medium  bg-gray-200\">\n                          {re}\n                        </p>\n                      </span>\n                    );\n                  })}\n                </div>\n              </div>\n              <span className=\"text-md justify-start w-fit font-normal text-white px-3 py-1 rounded-md my-3 bg-sky-500\">\n                <button\n                  id={`button${index}`}\n                  type=\"button\"\n                  onClick={() => imageDownloader(index)}\n                >\n                  Download Response #{index + 1}\n                </button>\n              </span>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport default BarChart;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\nimport { v4 as uuid_v4 } from \"uuid\";\nimport { AiOutlineDownload } from \"react-icons/ai\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport * as XLSX from 'xlsx';\nimport { saveAs } from \"file-saver\";\n// import XlsxPopulate from \"xlsx-populate\";\nimport jsPDF from \"jspdf\";\nimport AverageChart from \"../charts/AverageChart\";\nimport PercentChart from \"../charts/PercentChart\";\nimport Loader from \"../../../Loader\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n\n  Title,\n  Tooltip,\n  Legend\n);\nfunction DynamicOverviewReport({ chartData, excelData, batchData }) {\n  console.log(batchData, \"batchData\");\n  const [exr, setexr] = useState([]);\n  const [downloader, setDownloader] = useState(false);\n  const [formChanger, setFormChanger] = useState(false);\n  const [barChanger, setBarChanger] = useState(false);\n  const [bars, setBars] = useState([]);\n  const [headLabel, setHeadLabel] = useState([]);\n  const [averages, setAverages] = useState([]);\n  const [showChart, setShowChart] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (excelData == \"feedback\") {\n      setShowChart(false);\n      setFormChanger(false);\n    } else {\n      setShowChart(true);\n      setFormChanger(true);\n    }\n  }, []);\n\n  const ref = useRef(null);\n\n  var counter = 1;\n  var ne = [];\n  var ave = [];\n  var links = [];\n  const fileName = `${batchData?.teamInfo?.createdDate?.substring(0, 10)} ${batchData?.assessmentRes?.assessmentType\n    } Report ${batchData?.teamInfo?.programName} ${batchData?.teamInfo?.tranineeName\n    }`.toUpperCase();\n  // const handleCaptureClick = useCallback(async () => {\n\n  //   const pricingTableElmt = document.querySelector(\"#report-container\");\n  //   if (!pricingTableElmt) return;\n\n  //   const copiedPricingTableElmt = pricingTableElmt.cloneNode(true); //as HTMLElement;\n  //   copiedPricingTableElmt.style.position = \"fixed\";\n  //   copiedPricingTableElmt.style.right = \"100%\";\n  //   copiedPricingTableElmt.style.height = \"auto\";\n\n  //   document.body.append(copiedPricingTableElmt);\n\n  //   const canvas = await html2canvas(copiedPricingTableElmt);\n\n  //   copiedPricingTableElmt.remove();\n\n  //   const dataURL = canvas.toDataURL(\"image/png\");\n  //   downloadjs(dataURL, \"download.png\", \"image/png\");\n  // }, []);\n\n  //const file = `${reportsData?.assessmentRes?.assessmentType}_assessment_${reportsData?.assessmentRes?.name}_${reportsData?.teamInfo?.tranineeName}`;\n  // const type = reportData?.assessmentRes?.assessmentType;\n  const file = \"newexcel\";\n  function getSheetData(data, header) {\n    var lengthArray = data.map((t) => Object.keys(t).length);\n    var BigObjectIndex = lengthArray.indexOf(Math.max.apply(null, lengthArray));\n\n    // console.log(data[BigObjectIndex], \"uuuuuuu\");\n    var fields = Object.keys(data[BigObjectIndex]);\n    var sheetData = data.map(function (row) {\n      return fields.map(function (fieldName) {\n        return row[fieldName] ? row[fieldName] : \"\";\n      });\n    });\n\n    sheetData.unshift(header);\n\n    return sheetData;\n  }\n\n  // async function saveAsExcel() {\n  //   var newData = exr;\n\n  //   console.log(newData, \"newData\");\n\n  //   var data = newData;\n\n  //   var header = ne[0].options\n\n  //   XlsxPopulate.fromBlankAsync().then(async (workbook) => {\n  //     const sheet1 = workbook.sheet(0);\n  //     // const sheet2 = workbook.sheet(1);\n  //     // workbook.addSheet(SHEET2, 1);\n  //     const sheetData = getSheetData(data, header);\n\n  //     const totalColumns = sheetData[0].length;\n\n  //     sheet1.cell(\"A1\").value(sheetData);\n\n  //     const range = sheet1.usedRange();\n  //     const endColumn = String.fromCharCode(64 + totalColumns);\n  //     sheet1.column(\"A\").width(80).hidden(false);\n  //     sheet1.row(1).style(\"bold\", true);\n\n  //     sheet1.row(headLabel.length + 5).style(\"bold\", true); // +5 for dynamic\n  //     range.style(\"border\", true);\n\n  //     return workbook.outputAsync().then((res) => {\n  //       var fname = document.getElementById(\"title02\").innerText;\n\n  //       saveAs(res, `${fname}.xlsx`);\n  //     });\n  //   });\n  // }\n  async function saveAsExcel() {\n    var newData = exr;\n\n    console.log(newData, \"newData\");\n\n    var data = newData;\n\n    var header = ne[0].options;\n\n    const ws = XLSX.utils.aoa_to_sheet([header, ...getSheetData(data, header)]);\n\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1');\n\n    const wopts = { bookType: 'xlsx', bookSST: false, type: 'binary' };\n    const wbout = XLSX.write(wb, wopts);\n\n    function s2ab(s) {\n      const buf = new ArrayBuffer(s.length);\n      const view = new Uint8Array(buf);\n      for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n      return buf;\n    }\n\n    const fname = document.getElementById(\"title02\").innerText;\n    saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), `${fname}.xlsx`);\n  }\n  async function saveAssessmentExcel() {\n    var newData = exr;\n\n    var data = newData;\n\n    var header = [\n      \"Questions\",\n      \"Total Score\",\n      \"Average Score\",\n      \"Option 1\",\n      \"Option 2\",\n      \"Option 3\",\n      \"Option 4\",\n      \"Option 5\",\n    ];\n\n    // XlsxPopulate.fromBlankAsync().then(async (workbook) => {\n    //   const sheet1 = workbook.sheet(0);\n    //   // const sheet2 = workbook.sheet(1);\n    //   // workbook.addSheet(SHEET2, 1);\n    //   const sheetData = getSheetData(data, header);\n\n    //   const totalColumns = sheetData[0].length;\n\n    //   sheet1.cell(\"A1\").value(sheetData);\n\n    //   const range = sheet1.usedRange();\n    //   const endColumn = String.fromCharCode(64 + totalColumns);\n    //   sheet1.row(1).style(\"bold\", true);\n\n    //   sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"000000\");\n    //   range.style(\"border\", true);\n    //   return workbook.outputAsync().then((res) => {\n    //     var fname = document.getElementById(\"title02\").innerText;\n\n    //     saveAs(res, `${fname}.xlsx`);\n    //     // saveAs(res, `${fileName}.xlsx`);\n    //   });\n    // });\n  }\n\n  const A4_PAPER_DIMENSIONS = {\n    width: 210,\n    height: 297,\n  };\n\n  const A4_PAPER_RATIO = A4_PAPER_DIMENSIONS.width / A4_PAPER_DIMENSIONS.height;\n\n  const imageDimensionsOnA4 = (dimensions) => {\n    const isLandscapeImage = dimensions.width >= dimensions.height;\n\n    if (isLandscapeImage) {\n      return {\n        width: A4_PAPER_DIMENSIONS.width,\n        height:\n          A4_PAPER_DIMENSIONS.width / (dimensions.width / dimensions.height),\n      };\n    }\n\n    const imageRatio = dimensions.width / dimensions.height;\n    if (imageRatio > A4_PAPER_RATIO) {\n      const imageScaleFactor =\n        (A4_PAPER_RATIO * dimensions.height) / dimensions.width;\n\n      const scaledImageHeight = A4_PAPER_DIMENSIONS.height * imageScaleFactor;\n\n      return {\n        height: scaledImageHeight,\n        width: scaledImageHeight * imageRatio,\n      };\n    }\n\n    return {\n      width:\n        A4_PAPER_DIMENSIONS.height / (dimensions.height / dimensions.width),\n      height: A4_PAPER_DIMENSIONS.height,\n    };\n  };\n\n  const downloadImage = useCallback(async () => {\n    setLoading(true);\n    const pdf = new jsPDF();\n    // var width = pdf.internal.pageSize.getWidth() - 12;\n    // var height = 130;\n\n    //  pdf.text(fileName, 40, 40);\n    const title = document.querySelector(`#title01`);\n    if (!title) return;\n    const canvas = await html2canvas(title);\n    const titleURL = canvas.toDataURL(\"image/png\");\n    const iDimensions = imageDimensionsOnA4({\n      width: document.querySelector(`#title01`).clientWidth,\n      height: document.querySelector(`#title01`).clientHeight,\n    });\n    pdf.addImage(\n      titleURL,\n      \"PNG\",\n      (A4_PAPER_DIMENSIONS.width - iDimensions.width) / 2,\n      (A4_PAPER_DIMENSIONS.height - iDimensions.height) / 2,\n      iDimensions.width,\n      iDimensions.height,\n      \"\",\n      \"FAST\"\n    );\n\n    pdf.addPage();\n    for (var i = 0; i <= chartData.length; i++) {\n      const pricingTableElmt = document.querySelector(`#charts${i}`);\n      if (!pricingTableElmt) return;\n\n      const canvas = await html2canvas(pricingTableElmt);\n      const dataURL = canvas.toDataURL(\"image/png\");\n\n      const imageDimensions = imageDimensionsOnA4({\n        width: document.querySelector(`#charts${i}`).clientWidth,\n        height: document.querySelector(`#charts${i}`).clientHeight,\n      });\n\n      links.push({\n        url: dataURL,\n        name: `chart${i}.png`,\n        type: \"image/png\",\n        width: pricingTableElmt.clientWidth,\n        height: pricingTableElmt.clientHeight,\n      });\n      //pdf.addImage(dataURL, \"PNG\", 6, 6, width, height, \"\", \"FAST\");\n\n      pdf.addImage(\n        dataURL,\n        \"PNG\",\n        (A4_PAPER_DIMENSIONS.width - imageDimensions.width) / 2,\n        (A4_PAPER_DIMENSIONS.height - imageDimensions.height) / 2,\n        imageDimensions.width,\n        imageDimensions.height,\n        \"\",\n        \"FAST\"\n      );\n      if (links.length < chartData.length) {\n        pdf.addPage();\n      }\n\n      if (links.length == chartData.length) {\n        var fname = document.getElementById(\"title01\").innerText;\n\n        pdf.save(`${fname}.pdf`);\n\n        setLoading(false);\n      }\n\n      // downloadjs(dataURL, \"download.png\", \"image/png\");\n    }\n  }, []);\n  const exsave = (data) => {\n    console.log(data, \"ne\");\n    var a = []; //excel whole data holder\n    var c = []; //percent object holder\n    var b = []; //data object holder\n    var headerLabel = []; // labels for excel\n    var dataset = []; // graph data holder\n    var collector; // condition\n    var ip = []; //percent chart data holder\n    //percentages data representer in graph\n    let data1 = [];\n    let data2 = [];\n    let data3 = [];\n    let data4 = [];\n    let data5 = [];\n    let data6 = [];\n    let data7 = [];\n    let data8 = [];\n    let data9 = [];\n    let data10 = [];\n\n    let avdata1 = [];\n    let avdata2 = [];\n    let avdata3 = [];\n    let avdata4 = [];\n    let avdata5 = [];\n    let avdata6 = [];\n    let avdata7 = [];\n    let avdata8 = [];\n    let avdata9 = [];\n    let avdata10 = [];\n\n    var poor = [];\n    var average = [];\n    var satisfactory = [];\n    var good = [];\n    var vgood = [];\n    var excellent = [];\n    //averages data representer in graph\n    var avrarr = [];\n    var apoor = [];\n    var asatisfactory = [];\n    var aaverage = [];\n    var agood = [];\n    var avgood = [];\n    var aexcellent = [];\n\n    //counting length of ratings type\n    let countRatings = data.filter((rate) => {\n      return rate.type.toLowerCase().includes(\"ratings\");\n    });\n    //seperate rating type questions\n    var b = data.map((bi, index) => {\n      if (bi.type == \"ratings\") {\n        collector = false;\n        var sum = bi.data.reduce((pv, cv) => pv + cv, 0);\n        //data object for excel\n        var dataobject = {\n          question: bi.label,\n          data1: bi.data[0] ? JSON.stringify(bi.data[0]) : null,\n          data2: bi.data[1] ? JSON.stringify(bi.data[1]) : null,\n          data3: bi.data[2] ? JSON.stringify(bi.data[2]) : null,\n          data4: bi.data[3] ? JSON.stringify(bi.data[3]) : null,\n          data5: bi.data[4] ? JSON.stringify(bi.data[4]) : null,\n          data6: bi.data[5] ? JSON.stringify(bi.data[5]) : null,\n          data7: bi.data[6] ? JSON.stringify(bi.data[6]) : null,\n          data8: bi.data[7] ? JSON.stringify(bi.data[7]) : null,\n          data9: bi.data[8] ? JSON.stringify(bi.data[8]) : null,\n          data10: bi.data[9] ? JSON.stringify(bi.data[9]) : null,\n          totalScore: sum,\n          averageScore: (\n            (\n              (bi.data[9] || 0) * 10 +\n              (bi.data[8] || 0) * 9 +\n              (bi.data[7] || 0) * 8 +\n              (bi.data[6] || 0) * 7 +\n              (bi.data[5] || 0) * 6 +\n              (bi.data[4] || 0) * 5 +\n              (bi.data[3] || 0) * 4 +\n              (bi.data[2] || 0) * 3 +\n              (bi.data[1] || 0) * 2 +\n              (bi.data[0] || 0) * 1) /\n            sum\n          ).toFixed(2),\n        };\n\n        console.log(dataobject);\n\n        //data object for percentage in excel\n        var percentobject = {\n          question: bi.label,\n          data1: bi.data[0] ? Math.trunc((bi.data[0] * 100) / sum) + \"%\" : null,\n          data2: bi.data[1] ? Math.trunc((bi.data[1] * 100) / sum) + \"%\" : null,\n          data3: bi.data[2] ? Math.trunc((bi.data[2] * 100) / sum) + \"%\" : null,\n          data4: bi.data[3] ? Math.trunc((bi.data[3] * 100) / sum) + \"%\" : null,\n          data5: bi.data[4] ? Math.trunc((bi.data[4] * 100) / sum) + \"%\" : null,\n          data6: bi.data[5] ? Math.trunc((bi.data[5] * 100) / sum) + \"%\" : null,\n          data7: bi.data[6] ? Math.trunc((bi.data[6] * 100) / sum) + \"%\" : null,\n          data8: bi.data[7] ? Math.trunc((bi.data[7] * 100) / sum) + \"%\" : null,\n          data9: bi.data[8] ? Math.trunc((bi.data[8] * 100) / sum) + \"%\" : null,\n          data10: bi.data[9] ? Math.trunc((bi.data[9] * 100) / sum) + \"%\" : null,\n          // poor: `${JSON.stringify(Math.trunc((bi.data[0] * 100) / sum))}%`,\n          // average: `${JSON.stringify(Math.trunc((bi.data[1] * 100) / sum))}%`,\n          // satisfactory: `${JSON.stringify(\n          //   Math.trunc((bi.data[2] * 100) / sum)\n          // )}%`,\n          // good: `${JSON.stringify(Math.trunc((bi.data[3] * 100) / sum))}%`,\n          // verygood: `${JSON.stringify(Math.trunc((bi.data[4] * 100) / sum))}%`,\n          // great: `${JSON.stringify(Math.trunc((bi.data[5] * 100) / sum))}%`,\n        };\n\n        //data object for percentage in chart\n\n        var perc = {\n\n          question: bi.label,\n          data1: bi.data[0] ? Math.trunc((bi.data[0] * 100) / sum) : null,\n          data2: bi.data[1] ? Math.trunc((bi.data[1] * 100) / sum) : null,\n          data3: bi.data[2] ? Math.trunc((bi.data[2] * 100) / sum) : null,\n          data4: bi.data[3] ? Math.trunc((bi.data[3] * 100) / sum) : null,\n          data5: bi.data[4] ? Math.trunc((bi.data[4] * 100) / sum) : null,\n          data6: bi.data[5] ? Math.trunc((bi.data[5] * 100) / sum) : null,\n          data7: bi.data[6] ? Math.trunc((bi.data[6] * 100) / sum) : null,\n          data8: bi.data[7] ? Math.trunc((bi.data[7] * 100) / sum) : null,\n          data9: bi.data[8] ? Math.trunc((bi.data[8] * 100) / sum) : null,\n          data10: bi.data[9] ? Math.trunc((bi.data[9] * 100) / sum) : null,\n          // poor: Math.trunc((bi.data[0] * 100) / sum),\n          // average: Math.trunc((bi.data[1] * 100) / sum),\n          // satisfactory: Math.trunc((bi.data[2] * 100) / sum),\n          // good: Math.trunc((bi.data[3] * 100) / sum),\n          // verygood: Math.trunc((bi.data[4] * 100) / sum),\n          // great: Math.trunc((bi.data[5] * 100) / sum),\n        };\n\n        var s = [];\n        ip.push(perc);\n        //changed here added ladder\n\n        b.push(dataobject);\n        c.push(percentobject);\n        //when lenghth of objects matches with b which is (dataobject array)\n\n        //changed here + 5\n        // console.log(b.length, b, \"ppppppppppppppppppppppppppppppppppppp\");\n        if (countRatings.length == b.length) {\n          // a = b.concat(s, c);\n          var data1Total;\n          var data2Total;\n          var data3Total;\n          var data4Total;\n          var data5Total;\n          var data6Total;\n          var data7Total;\n          var data8Total;\n          var data9Total;\n          var data10Total;\n\n\n          var averageTotal;\n          var satisfactoryTotal;\n          var goodTotal;\n          var vgoodTotal;\n          var excellentTotal;\n          var newSum;\n          // counting avaerages of each question object\n          const collectAvg = b.map((av) => {\n            avrarr.push(parseFloat(av.averageScore));\n            avdata1.push(parseFloat(av.data1));\n            avdata2.push(parseFloat(av.data2));\n            avdata3.push(parseFloat(av.data3));\n            avdata4.push(parseFloat(av.data4));\n            avdata5.push(parseFloat(av.data5));\n            avdata6.push(parseFloat(av.data6));\n            avdata7.push(parseFloat(av.data7));\n            avdata8.push(parseFloat(av.data8));\n            avdata9.push(parseFloat(av.data9));\n            avdata10.push(parseFloat(av.data10));\n            // apoor.push(parseFloat(av.poor));\n            // aaverage.push(parseFloat(av.average));\n            // asatisfactory.push(parseFloat(av.satisfactory));\n            // agood.push(parseFloat(av.good));\n            // avgood.push(parseFloat(av.verygood));\n            // aexcellent.push(parseFloat(av.great));\n\n            return av;\n          });\n          //counting total to add additional fields as dataobjects in excel\n\n          data1Total = avdata1.reduce((pv, cv) => pv + cv, 0);\n          data2Total = avdata2.reduce((pv, cv) => pv + cv, 0);\n          data3Total = avdata3.reduce((pv, cv) => pv + cv, 0);\n          data4Total = avdata4.reduce((pv, cv) => pv + cv, 0);\n          data5Total = avdata5.reduce((pv, cv) => pv + cv, 0);\n          data6Total = avdata6.reduce((pv, cv) => pv + cv, 0);\n          data7Total = avdata7.reduce((pv, cv) => pv + cv, 0);\n          data8Total = avdata8.reduce((pv, cv) => pv + cv, 0);\n          data9Total = avdata9.reduce((pv, cv) => pv + cv, 0);\n          data10Total = avdata10.reduce((pv, cv) => pv + cv, 0);\n          // poorTotal = apoor.reduce((pv, cv) => pv + cv, 0);\n          // averageTotal = aaverage.reduce((pv, cv) => pv + cv, 0);\n          // satisfactoryTotal = asatisfactory.reduce((pv, cv) => pv + cv, 0);\n          // goodTotal = agood.reduce((pv, cv) => pv + cv, 0);\n          // vgoodTotal = avgood.reduce((pv, cv) => pv + cv, 0);\n          // excellentTotal = aexcellent.reduce((pv, cv) => pv + cv, 0);\n          newSum =\n            data1Total +\n            data2Total +\n            data3Total +\n            data4Total +\n            data5Total +\n            data6Total +\n            data7Total +\n            data8Total +\n            data9Total +\n            data10Total;\n          // poorTotal +\n          // averageTotal +\n          // satisfactoryTotal +\n          // goodTotal +\n          // vgoodTotal +\n          // excellentTotal;\n          s.push(\n            {\n              question: \"Total\",\n              data1: JSON.stringify(data1Total),\n              data2: JSON.stringify(data2Total),\n              data3: JSON.stringify(data3Total),\n              data4: JSON.stringify(data4Total),\n              data5: JSON.stringify(data5Total),\n              data6: JSON.stringify(data6Total),\n              data7: JSON.stringify(data7Total),\n              data8: JSON.stringify(data8Total),\n              data9: JSON.stringify(data9Total),\n              data10: JSON.stringify(data10Total),\n              // average: JSON.stringify(averageTotal),\n              // satisfactory: JSON.stringify(satisfactoryTotal),\n              // good: JSON.stringify(goodTotal),\n              // verygood: JSON.stringify(vgoodTotal),\n              // great: JSON.stringify(excellentTotal),\n            },\n            {\n              question: \"Total Percentages\",\n              data1: `${((data1Total * 100) / newSum).toFixed(2)}%`,\n              data2: `${((data2Total * 100) / newSum).toFixed(2)}%`,\n              data3: `${((data3Total * 100) / newSum).toFixed(2)}%`,\n              data4: `${((data4Total * 100) / newSum).toFixed(2)}%`,\n              data5: `${((data5Total * 100) / newSum).toFixed(2)}%`,\n              data6: `${((data6Total * 100) / newSum).toFixed(2)}%`,\n              data7: `${((data7Total * 100) / newSum).toFixed(2)}%`,\n              data8: `${((data8Total * 100) / newSum).toFixed(2)}%`,\n              data9: `${((data9Total * 100) / newSum).toFixed(2)}%`,\n              data10: `${((data10Total * 100) / newSum).toFixed(2)}%`,\n              // poor: `${((poorTotal * 100) / newSum).toFixed(2)}%`,\n              // average: `${((averageTotal * 100) / newSum).toFixed(2)}%`,\n              // satisfactory: `${((satisfactoryTotal * 100) / newSum).toFixed(\n              //   2\n              // )}%`,\n              // good: `${((goodTotal * 100) / newSum).toFixed(2)}%`,\n              // verygood: `${((vgoodTotal * 100) / newSum).toFixed(2)}%`,\n              // great: `${((excellentTotal * 100) / newSum).toFixed(2)}%`,\n            },\n            {\n              question: \"\",\n              poor: \"\",\n              average: \"\",\n              satisfactory: \"\",\n              good: \"\",\n              verygood: \"\",\n              great: \"\",\n            },\n            {\n              question: \"Parameters\",\n              poor: \"Poor\",\n              average: \"Average\",\n              satisfactory: \"Satisfactory\",\n              good: \"Good\",\n              verygood: \"Very Good\",\n              great: \"Excellent\",\n            }\n          );\n\n          // arranging dataset of percentages that are stored in ip for graph\n          const collect = ip.map((obj) => {\n            data1.push(obj.data1);\n            data2.push(obj.data2);\n            data3.push(obj.data3);\n            data4.push(obj.data4);\n            data5.push(obj.data5);\n            data6.push(obj.data6);\n            data7.push(obj.data7);\n            data8.push(obj.data8);\n            data9.push(obj.data9);\n            data10.push(obj.data10);\n            // poor.push(obj.poor);\n            // average.push(obj.average);\n            // satisfactory.push(obj.satisfactory);\n            // good.push(obj.good);\n            // vgood.push(obj.verygood);\n            // excellent.push(obj.great);\n            headerLabel.push(obj.question);\n\n            return obj;\n          });\n\n          const LabelData = ne[0].options; // Assuming ne[0].options is an array\n\n          const dataArray = [data1, data2, data3, data4, data5, data6, data7, data8, data9, data10];\n\n          const dataPoints = [];\n          console.log(\"----------------dataArray--------------\", dataArray)\n\n          dataArray.forEach((data, index) => {\n            // if (data && data.length > 0 && dataArray.length >= LabelData.length) {\n            //   dataArray.forEach((data, index) => {\n            // Check if data is an array and has at least one non-null value\n            if (Array.isArray(data) && data.some(value => value !== null)) {\n              dataPoints.push({\n                label: LabelData[index],\n                backgroundColor: generateRandomColor(),\n                borderColor: generateRandomColor(),\n                borderWidth: 1,\n                data: data,\n                barThickness: 11,\n              });\n            }\n          });\n\n\n          dataset = [\n            // ... your previous dataset\n            // Add the dynamically generated dataPoints here\n            ...dataPoints,\n          ];\n\n          // Print the final dataset\n          console.log(\"dataset\", dataset);\n          // let labelColors = [\n          //   '#008FFB',\n          //   '#00E396',\n          //   '#FEB019',\n          //   '#FF4560',\n          //   '#775DD0',\n          //   '#D3D3D3',\n          //   '#B19CD9',\n          //   '#FF7F50',\n          //   '#20B2AA',\n          //   '#FF6347',\n          // ];\n\n          function generateRandomColor() {\n            let labelColors = [\n              '#008FFB',\n              '#00E396',\n              '#FEB019',\n              '#FF4560',\n              '#775DD0',\n              '#D3D3D3',\n              '#B19CD9',\n              '#FF7F50',\n              '#20B2AA',\n              '#FF6347',\n            ];\n            const randomIndex = Math.floor(Math.random() * labelColors.length);\n            return labelColors[randomIndex];\n          }\n\n          // Function to generate a random color\n          // function generateRandomColor() {\n          //   const letters = '0123456789ABCDEF';\n          //   let color = '#';\n          //   for (let i = 0; i < 6; i++) {\n          //     color += letters[Math.floor(Math.random() * 16)];\n          //   }\n          //   return color;\n          // }\n          // dataset = [\n          //   {\n          //     label: \"Poor\",\n          //     backgroundColor: \"#C2322D\",\n          //     borderColor: \"#C2322D\",\n          //     borderWidth: 1,\n          //     data: data1,\n          //     barThickness: 11,\n          //   },\n          //   {\n          //     label: \"Average\",\n          //     backgroundColor: \"#E0B83F\",\n          //     borderColor: \"#E0B83F\",\n          //     borderWidth: 1,\n          //     data: average,\n          //     barThickness: 11,\n          //   },\n          //   {\n          //     label: \"Satisfactory\",\n          //     backgroundColor: \"#E9083F\",\n          //     borderColor: \"#E9083F\",\n          //     borderWidth: 1,\n          //     data: satisfactory,\n          //     barThickness: 11,\n          //   },\n          //   {\n          //     label: \"Good\",\n          //     backgroundColor: \"#0c637d\",\n          //     borderColor: \"#0c637d\",\n          //     borderWidth: 1,\n          //     data: good,\n          //     barThickness: 11,\n          //   },\n          //   {\n          //     label: \"Very Good\",\n          //     backgroundColor: \"#9E3EC7\",\n          //     borderColor: \"#9E3EC7\",\n          //     borderWidth: 1,\n          //     data: vgood,\n          //     // barPercentage: 2,\n          //     barThickness: 11,\n          //     // maxBarThickness: 8,\n          //   },\n          //   {\n          //     label: \"Excellent\",\n          //     backgroundColor: \"blue\",\n          //     borderColor: \"blue\",\n          //     borderWidth: 1,\n          //     data: excellent,\n          //     barThickness: 11,\n          //   },\n          // ];\n\n          a = b.concat(s, c);\n        }\n      } else {\n        collector = true;\n        var sum = bi.data.reduce((pv, cv) => pv + cv, 0);\n        var inc = 1;\n        var dataobject = bi.data.reduce(\n          (a, b) => ((a[`opt${inc++}`] = JSON.stringify(b)), a),\n          {}\n        );\n        dataobject = {\n          question: bi.label,\n          totalScore: sum,\n          averageScore: sum / bi.data.length,\n          ...dataobject,\n        };\n\n        a.push(dataobject);\n      }\n    });\n    console.log(a, \"setexr\");\n    setHeadLabel(headerLabel);\n    setBars(dataset);\n    setAverages(avrarr);\n    //setFormChanger(collector);\n    setexr(a);\n\n    // setBars(g);\n  };\n  const imageDownloader = async (i) => {\n    const pricingTableElmt = document.querySelector(`#charts${i}`);\n    if (!pricingTableElmt) return;\n\n    const canvas = await html2canvas(pricingTableElmt);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    downloadjs(dataURL, \"download.png\", \"image/png\");\n  };\n\n  return (\n    <div\n      id=\"report-container\"\n      className=\"flex flex-col justify-center items-center py-7  \"\n    >\n      <h1\n        id=\"title01\"\n        className=\"font-semibold flex w-full justify-center items-center  h-14 capitalize text-lg text-gray-700 \"\n      >\n        {/* {batchData?.assessmentRes?.assessmentType}\n        {\"\"} Report {\"\"}\n        {batchData?.teamInfo?.programName} */}\n        Chart_{batchData?.assessmentRes?.assessmentType} Report_\n        {batchData?.teamInfo?.teamName}\n      </h1>\n      <h1\n        id=\"title02\"\n        className=\"hidden font-semibold  w-full justify-center items-center  h-14 capitalize text-lg text-gray-700 \"\n      >\n        {/* {batchData?.assessmentRes?.assessmentType}\n        {\"\"} Report {\"\"}\n        {batchData?.teamInfo?.programName} */}\n        Overview{batchData?.assessmentRes?.assessmentType} Report _\n        {batchData?.teamInfo?.teamName}\n      </h1>\n      <div className=\" flex w-full justify-between items-center px-8\">\n        {loading ? (\n          <span className=\"flex mt-5 w-fit items-center justify-center py-2 rounded-md px-5 text-sm  text-white font-medium\">\n            <Loader />\n          </span>\n        ) : (\n          <span className=\"flex mt-5 w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\">\n            <a href=\"#\" onClick={downloadImage}>\n              Download Overview Chart.pdf\n            </a>\n          </span>\n        )}\n        <div className=\"relative\">\n          <button\n            type=\"button\"\n            className=\"flex mt-5 w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n            // onClick={() => saveAdvanceExcel()}\n            onClick={() => {\n              exsave(ne);\n              setDownloader(!downloader);\n              setBarChanger(true);\n            }}\n          >\n            {/* <AiOutlineDownload className=\"text-xl mr-1\" /> */}\n            Generate Overview Report\n          </button>\n          {downloader ? (\n            <div className=\" absolute  -mt-4 top-0 left-0  z-50  w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n              <div className=\" space-y-1\" role=\"none\">\n                {formChanger ? (\n                  <button\n                    onClick={() => saveAssessmentExcel()}\n                    className=\"text-gray-700 rounded-t-md   flex  w-full px-4 py-2 text-sm hover:bg-blue-500 hover:text-white\"\n                  >\n                    <AiOutlineDownload className=\"text-xl mr-1\" /> Download\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => saveAsExcel()}\n                    className=\"text-gray-700 rounded-t-md   flex  w-full px-4 py-2 text-sm hover:bg-blue-500 hover:text-white\"\n                  >\n                    <AiOutlineDownload className=\"text-xl mr-1\" /> Download\n                  </button>\n                )}\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {/* <button\n          type=\"button\"\n          className=\"flex mt-5 w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n          // onClick={() => saveAdvanceExcel()}\n          onClick={() => {\n            setBars(ave);\n            setBarChanger(true);\n          }}\n        >\n          <AiOutlineDownload className=\"text-xl mr-1\" />\n          Create Chart\n        </button> */}\n\n        {/* <button\n          type=\"button\"\n          className=\"flex w-fit  items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n          onClick={() => exsave(ne)}\n        >\n          save Excel\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"flex w-fit  items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n          onClick={() => saveAssessmentExcel()}\n        >\n          save Excel\n        </button> */}\n      </div>\n      {showChart ? null : (\n        <>\n          {barChanger ? (\n            <div className=\"flex flex-col \">\n              <AverageChart\n                headLabel={headLabel}\n                bars={bars}\n                averages={averages}\n              />\n\n              <PercentChart\n                headLabel={headLabel}\n                bars={bars}\n                averages={averages}\n              />\n            </div>\n          ) : null}\n        </>\n      )}\n      {chartData.map((chart, index) => {\n        if (chart.type == \"ratings\") {\n          const labels = chart.options;\n          const result = [\n            ...chart.data\n              .reduce((mp, o) => {\n                if (!mp.has(o)) mp.set(o, { option: o, count: 0 });\n\n                mp.get(o).count++;\n                return mp;\n              }, new Map())\n              .values(),\n          ];\n\n          let cd = [...result];\n          for (var i = 1; i <= labels?.length; i++) {\n            var c = result.map((j) => {\n              return j.option;\n            });\n\n            if (c.indexOf(i) == -1) {\n              cd.push({ option: i, count: 0 });\n            }\n          }\n\n          var firstRun = cd.sort(function (a, b) {\n            return a.option - b.option;\n          });\n\n          var g = [];\n          var newData = firstRun.map((d) => {\n            g.push(d.count);\n            return d.count;\n          });\n\n          ne.push({\n            label: chart.label,\n            data: g,\n            options: chart.options,\n            type: chart.type,\n          });\n          ave.push({\n            label: chart.label,\n            data: g,\n          });\n          const data = {\n            labels,\n            datasets: [\n              {\n                label: `Participants Responses (${chart.data.length})`,\n                data: newData,\n                backgroundColor: \"rgb(0,191,255,0.5)\",\n              },\n            ],\n\n            //datasets: chartData, labels.map(() =>faker.datatype.number({ min: 0, max: 1000 }) ),\n          };\n\n          const options = {\n            responsive: true,\n\n            plugins: {\n              legend: {\n                display: true,\n                position: \"top\",\n              },\n              title: {\n                display: true,\n                text: `${chart.label}`,\n              },\n              datalabels: {\n                formatter: (value, ctx) => {\n                  let datasets = ctx.chart.data.datasets;\n                  let percentage;\n                  if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n                    let sum = datasets[0].data.reduce((a, b) => a + b, 0);\n                    percentage = Math.round((value / sum) * 100) + \"%\";\n                    return percentage;\n                  } else {\n                    return percentage;\n                  }\n                },\n\n                color: \"darkgreen\",\n              },\n            },\n            scales: {\n              y: {\n                suggestedMin: 0,\n                suggestedMax: chart.data.length + 2,\n              },\n            },\n          };\n\n          return (\n            <div key={uuid_v4()} className=\"w-1/2 my-2 py-4 px-2\">\n              <Bar\n                id={`charts${index}`}\n                ref={ref}\n                options={options}\n                data={data}\n                plugins={[ChartDataLabels]}\n              />\n              <span className=\"text-md font-normal text-white px-3 py-1 rounded-md my-3 bg-sky-500\">\n                <button type=\"button\" onClick={() => imageDownloader(index)}>\n                  Download Chart #{index + 1}\n                </button>\n              </span>\n            </div>\n          );\n        } else if (chart.type == \"response\") {\n          return (\n            <div key={uuid_v4()} className=\"flex flex-col  w-[557.333px]\">\n              <div\n                id={`charts${index}`}\n                className=\"flex flex-col w-full justify-center items-center \"\n              >\n                <p className=\"text-sm space-y-1  text-gray-600 font-medium my-3\">\n                  {chart.label}\n                </p>\n                <div className=\"grid grid-cols-1 w-full gap-2 my-2\">\n                  {chart.data.map((re) => {\n                    return (\n                      <span key={uuid_v4()} className=\"w-full \">\n                        <p className=\"text-sm p-3 rounded-md text-gray-700 font-medium  bg-gray-200\">\n                          {re}\n                        </p>\n                      </span>\n                    );\n                  })}\n                </div>\n              </div>\n              <span className=\"text-md justify-start w-fit font-normal text-white px-3 py-1 rounded-md my-3 bg-sky-500\">\n                <button type=\"button\" onClick={() => imageDownloader(index)}>\n                  Download Response #{index + 1}\n                </button>\n              </span>\n            </div>\n          );\n        } else {\n          const labels = chart.options;\n          const result = [\n            ...chart.data\n              .reduce((mp, o) => {\n                if (!mp.has(o)) mp.set(o, { option: o, count: 0 });\n\n                mp.get(o).count++;\n                return mp;\n              }, new Map())\n              .values(),\n          ];\n\n          let cd = [...result];\n          for (var i = 1; i <= labels?.length; i++) {\n            var c = result.map((j) => {\n              return j.option;\n            });\n\n            if (c.indexOf(i) == -1) {\n              cd.push({ option: i, count: 0 });\n            }\n          }\n\n          var firstRun = cd.sort(function (a, b) {\n            return a.option - b.option;\n          });\n\n          var g = [];\n          var newData = firstRun.map((d) => {\n            g.push(d.count);\n            return d.count;\n          });\n\n          ne.push({\n            label: chart.label,\n            data: g,\n            options: chart.options,\n            type: chart.type,\n          });\n          ave.push({\n            label: chart.label,\n            data: g,\n          });\n          const data = {\n            labels,\n            datasets: [\n              {\n                label: `Participants Responses (${chart.data.length})`,\n                data: newData,\n                backgroundColor: \"rgb(0,191,255,0.5)\",\n              },\n            ],\n\n            //datasets: chartData, labels.map(() =>faker.datatype.number({ min: 0, max: 1000 }) ),\n          };\n\n          const options = {\n            responsive: true,\n\n            plugins: {\n              legend: {\n                display: true,\n                position: \"top\",\n              },\n              title: {\n                display: true,\n                text: `${chart.label}`,\n              },\n              datalabels: {\n                formatter: (value, ctx) => {\n                  let datasets = ctx.chart.data.datasets;\n                  let percentage;\n                  if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n                    let sum = datasets[0].data.reduce((a, b) => a + b, 0);\n                    percentage = Math.round((value / sum) * 100) + \"%\";\n                    return percentage;\n                  } else {\n                    return percentage;\n                  }\n                },\n\n                color: \"darkgreen\",\n              },\n            },\n            scales: {\n              y: {\n                suggestedMin: 0,\n                suggestedMax: chart.data.length + 2,\n              },\n            },\n          };\n\n          return (\n            <div key={uuid_v4()} className=\"w-1/2 my-2 py-4 px-2\">\n              <Bar\n                id={`charts${index}`}\n                ref={ref}\n                options={options}\n                data={data}\n                plugins={[ChartDataLabels]}\n              />\n              <span className=\"text-md font-normal text-white px-3 py-1 rounded-md my-3 bg-sky-500\">\n                <button type=\"button\" onClick={() => imageDownloader(index)}>\n                  Download Chart #{index + 1}\n                </button>\n              </span>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport default DynamicOverviewReport;\n","import React, { useCallback, useState } from \"react\";\nimport BarChart from \"../charts/BarChart\";\nimport DynamicOverviewReport from \"./DynamicOverviewReport\";\nimport Select from \"react-select\";\n\nfunction ChartList({ chartData, excelData, batchData }) {\n  const [selectedReport, setSelectedReport] = useState(null);\n\n  const userOptions = [\n    { data: false, label: \"Wagons Report\" },\n    { data: true, label: \"Dynamic Report\" },\n  ];\n  const styles = {\n    container: (base) => ({\n      ...base,\n      flex: 1,\n    }),\n    control: (base) => ({\n      ...base,\n      border: \"1px solid rgb(209 213 219)\",\n      boxShadow: \"none\",\n      \"&:hover\": {\n        border: \"1px solid rgb(17 24 39)\",\n      },\n    }),\n    input: (base) => ({\n      ...base,\n      color: \"rgb(75 85 99)\",\n      paddingLeft: \"6px\",\n      paddingBottom: \"3px\",\n      fontSize: \"1rem\",\n      lineHeight: \"1.25rem\",\n      // opacity: \"0 !important\",\n    }),\n    placeholder: (base) => ({\n      ...base,\n      color: \"#a1a9bb\",\n      paddingLeft: \"6px\",\n\n      fontSize: \"0.870rem\",\n      lineHeight: \"1.25rem\",\n    }),\n  };\n  const handleChange = (option) => {\n    setSelectedReport(option);\n  };\n\n  console.log(selectedReport?.data, \"selectedReport?.data\", excelData, \"=========================\", batchData, chartData);\n  return (\n    <div className=\"flex flex-col  w-full mt-16\">\n      <h1 className=\"font-semibold text-lg text-gray-700 mb-2\">\n        Report Type: {selectedReport?.label || \"No Report Type Selected\"}\n      </h1>\n      {selectedReport?.data ? \"Dynamic\" : \"wagons\"}\n      <Select\n        options={userOptions}\n        onChange={handleChange}\n        styles={styles}\n        getOptionValue={(option) => option.data}\n        placeholder=\"Select Report\"\n      />\n      {selectedReport == null ? (\n        <h1 className=\"font-semibold text-lg text-gray-700 \">\n          Please select a Report Type to generate Report{\" \"}\n        </h1>\n      ) : (\n        <>\n          <h1 className=\"font-semibold text-lg text-gray-700 \">\n            Please select a Report Type to generate Report{\" \"}\n          </h1>\n          {selectedReport.data ? (\n            <DynamicOverviewReport\n              chartData={chartData}\n              excelData={excelData}\n              batchData={batchData}\n            />\n          ) : (\n            <BarChart\n              chartData={chartData}\n              excelData={excelData}\n              batchData={batchData}\n            />\n          )\n          }\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ChartList;\n","import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useAuth } from \"../../../../context/auth\";\r\n// import { ExcelJS } from \"exceljs\"\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nfunction ReportGenerator({\r\n  list,\r\n  setBatchPop,\r\n  setChartData,\r\n  setExcelData,\r\n  batchData,\r\n  setReportPop,\r\n  setBatchData,\r\n}) {\r\n  const [generate, setGenerate] = useState(false);\r\n  const [chartRep, setChartRep] = useState([]);\r\n  const { userData } = useAuth()\r\n  const [xlRep, setXlRep] = useState([]);\r\n  const [advxl, setadvXl] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [reportsData, setReportsData] = useState([]);\r\n  const [newLabels, setNewLabels] = useState([]);\r\n  const [averageScore, setAverageScore] = useState([]);\r\n  const [downloader, setDownloader] = useState(false);\r\n  console.log(reportsData, \"s\");\r\n\r\n  var average = [];\r\n  var newReports = [];\r\n  var newAdvanceReport = [];\r\n  var chartReports = [];\r\n  var chartArr = [];\r\n  const reportDownloader = async (bId, aId) => {\r\n    const formData = { assessmentId: aId, batchId: bId };\r\n    var response;\r\n\r\n    let form = new URLSearchParams(Object.entries(formData)).toString();\r\n\r\n    response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/userBatchAnswers/getReport?access_token=${userData?.accessToken}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n\r\n        method: \"POST\",\r\n        body: form,\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      console.log(\"er\");\r\n    } else {\r\n      if (data.code === 404) {\r\n        console.error(data.msg);\r\n      } else {\r\n        //setPeopleList(data.data);\r\n        if (data?.value) {\r\n          setReportsData(data.data);\r\n          console.log(data.data, \"ub\");\r\n          // setGenerate(true);\r\n          var reportData = data.data;\r\n          resultCreator(reportData);\r\n        } else {\r\n          toast.warn(`No reports available!! Try again later`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const resultCreator = (reportData) => {\r\n    console.log(reportData, \"reportData\");\r\n    var reportObj;\r\n    var chartObj;\r\n    var advanceReportObj;\r\n\r\n    const content = reportData?.reportData.map((r, index) => {\r\n      reportObj = {\r\n        timestamp: r.createdDate.substring(0, 10),\r\n        participantName: r.fullName,\r\n        employeeCode: r.employeeId,\r\n        email: r.email,\r\n        score: `${r.obtainMarks} / ${r.totalMarks}`,\r\n        region: r.branchName,\r\n        result: r.result,\r\n        avgscore: \"\",\r\n      };\r\n      advanceReportObj = {\r\n        program: reportData?.teamInfo?.programName,\r\n        facilitator: reportData?.teamInfo?.tranineeName,\r\n        timestamp: r.createdDate.substring(0, 10),\r\n        participantName: r.fullName,\r\n        employeeCode: r.employeeId,\r\n        email: r.email,\r\n        contact: r?.contactNo,\r\n        score: r.obtainMarks,\r\n        region: r.branchName,\r\n        result: r.result,\r\n      };\r\n\r\n      var g = JSON.parse(r.answerResponseBunch);\r\n      var h = g.map((op, i) => {\r\n        console.log(op, \"OP\");\r\n        var selectedAnswer;\r\n        if (op.questionType == \"multiopt\") {\r\n          selectedAnswer =\r\n            op?.selectedAnswer.join() || op?.selectedOption.join();\r\n        } else {\r\n          selectedAnswer = op?.selectedAnswer || op?.selectedOption;\r\n        }\r\n        var userselected = {};\r\n        userselected = {\r\n          ...userselected,\r\n          [`question${i + 1}`]: selectedAnswer,\r\n        };\r\n        advanceReportObj = { ...advanceReportObj, ...userselected };\r\n        return op;\r\n      });\r\n\r\n      //setAverageScore([...averageScore, r.obtainMarks]);\r\n      average.push(parseInt(r.obtainMarks));\r\n\r\n      chartReports.push(JSON.parse(r.answerResponseBunch));\r\n\r\n      newReports.push(reportObj);\r\n      if (newReports.length == reportData.reportData.length) {\r\n        var sum = average.reduce((pv, cv) => pv + cv, 0);\r\n        var avgs = sum / average.length;\r\n        newReports.push({\r\n          timestamp: \"\",\r\n          participantName: \"\",\r\n          employeeCode: \"\",\r\n          email: \"\",\r\n          score: \"\",\r\n          region: \"\",\r\n          result: \"\",\r\n          avgscore: `${Math.trunc(avgs)} / ${r.totalMarks}`,\r\n        });\r\n      }\r\n      newAdvanceReport.push(advanceReportObj);\r\n\r\n      return r;\r\n    });\r\n    //  averageFinder(average);\r\n\r\n    setXlRep(newReports);\r\n    setadvXl(newAdvanceReport);\r\n    const newChartData = chartReports.map((rep) => {\r\n      return rep.map((newrep) => {\r\n\r\n        chartObj = {\r\n          label: newrep.question,\r\n          data: newrep.selectedOption,\r\n          type: newrep.questionType,\r\n          options: newrep.answers,\r\n        };\r\n\r\n        return chartArr.push(chartObj);\r\n      });\r\n    });\r\n\r\n    arrayMerger(chartArr);\r\n  };\r\n\r\n  const arrayMerger = (data) => {\r\n\r\n    console.log(\"==============datat======\", data)\r\n    const filteredArr = data.reduce((acc, current) => {\r\n      const x = acc.find((item) => item.label === current.label);\r\n\r\n      if (!x) {\r\n        const newCurr = {\r\n          label: current.label,\r\n          data: [current.data],\r\n          type: current.type,\r\n          options: current.options,\r\n        };\r\n        return acc.concat([newCurr]);\r\n      } else {\r\n        const newData = x.data.push(current.data);\r\n        const newCurr = {\r\n          label: current.label,\r\n          data: newData,\r\n          type: current.type,\r\n          options: current.options,\r\n        };\r\n        return acc;\r\n      }\r\n    }, []);\r\n\r\n    var c = [];\r\n    var allLabels = [];\r\n    console.log(filteredArr, \"shh\");\r\n    var u = filteredArr.map((f) => {\r\n      allLabels.push(f.label);\r\n\r\n      //  var a = { ...f.data };\r\n      // var inc = 1;\r\n      // var a = f.data.reduce(\r\n      //   (a, b) => ((a[`opt${inc++}`] = JSON.stringify(b)), a),\r\n      //   {}\r\n      // );\r\n      // c.push(a);\r\n      return f;\r\n    });\r\n    console.log(c, \"pouu\");\r\n    var tr = [];\r\n    // const finalReport = newReports.map((add, i) => {\r\n    //   var finals = {};\r\n    //   finals = { ...add, ...c[i] };\r\n    //   tr.push(finals);\r\n    // });\r\n    for (var i = 0; i <= c.length; i++) {\r\n      var finals = {};\r\n      finals = { ...newReports[i], ...c[i] };\r\n      tr.push(finals);\r\n    }\r\n    allLabels = [\r\n      \"Program Title\",\r\n      \"Facilitator\",\r\n      \"Date\",\r\n      \"Employee Name\",\r\n      \"EmployeeId\",\r\n      \"Email\",\r\n      \"Contact\",\r\n      \"Score\",\r\n      \"Region\",\r\n      \"Result\",\r\n      ...allLabels,\r\n    ];\r\n    // console.log(tr, allLabels, \"ihug\");\r\n    //setadvXl(tr);\r\n    setNewLabels(allLabels);\r\n\r\n    // // chartArry = filteredArr;\r\n    console.log(filteredArr, \"ouigvvhf\");\r\n\r\n    //  setLabels(allLabels);\r\n    console.log(\"===================================filet ararra\", filteredArr)\r\n    //setChartData(filteredArr);\r\n    setChartRep(filteredArr);\r\n    setGenerate(true);\r\n  };\r\n\r\n  const file = `${reportsData?.teamInfo?.createdDate?.substring(0, 10)} ${reportsData?.assessmentRes?.assessmentType\r\n    } Report ${reportsData?.teamInfo?.programName} ${reportsData?.teamInfo?.tranineeName\r\n    }`.toUpperCase();\r\n  // const type = reportData?.assessmentRes?.assessmentType;\r\n\r\n  function getSheetData(data, header) {\r\n    var fields = Object.keys(data[0]);\r\n    var sheetData = data.map(function (row) {\r\n      return fields.map(function (fieldName) {\r\n        return row[fieldName] ? row[fieldName] : \"\";\r\n      });\r\n    });\r\n    sheetData.unshift(header);\r\n\r\n    return sheetData;\r\n  }\r\n\r\n  // async function saveAsExcel() {\r\n  //   var newData = xlRep;\r\n  //   // var scoreObj = {\r\n  //   //   timestamp: \"\",\r\n  //   //   participantName: \"\",\r\n  //   //   employeeCode: \"\",\r\n  //   //   email: \"\",\r\n  //   //   score: \"\",\r\n  //   //   region: \"\",\r\n  //   //   result: \"\",\r\n  //   //   avgscore: averageScore,\r\n  //   // };\r\n  //   // newData.push(scoreObj);\r\n\r\n  //   var data = newData;\r\n  //   console.log(data, \"uh\");\r\n  //   let header = [\r\n  //     \"Time Stamps\",\r\n  //     \"Employee Name\",\r\n  //     \"EmployeeId\",\r\n  //     \"Email\",\r\n  //     \"Score\",\r\n  //     \"Branch Name\",\r\n  //     \"Result\",\r\n  //     \"Average Score\",\r\n  //   ];\r\n\r\n  //   XlsxPopulate.fromBlankAsync().then(async (workbook) => {\r\n  //     const sheet1 = workbook.sheet(0);\r\n  //     // const sheet2 = workbook.sheet(1);\r\n  //     // workbook.addSheet(SHEET2, 1);\r\n  //     const sheetData = getSheetData(data, header);\r\n\r\n  //     const totalColumns = sheetData[0].length;\r\n\r\n  //     sheet1.cell(\"A1\").value(sheetData);\r\n\r\n  //     const range = sheet1.usedRange();\r\n  //     const endColumn = String.fromCharCode(64 + totalColumns);\r\n  //     sheet1.row(1).style(\"bold\", true);\r\n  //     sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"ffff29\");\r\n  //     range.style(\"border\", true);\r\n  //     return workbook.outputAsync().then((res) => {\r\n  //       var fname = document.getElementById(\r\n  //         `basic${list.assessmentId}`\r\n  //       ).innerText;\r\n  //       saveAs(res, `${fname}.xlsx`);\r\n  //     });\r\n  //   });\r\n  //   setDownloader(!downloader);\r\n  // }\r\n\r\n  // async function saveAsExcel() {\r\n  //   var newData = xlRep;\r\n\r\n  //   var data = newData;\r\n  //   console.log(data, \"uh\");\r\n  //   let header = [\r\n  //     \"Time Stamps\",\r\n  //     \"Employee Name\",\r\n  //     \"EmployeeId\",\r\n  //     \"Email\",\r\n  //     \"Score\",\r\n  //     \"Branch Name\",\r\n  //     \"Result\",\r\n  //     \"Average Score\",\r\n  //   ];\r\n\r\n  //   // Create a new workbook and add a worksheet\r\n  //   var workbook = new ExcelJS.Workbook();\r\n  //   var sheet = workbook.addWorksheet(\"Sheet 1\");\r\n\r\n  //   // Add header row\r\n  //   sheet.addRow(header);\r\n\r\n  //   // Add data rows\r\n  //   data.forEach(row => {\r\n  //     sheet.addRow([\r\n  //       row.timestamp || \"\",\r\n  //       row.participantName || \"\",\r\n  //       row.employeeCode || \"\",\r\n  //       row.email || \"\",\r\n  //       row.score || \"\",\r\n  //       row.region || \"\",\r\n  //       row.result || \"\",\r\n  //       row.avgscore || \"\",\r\n  //     ]);\r\n  //   });\r\n\r\n  //   // Apply styles\r\n  //   sheet.getRow(1).font = { bold: true };\r\n  //   sheet.getRow(1).fill = {\r\n  //     type: \"pattern\",\r\n  //     pattern: \"solid\",\r\n  //     fgColor: { argb: \"ffff29\" },\r\n  //   };\r\n\r\n  //   // Set column widths\r\n  //   sheet.columns = [\r\n  //     { width: 15 },\r\n  //     { width: 20 },\r\n  //     { width: 15 },\r\n  //     { width: 25 },\r\n  //     { width: 10 },\r\n  //     { width: 20 },\r\n  //     { width: 15 },\r\n  //     { width: 15 },\r\n  //   ];\r\n\r\n  //   // Save the workbook\r\n  //   var fname = document.getElementById(`basic${list.assessmentId}`).innerText;\r\n  //   await workbook.xlsx.writeBuffer().then(function (buffer) {\r\n  //     saveAs(new Blob([buffer], { type: \"application/octet-stream\" }), `${fname}.xlsx`);\r\n  //   });\r\n\r\n  //   setDownloader(!downloader);\r\n  // }\r\n\r\n  async function saveAsExcel() {\r\n    var newData = xlRep;\r\n    var data = newData;\r\n    console.log(data, \"uh\");\r\n\r\n    let header = [\r\n      \"Time Stamps\",\r\n      \"Employee Name\",\r\n      \"EmployeeId\",\r\n      \"Email\",\r\n      \"Score\",\r\n      \"Branch Name\",\r\n      \"Result\",\r\n      \"Average Score\",\r\n    ];\r\n\r\n    const sheetData = getSheetData(data, header);\r\n\r\n    const ws = XLSX.utils.aoa_to_sheet([header, ...sheetData]);\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1');\r\n\r\n    const wopts = { bookType: 'xlsx', bookSST: false, type: 'binary' };\r\n    const wbout = XLSX.write(wb, wopts);\r\n\r\n    function s2ab(s) {\r\n      const buf = new ArrayBuffer(s.length);\r\n      const view = new Uint8Array(buf);\r\n      for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n      return buf;\r\n    }\r\n\r\n    const fname = document.getElementById(`basic${list.assessmentId}`).innerText;\r\n    saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), `${fname}.xlsx`);\r\n\r\n    setDownloader(!downloader);\r\n  }\r\n\r\n  const averageFinder = (average) => {\r\n    console.log(average, \"uhj\");\r\n    //var arr = [3, \"a\", \"a\", \"a\", 2, 3, \"a\", 3, \"a\", 2, 4, 9, 3];\r\n    var arr = average;\r\n    var mf = 1;\r\n    var m = 0;\r\n    var item;\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n      for (var j = i; j < arr.length; j++) {\r\n        if (arr[i] == arr[j]) m++;\r\n        if (mf < m) {\r\n          mf = m;\r\n          item = arr[i];\r\n        }\r\n      }\r\n\r\n      m = 0;\r\n    }\r\n    setAverageScore(item);\r\n    console.log(item + \" ( \" + mf + \" times ) \", \"uhukbk\");\r\n  };\r\n\r\n  // async function saveAdvanceExcel() {\r\n  //   var data2 = advxl.map((data) => {\r\n  //     Object.keys(data).forEach((key) => {\r\n  //       if (key.match(\"question\")) {\r\n  //         if (data[key] === \"Excellent\") {\r\n  //           data = { ...data, [key]: \"5\" };\r\n  //         } else if (data[key] === \"Very Good\") {\r\n  //           data = { ...data, [key]: \"4\" };\r\n  //         } else if (data[key] === \"Good\") {\r\n  //           data = { ...data, [key]: \"3\" };\r\n  //         } else if (data[key] === \"Satisfactory\") {\r\n  //           data = { ...data, [key]: \"2\" };\r\n  //         } else if (data[key] === \"Average\") {\r\n  //           data = { ...data, [key]: \"1\" };\r\n  //         } else if (data[key] === \"Poor\") {\r\n  //           data = { ...data, [key]: \"0\" };\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //     return data;\r\n  //   });\r\n\r\n  //   // console.log(data2);\r\n\r\n  //   let header = newLabels;\r\n  //   console.log(data2, header, \"popopop\");\r\n  //   // XlsxPopulate.fromBlankAsync().then(async (workbook) => {\r\n  //   //   const sheet1 = workbook.sheet(0);\r\n  //   //   // const sheet2 = workbook.sheet(1);\r\n  //   //   // workbook.addSheet(SHEET2, 1);\r\n  //   //   const sheetData = getSheetData(data2, header);\r\n\r\n  //   //   const totalColumns = sheetData[0].length;\r\n\r\n  //   //   sheet1.cell(\"A1\").value(sheetData);\r\n\r\n  //   //   const range = sheet1.usedRange();\r\n  //   //   const endColumn = String.fromCharCode(64 + totalColumns);\r\n  //   //   sheet1.row(1).style(\"bold\", true);\r\n  //   //   //sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"ffff29\");\r\n  //   //   range.style(\"border\", true);\r\n\r\n  //   //   return workbook.outputAsync().then((res) => {\r\n  //   //     var fname = document.getElementById(\r\n  //   //       `advance${list.assessmentId}`\r\n  //   //     ).innerText;\r\n\r\n  //   //     saveAs(res, `${fname}.xlsx`);\r\n  //   //   });\r\n  //   // });\r\n  //   setDownloader(!downloader);\r\n  // }\r\n  // ${reportsData?.teamInfo?.createdDate?.substring(0, 10)} ${\r\n  //   reportsData?.assessmentRes?.assessmentType\r\n  // } Report ${reportsData?.teamInfo?.programName} ${\r\n  //   reportsData?.teamInfo?.tranineeName\r\n  // }\r\n\r\n  async function saveAdvanceExcel() {\r\n    var data2 = advxl.map((data) => {\r\n      Object.keys(data).forEach((key) => {\r\n        if (key.match(\"question\")) {\r\n          if (data[key] === \"Excellent\") {\r\n            data = { ...data, [key]: \"5\" };\r\n          } else if (data[key] === \"Very Good\") {\r\n            data = { ...data, [key]: \"4\" };\r\n          } else if (data[key] === \"Good\") {\r\n            data = { ...data, [key]: \"3\" };\r\n          } else if (data[key] === \"Satisfactory\") {\r\n            data = { ...data, [key]: \"2\" };\r\n          } else if (data[key] === \"Average\") {\r\n            data = { ...data, [key]: \"1\" };\r\n          } else if (data[key] === \"Poor\") {\r\n            data = { ...data, [key]: \"0\" };\r\n          }\r\n        }\r\n      });\r\n      return data;\r\n    });\r\n\r\n    let header = newLabels;\r\n    console.log(data2, header, \"popopop\");\r\n\r\n    const ws = XLSX.utils.aoa_to_sheet([header, ...getSheetData(data2, header)]);\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1');\r\n\r\n    const wopts = { bookType: 'xlsx', bookSST: false, type: 'binary' };\r\n    const wbout = XLSX.write(wb, wopts);\r\n\r\n    function s2ab(s) {\r\n      const buf = new ArrayBuffer(s.length);\r\n      const view = new Uint8Array(buf);\r\n      for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n      return buf;\r\n    }\r\n\r\n    const fname = document.getElementById(`advance${list.assessmentId}`).innerText;\r\n    saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), `${fname}.xlsx`);\r\n\r\n    setDownloader(!downloader);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {generate ? (\r\n        <>\r\n          <div>\r\n            <p id={`basic${list.assessmentId}`} className=\"hidden capitalize\">\r\n              Basic{\" \"}\r\n              {\r\n                document.getElementById(`assesType${list.assessmentId}`)\r\n                  .innerText\r\n              }\r\n              _{reportsData?.teamInfo?.teamName}\r\n            </p>\r\n            <p id={`advance${list.assessmentId}`} className=\"hidden capitalize\">\r\n              {\r\n                document.getElementById(`assesType${list.assessmentId}`)\r\n                  .innerText\r\n              }\r\n              _ User Response Report_{reportsData?.teamInfo?.teamName}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"flex w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\r\n              // onClick={() => saveAdvanceExcel()}\r\n              onClick={() => setDownloader(!downloader)}\r\n            >\r\n              <AiOutlineDownload className=\"text-xl mr-1\" /> Excel Report\r\n            </button>\r\n            {downloader ? (\r\n              <div className=\" absolute  -mt-24  left-16  w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                <div className=\" space-y-1\" role=\"none\">\r\n                  <button\r\n                    onClick={() => saveAsExcel()}\r\n                    className=\"text-gray-700 rounded-t-md   flex  w-full px-4 py-2 text-sm hover:bg-blue-500 hover:text-white\"\r\n                  >\r\n                    <AiOutlineDownload className=\"text-xl mr-1\" /> Basic Report\r\n                  </button>\r\n                  <button\r\n                    onClick={() => saveAdvanceExcel()}\r\n                    className=\"text-gray-700 rounded-b-md  flex  w-full px-4 py-2 text-sm hover:bg-blue-500 hover:text-white\"\r\n                  >\r\n                    <AiOutlineDownload className=\"text-xl mr-1\" /> User Response\r\n                    Report\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                setChartData(chartRep);\r\n                setExcelData(reportsData?.assessmentRes?.assessmentType);\r\n                // setBatchPop(true);\r\n                setReportPop(true)\r\n                setDownloader(false);\r\n                setBatchData(reportsData);\r\n              }}\r\n              type=\"button\"\r\n              className=\"flex w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\r\n            >\r\n              <AiOutlineDownload className=\"text-xl mr-1\" /> Overview Report\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            reportDownloader(list.batchId, list.assessmentId);\r\n            //setGenerate(true);\r\n          }}\r\n          className=\" text-gray-600  flex items-center justify-center space-x-1 text-2xl hover:underline\"\r\n        >\r\n          <AiOutlineDownload />\r\n          <p className=\"text-sm mb-0.5\">Generate Report</p>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportGenerator;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\nimport ReportGenerator from \"./ReportGenerator\";\r\n// import \"react-circular-progressbar/dist/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nfunction BatchReportList({\r\n  next,\r\n  previous,\r\n  pgindex,\r\n  page,\r\n  totalCount,\r\n  setLimit,\r\n  setPage,\r\n  setSearch,\r\n  setReportPop,\r\n  setBatchPop,\r\n  setChartData,\r\n  assessmentsList,\r\n  id,\r\n  setExcelData,\r\n  batchData,\r\n  setBatchData,\r\n}) {\r\n  const [changer, setChanger] = useState(\"Fetching...\");\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setChanger(\"No Data Found...\");\r\n    }, 10000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-2 \">\r\n      <div className=\"flex flex-row my-2 w-full justify-between items-center\">\r\n        <div className=\"px-2  flex w-full justify-between   \">\r\n          <h5 className=\"text-lg  font-medium leading-none text-gray-700 \">\r\n            Assessments Report List of Batch Id:{id}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className=\"relative mt-1 \">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none py-2 \">\r\n            <svg\r\n              className=\"w-5 h-5 text-gray-500 \"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"table-search\"\r\n            className=\"bg-gray-50 border py-1 outline-none border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-500 focus:border-sky-500 block w-80 pl-10 p-2.5  \"\r\n            placeholder=\"Search by Assessments\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-3\">\r\n        <table className=\"w-full text-sm  text-center text-gray-500 \">\r\n          <thead className=\"text-xs text-white uppercase bg-sky-500  \">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Assessment\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Type\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Batch Id\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Client Name\r\n              </th>\r\n\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Download Report\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {assessmentsList?.length == 0 ? (\r\n            <tbody>\r\n              <tr className=\"border-b  text-lg font-medium odd:bg-white even:bg-gray-50 \">\r\n                <td className=\"px-6 py-4\"></td>\r\n                <td className=\"px-6 py-4\"></td>\r\n                <td className=\"px-6 py-4\">{changer}</td>\r\n                <td className=\"px-6 py-4\"> </td>\r\n                <td className=\"px-6 py-4\"></td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <>\r\n              {assessmentsList?.map((list) => {\r\n                return (\r\n                  <tbody key={uuid_v4()} className=\"text-left\">\r\n                    <tr className=\"border-b   odd:bg-white even:bg-gray-50 odd: even:\">\r\n                      <th\r\n                        scope=\"row\"\r\n                        className=\"px-6 py-4 font-medium text-gray-900  whitespace-nowrap\"\r\n                      >\r\n                        {list.name}\r\n                      </th>\r\n                      <td\r\n                        id={`assesType${list.assessmentId}`}\r\n                        className=\"px-6 py-4\"\r\n                      >\r\n                        {/* {list.assessmentType} */}\r\n                        {list?.assessmentType == \"pre\"\r\n                          ? \"Pre-Assessment Report\"\r\n                          : null}\r\n                        {list?.assessmentType == \"post\"\r\n                          ? \"Post-Assessment Report\"\r\n                          : null}\r\n                        {list?.assessmentType == \"feedback\"\r\n                          ? \"Feedback Report\"\r\n                          : null}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">{list.batchId}</td>\r\n                      <td className=\"px-6 py-4\">\r\n                        {list?.createdDate?.substring(0, 10)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">{list.clientName}</td>\r\n                      <td className=\"relative flex flex-row px-6 text-center py-4 justify-center items-center space-x-6  mt-2\">\r\n                        <ReportGenerator\r\n                          list={list}\r\n                          setBatchPop={setBatchPop}\r\n                          setReportPop={setReportPop}\r\n                          setChartData={setChartData}\r\n                          setExcelData={setExcelData}\r\n                          batchData={batchData}\r\n                          setBatchData={setBatchData}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {/* <div className=\"flex flex-row justify-around mt-10 items-center  \">\r\n        <span className=\"text-sm flex text-gray-700 \">\r\n          <p>Displaying</p>\r\n          <span className=\" px-1 font-normal tracking-wide text-gray-900 \">\r\n           \r\n          </span>\r\n          <p> Assessments </p>\r\n        </span>\r\n        <div className=\"flex\">\r\n          <div className=\"dropdown flex items-center relative\">\r\n            <p>Show</p>\r\n            <span className=\"bg-gray-100 text-gray-700 mx-2  font-normal tracking-wide rounded inline-flex items-center\">\r\n              <select\r\n                className=\"bg-transparent px-3 py-2  outline-none \"\r\n                onChange={(e) => {\r\n                  setLimit(e.target.value);\r\n                  setPage(0);\r\n                }}\r\n              >\r\n                <option className=\"mr-1\">5</option>\r\n                <option className=\"mr-1\">10</option>\r\n                <option className=\"mr-1\">20</option>\r\n                <option className=\"mr-1\">30</option>\r\n                <option className=\"mr-1\">40</option>\r\n                <option className=\"mr-1\">50</option>\r\n              </select>\r\n            </span>\r\n            <p>Entries</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <a\r\n            onClick={() => previous()}\r\n            className={` ${\r\n              page === 0\r\n                ? \"hidden\"\r\n                : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 bg-gray-200 cursor-pointer rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700   \"\r\n            }`}\r\n          >\r\n            Previous\r\n          </a>\r\n\r\n          <a\r\n            onClick={() => next()}\r\n            className={` ${\r\n              page > pgindex\r\n                ? \"hidden\"\r\n                : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 cursor-pointer bg-gray-200 rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700   \"\r\n            }`}\r\n          >\r\n            Next\r\n          </a>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BatchReportList;\r\n","import ChartList from \"./ChartList\";\r\nimport { Typography, CardContent } from '@mui/material';\r\n\r\n// // project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\n\r\n\r\nconst BatchReport = ({ chartData, excelData, batchData }) => {\r\n    return (\r\n\r\n        <>\r\n            {/* <button>Back</button> */}\r\n            <MainCard title=\"Batch Report\">\r\n                <Typography variant=\"body1\" style={{ marginBottom: '50px', marginTop: '-35px' }}>\r\n                    <ChartList chartData={chartData} excelData={excelData} batchData={batchData} />\r\n                </Typography>\r\n            </MainCard>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BatchReport;\r\n\r\n// material-ui\r\n// import { Typography } from '@mui/material';\r\n\r\n// // project imports\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n\r\n// // ==============================|| SAMPLE PAGE ||============================== //\r\n\r\n// const SamplePage = () => (\r\n//   <MainCard title=\"Sample Card\">\r\n//     <Typography variant=\"body2\">\r\n//       Lorem ipsum dolor sit amen, consenter nipissing eli, sed do elusion tempos incident ut laborers et doolie magna alissa. Ut enif ad\r\n//       minim venice, quin nostrum exercitation illampu laborings nisi ut liquid ex ea commons construal. Duos aube grue dolor in reprehended\r\n//       in voltage veil esse colum doolie eu fujian bulla parian. Exceptive sin ocean cuspidate non president, sunk in culpa qui officiate\r\n//       descent molls anim id est labours.\r\n//     </Typography>\r\n//   </MainCard>\r\n// );\r\n\r\n// export default SamplePage;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport ChartList from \"../../../components/training/batch/batchComponents/ChartList\";\r\nimport BatchReportList from \"../../../components/training/batch/batchComponents/BatchReportList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/auth\";\r\nimport BatchReport from \"../../../components/training/batch/batchComponents/BatchReport\";\r\n\r\nfunction BatchReports() {\r\n  const [assessmentsList, setAssessmentsList] = useState([]);\r\n  // const {batchId} = useParams()\r\n  const [batchPop, setBatchPop] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [limit, setLimit] = useState(100);\r\n  const [reportPop, setReportPop] = useState(false)\r\n  const [page, setPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState();\r\n  const [chartData, setChartData] = useState([]);\r\n  const [excelData, setExcelData] = useState([]);\r\n  const [batchData, setBatchData] = useState([]);\r\n  const { batchId } = useParams()\r\n  const { userData } = useAuth()\r\n\r\n  useEffect(() => {\r\n    getAssessmentsData();\r\n  }, [search, limit, page]);\r\n  const getAssessmentsData = async () => {\r\n    var response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/userBatchAnswers/listOfReport/${batchId}?access_token=${userData?.accessToken}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n\r\n        method: \"GET\",\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    console.log(data, \"ssss\");\r\n    if (!response.ok) {\r\n      const error = (data && data.message) || response.statusText;\r\n\r\n      return Promise.reject(error);\r\n    } else {\r\n      console.log(data);\r\n      if (data.code === 404) {\r\n        console.log(data.message);\r\n      } else {\r\n        setAssessmentsList(data.data);\r\n\r\n        setTotalCount(data?.data?.length || 0);\r\n      }\r\n    }\r\n  };\r\n  const npages = totalCount;\r\n  const pgindex = npages - 5;\r\n  // const pgindex = npages;\r\n\r\n  const next = () => {\r\n    if (totalCount % limit == 0) {\r\n      if (page < pgindex) {\r\n        setPage(page + 1);\r\n        //console.log(\"max page\" ,pgindex)\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // if the number is odd\r\n    else {\r\n      if (page < npages) {\r\n        setPage(page + 1);\r\n        //console.log(\"else max page\" ,npages)\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  const previous = () => {\r\n    if (page <= 0) {\r\n      return;\r\n    } else {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  var ab = [];\r\n  if (batchId !== undefined) {\r\n    const filteredassessment = assessmentsList?.map((a) => {\r\n      if (a.batchId == batchId) {\r\n        ab = [...ab, a];\r\n      }\r\n      return a;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full mt-12\">\r\n      {batchPop ? (\r\n        <div className=\"fixed z-30  w-full h-screen top-0 left-0 items-center   bg-gray-800/40\">\r\n          <div className=\"flex w-full items-start mt-20 justify-center   h-screen\">\r\n            <div className=\"relative mx-10 flex flex-col  w-full items-center justify-center bg-white rounded-lg shadow-md px-8 py-2\">\r\n              <div className=\"absolute z-30 bg-white flex w-full justify-end items-end top-0  p-4 \">\r\n                <IoClose\r\n                  onClick={() => setBatchPop(false)}\r\n                  className=\"cursor-pointer text-xl font-semibold text-black \"\r\n                />\r\n              </div>\r\n              <div\r\n                id=\"journal-scroll\"\r\n                className=\"w-full h-[30rem] overflow-y-auto\"\r\n              >\r\n                <ChartList\r\n                  chartData={chartData}\r\n                  excelData={excelData}\r\n                  batchData={batchData}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {\r\n        reportPop ? (\r\n          <>\r\n            <h1>test</h1>\r\n            <BatchReport\r\n              chartData={chartData}\r\n              excelData={excelData}\r\n              batchData={batchData}\r\n            />\r\n          </>\r\n        ) :\r\n          <BatchReportList\r\n            assessmentsList={assessmentsList}\r\n            next={next}\r\n            previous={previous}\r\n            pgindex={pgindex}\r\n            setExcelData={setExcelData}\r\n            page={page}\r\n            totalCount={totalCount}\r\n            setLimit={setLimit}\r\n            setPage={setPage}\r\n            setSearch={setSearch}\r\n            id={batchId}\r\n            batchData={batchData}\r\n            setReportPop={setReportPop}\r\n            setBatchData={setBatchData}\r\n            setBatchPop={setBatchPop}\r\n            setChartData={setChartData}\r\n          />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BatchReports;\r\n\r\n"],"names":["_ref","bars","headLabel","averages","console","log","aref","useRef","ddata","labels","datasets","options","responsive","plugins","legend","display","position","title","text","datalabels","formatter","value","context","concat","color","font","size","anchor","align","scales","x","ticks","maxRotation","minRotation","autoSkip","callback","label","index","newlabel","this","getLabelForValue","test","count","split","i","length","senCount","slice","join","stringOne","regex","RegExp","match","y","suggestedMin","suggestedMax","fontSize","layout","padding","_jsx","className","children","_jsxs","style","width","onClick","async","pricingTableElmt","document","querySelector","dataURL","html2canvas","toDataURL","fname","innerHTML","downloadjs","imageDownloader","Bar","ref","id","data","height","ChartDataLabels","PercentChart","backgroundColor","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","role","viewBox","fill","xmlns","d","_batchData$teamInfo","_batchData$teamInfo$c","_batchData$assessment","_batchData$teamInfo2","_batchData$teamInfo3","_batchData$assessment2","_batchData$teamInfo4","_batchData$assessment3","_batchData$teamInfo5","chartData","excelData","batchData","exr","setexr","useState","downloader","setDownloader","formChanger","setFormChanger","barChanger","setBarChanger","setBars","setHeadLabel","setAverages","loading","setLoading","ne","ave","links","getSheetData","header","lengthArray","map","t","Object","keys","BigObjectIndex","indexOf","Math","max","apply","fields","sheetData","row","fieldName","unshift","teamInfo","createdDate","substring","assessmentRes","assessmentType","programName","tranineeName","toUpperCase","A4_PAPER_DIMENSIONS","A4_PAPER_RATIO","imageDimensionsOnA4","dimensions","imageRatio","imageScaleFactor","scaledImageHeight","downloadImage","useCallback","pdf","jsPDF","titleURL","iDimensions","clientWidth","clientHeight","addImage","addPage","imageDimensions","push","url","name","type","getElementById","innerText","save","Loader","href","collector","a","c","b","cav","headerLabel","dataset","ip","poor","average","satisfactory","good","vgood","excellent","avrarr","apoor","aaverage","asatisfactory","agood","avgood","aexcellent","countRatings","filter","rate","toLowerCase","includes","bi","sum","reduce","pv","cv","dataobject","question","great","JSON","stringify","verygood","totalScore","averageScore","toFixed","percentobject","trunc","perc","poorTotal","averageTotal","satisfactoryTotal","goodTotal","vgoodTotal","excellentTotal","newSum","s","av","parseFloat","obj","borderColor","borderWidth","barThickness","inc","exsave","wsData","ws","XLSX","aoa_to_sheet","wb","book_new","book_append_sheet","saveAssessmentExcel","AiOutlineDownload","saveAsExcel","AverageChart","chart","result","mp","o","has","set","option","get","Map","values","cd","j","firstRun","sort","g","newData","ctx","percentage","round","uuid_v4","re","showChart","setShowChart","useEffect","teamName","data1","data2","data3","data4","data5","data6","data7","data8","data9","data10","avdata1","avdata2","avdata3","avdata4","avdata5","avdata6","avdata7","avdata8","avdata9","avdata10","data1Total","data2Total","data3Total","data4Total","data5Total","data6Total","data7Total","data8Total","data9Total","data10Total","LabelData","dataArray","dataPoints","generateRandomColor","labelColors","floor","random","forEach","Array","isArray","some","wbout","bookType","bookSST","saveAs","Blob","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","_Fragment","selectedReport","setSelectedReport","Select","onChange","styles","container","base","flex","control","border","boxShadow","input","paddingLeft","paddingBottom","lineHeight","placeholder","getOptionValue","DynamicOverviewReport","BarChart","_reportsData$teamInfo","_reportsData$teamInfo2","_reportsData$assessme","_reportsData$teamInfo3","_reportsData$teamInfo4","_reportsData$teamInfo5","_reportsData$teamInfo6","list","setBatchPop","setChartData","setExcelData","setReportPop","setBatchData","generate","setGenerate","chartRep","setChartRep","userData","useAuth","xlRep","setXlRep","advxl","setadvXl","setLabels","reportsData","setReportsData","newLabels","setNewLabels","setAverageScore","newReports","newAdvanceReport","chartReports","chartArr","resultCreator","reportData","reportObj","chartObj","advanceReportObj","r","_reportData$teamInfo","_reportData$teamInfo2","timestamp","participantName","fullName","employeeCode","employeeId","email","score","obtainMarks","totalMarks","region","branchName","avgscore","program","facilitator","contact","contactNo","parse","answerResponseBunch","op","selectedAnswer","questionType","selectedOption","userselected","parseInt","avgs","rep","newrep","answers","arrayMerger","filteredArr","acc","current","find","item","newCurr","allLabels","f","tr","finals","assessmentId","key","saveAdvanceExcel","_reportsData$assessme2","e","bId","aId","formData","batchId","response","form","URLSearchParams","entries","toString","fetch","process","accessToken","headers","method","body","json","ok","code","error","msg","toast","warn","reportDownloader","next","previous","pgindex","page","totalCount","setLimit","setPage","setSearch","assessmentsList","changer","setChanger","timer","setTimeout","clearTimeout","fillRule","clipRule","target","scope","_list$createdDate","clientName","ReportGenerator","MainCard","Typography","variant","marginBottom","marginTop","ChartList","setAssessmentsList","batchPop","search","limit","reportPop","setTotalCount","useParams","getAssessmentsData","message","statusText","Promise","reject","_data$data","npages","ab","undefined","IoClose","BatchReport","BatchReportList"],"sourceRoot":""}
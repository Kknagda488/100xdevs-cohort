{"version":3,"file":"static/js/2653.0614f8cc.chunk.js","mappings":"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","sources":["components/training/quiz/FeedbackInput.js","components/training/quiz/Options.js","components/training/quiz/CustomQuiz.jsx","components/training/quiz/FeedbackOptions.js","components/training/quiz/CustomFeedback.jsx","pages/training/program/QuizPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction FeedbackInput({ i, questionManager, bucket, quiz }) {\n  const [add, setAdd] = useState(\"\");\n\n  useEffect(() => {\n    const colorchanger = bucket.map((item) => {\n      if (item.id == quiz.questions[i].id) {\n        //setCss(\"bg-green-500 border-green-400 hover:bg-green-500\");\n        setAdd(item.selectedOption);\n        //console.log(\"true\");\n      }\n      return item;\n    });\n  }, [bucket]);\n  const handleChange = (e) => {\n    setAdd(e.target.value);\n  };\n  return (\n    <div>\n      <label\n        htmlFor={`message${i}`}\n        className=\"block mb-2 text-md font-medium text-gray-700\"\n      >\n        Your Response\n      </label>\n      <textarea\n        id={`message${i}`}\n        rows=\"4\"\n        className=\"block p-2.5 w-full text-sm text-gray-700 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n        placeholder=\"Your message...\"\n        // onChange={() => questionManager(quiz.questions[i], index + 1)}\n        onChange={handleChange}\n        onBlur={() => questionManager(quiz.questions[i], add, add)}\n        defaultValue={add}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default FeedbackInput;\n","import React, { useEffect, useState } from \"react\";\n\nfunction Options({ options, index, i, questionManager, bucket, quiz }) {\n  const [add, setAdd] = useState(0);\n\n  useEffect(() => {\n    const colorchanger = bucket.map((item) => {\n      if (item.id == quiz.questions[i].id) {\n        //setCss(\"bg-green-500 border-green-400 hover:bg-green-500\");\n        setAdd(item.selectedOption);\n        //console.log(\"true\");\n      }\n      return item;\n    });\n  }, [bucket]);\n\n  // const colorchanger = bucket.map((item) => {\n  //   if (item.id == quiz.questions[i].id) {\n  //     //setCss(\"bg-green-500 border-green-400 hover:bg-green-500\");\n\n  //     var a;\n  //     item.selectedOption.find((id) => {\n  //       if (id === index + 1) {\n  //         return (a = true);\n  //       } else {\n  //         return (a = false);\n  //       }\n  //     });\n\n  //     return a;\n  //   }\n  // });\n  return (\n    <li className=\"space-y-1\">\n      <label\n        className={`inline-flex justify-between items-center p-5 w-full rounded-lg border  cursor-pointer  ${\n          add == index + 1\n            ? \" border-emerald-300 text-white bg-emerald-500 \"\n            : \"bg-gray-200 hover:text-gray-800 hover:bg-gray-300 text-gray-700 \"\n        }  `}\n        onClick={() => questionManager(quiz.questions[i], index + 1, options)}\n      >\n        <div className=\"block w-full\">\n          <div className=\"w-full text-md font-semibold\">{options}</div>\n          {/* <div className=\"w-full\">Explaination</div> */}\n        </div>\n      </label>\n    </li>\n  );\n}\n\nexport default Options;\n","import React, { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { v4 as uuid_v4 } from \"uuid\";\nimport FeedbackInput from \"./FeedbackInput\";\nimport Options from \"./Options\";\nimport { useAuth } from \"../../../context/auth\";\nfunction CustomQuiz({ quiz, questionList, id, setType }) {\n  const [totalMarks, setTotalMarks] = useState();\n  const { userData, signOut } = useAuth()\n  const [add, setAdd] = useState(true);\n  const [bucket, setBucket] = useState([]);\n  const [disabler, setDisabler] = useState(false);\n\n  useEffect(() => {\n    var marks = 0;\n    const points = quiz.questions.map((point) => {\n      marks = marks + parseFloat(point.point);\n\n      return point;\n    });\n    setTotalMarks(marks);\n  }, [quiz]);\n\n  const submitTest = (e) => {\n    e.preventDefault();\n    // setDisabler(true);\n\n    var firstRun = bucket.sort(function (a, b) {\n      return a.qnumber - b.qnumber;\n    });\n    var secondRun = firstRun.sort(function (a, b) {\n      return a.qnumber - b.qnumber;\n    });\n\n    var formData = {\n      batchId: id,\n      assessmentId: questionList.assessmentId,\n      answerResponseBunch: JSON.stringify(secondRun),\n      totalMarks: totalMarks,\n    };\n    Array.from(e.currentTarget.elements).forEach((field) => {\n      if (!field.name) return;\n      formData[field.name] = field.value;\n    });\n\n    formData = { ...formData, referenceCode: formData.employeeId };\n    console.log(\"formData\", formData);\n    var score = [];\n    var marks = 0;\n    var results = bucket.map((result) => {\n      if (result.questionType == \"multiopt\") {\n        console.log(\"multiopt\");\n        var array1 = result.correctAnswer;\n\n        var array2 = result.selectedOption;\n\n        var is_same =\n          array1.length == array2.length &&\n          array1.every(function (element, index) {\n            //return element === array2[index];\n            if (array2.indexOf(element) > -1) {\n              return (element = array2[array2.indexOf(element)]);\n            }\n          });\n        if (is_same) {\n          score.push(parseFloat(result.point));\n        } else {\n          console.log(\"wrong answer\");\n        }\n      } else {\n        if (\n          result.correctAnswer.toLowerCase() ==\n          result.selectedOption.toString().toLowerCase()\n        ) {\n          score.push(parseFloat(result.point));\n        } else {\n          console.log(\"wrong answer\");\n        }\n      }\n\n      return result;\n    });\n    var sum = score.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n    var finalresult;\n    if (sum >= questionList.minimumPassingScore) {\n      finalresult = \"pass\";\n    } else {\n      finalresult = \"fail\";\n    }\n\n    formData = { ...formData, obtainMarks: sum, result: finalresult };\n    // console.log(sum, \"score\");\n    // console.log(bucket, \"submitted\");\n    // console.log(formData, \"SS\");\n\n    saveAssessment(formData);\n  };\n\n  const questionManager = (questionData, selectedData, selectedAnswer) => {\n    var doesItemExist;\n    var objects;\n    if (questionData.questionType == \"multiopt\") {\n      objects = {\n        ...questionData,\n        selectedOption: [parseInt(selectedData)],\n        selectedAnswer: [selectedAnswer],\n      };\n    } else {\n      objects = {\n        ...questionData,\n        selectedOption: selectedData,\n        selectedAnswer: selectedAnswer,\n      };\n    }\n    if (bucket.length === 0) {\n      setBucket([objects]);\n    } else {\n      const newState = bucket.map((item) => {\n        if (item.id === objects.id) {\n          //item.quantity += 1;\n          doesItemExist = true;\n        }\n        //  objects = item;\n        return item;\n      });\n\n      //  console.log(newState);\n\n      if (doesItemExist) {\n        const index = bucket.findIndex((item) => item.id === objects.id);\n\n        let newBucket = [...bucket];\n\n        if (index >= 0) {\n          var replaceOption = newBucket[index];\n          if (questionData.questionType == \"multiopt\") {\n            if (replaceOption.selectedOption.length > 0) {\n              objects.selectedOption = replaceOption.selectedOption;\n              objects.selectedAnswer = replaceOption.selectedAnswer;\n              const bindex = objects.selectedOption.indexOf(\n                parseInt(selectedData)\n              );\n              if (bindex > -1) {\n                if (objects.selectedOption.length > 1) {\n                  objects.selectedOption.splice(bindex, 1);\n                  objects.selectedAnswer.splice(bindex, 1);\n                } else {\n                  newBucket.splice(index, 1);\n                  var updatedBucket = [...newBucket];\n                  return setBucket(updatedBucket);\n                }\n              } else {\n                objects.selectedOption.push(parseInt(selectedData));\n                objects.selectedAnswer.push(selectedAnswer);\n              }\n            } else {\n              objects.selectedOption = [parseInt(selectedData)];\n              objects.selectedAnswer = [selectedAnswer];\n            }\n          }\n          newBucket.splice(index, 1);\n        } else {\n          console.warn(`Cannot remove : ${objects.id}`);\n        }\n\n        var updatedBucket = [...newBucket, objects];\n        setBucket(updatedBucket);\n      } else {\n        setBucket([...bucket, objects]);\n      }\n    }\n  };\n\n  const saveAssessment = async (formData) => {\n    var response;\n\n    let form = new URLSearchParams(Object.entries(formData)).toString();\n\n    response = await fetch(\n      `${process.env.REACT_APP_PUBLIC_URL}/api/userBatchAnswers/add?access_token=${userData?.accessToken}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n\n        method: \"POST\",\n        body: form,\n      }\n    );\n\n    const data = await response.json();\n    console.log(data, \"response.json\")\n    if (!response.ok) {\n      console.log(\"er\");\n      toast.error(data?.error?.message);\n    } else {\n      if (!data.value) {\n        toast.error(data.message);\n        // setType(\"submitted\");\n        // setDisabler(false);\n      } else {\n        //document.getElementById(\"quiz-form\").reset;\n        // setSubmitted(true);\n\n        toast.success(\"Assessment Submitted Succesfully !!\");\n        setType(\"submitted\");\n        setBucket([]);\n      }\n    }\n  };\n  console.log(bucket, \"sd\");\n\n  return (\n    <div className=\"flex flex-col w-full justify-center items-center bg-blue-100/80 px-12 py-5 space-y-3 min-h-screen\">\n      <form\n        id=\"quiz\"\n        className=\"mb-6 flex flex-col  max-w-xl justify-center items-center\"\n        onSubmit={submitTest}\n      >\n        <div className=\"flex flex-col px-10 py-12 w-full bg-white rounded-md shadow-md my-2 \">\n          <span className=\"flex justify-between w-full\">\n            <h3 className=\"mb-5 text-md font-medium text-gray-700 \">\n              {quiz.quizTitle}\n            </h3>\n            <h3 className=\"mb-5 text-md font-medium text-blue-500 \">\n              Total Points: {totalMarks}\n            </h3>\n          </span>\n\n          <h3 className=\"mb-5 text-md font-medium text-gray-700 \">\n            {quiz.quizSynopsis}\n          </h3>\n        </div>\n        <div className=\"flex flex-col w-full space-y-4 px-10 py-12   bg-white rounded-md shadow-md my-2 \">\n          <div className=\"flex flex-row w-full  items-center\">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Full Name*\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"fullName\"\n                placeholder=\"Full Name\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"flex flex-row w-full  items-center\">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Email*\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"hidden flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Employee Id/Reference Code\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"employeeId\"\n                placeholder=\"Employee Id\"\n              //required\n              />\n            </div>\n          </div>\n          <div className=\"hidden flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Branch Name\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"branchName\"\n                placeholder=\"Branch Name\"\n              // required\n              />\n            </div>\n          </div>\n          <div className=\"hidden  flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Reference Code\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"referenceCode\"\n                placeholder=\"Reference Code\"\n              // required\n              />\n            </div>\n          </div>\n        </div>\n        {console.log(\"==================================\", quiz)}\n        {quiz.questions && quiz.questions.map((quizes, i) => {\n          quizes.qnumber = i;\n\n          return (\n            <div\n              key={uuid_v4()}\n              className=\"flex flex-col w-full px-10 py-12  bg-white rounded-md shadow-md my-2 \"\n            >\n              <span className=\"flex justify-between\">\n                <h3 className=\"mb-5 text-md font-medium text-gray-700 \">\n                  Question {i + 1}\n                </h3>\n                <h3 className=\"mb-5 text-md font-medium text-blue-500 \">\n                  Points: {quizes.point}\n                </h3>\n              </span>\n              <h3 className=\"mb-5 text-md font-medium text-gray-700 \">\n                {quizes.question}\n              </h3>\n              {quizes?.questionType == \"response\" ? (\n                <FeedbackInput\n                  key={uuid_v4()}\n                  // options={options}\n                  // index={index}\n                  //index={index}\n                  i={i}\n                  bucket={bucket}\n                  questionManager={questionManager}\n                  quiz={quiz}\n                />\n              ) : (\n                <ul className=\"grid gap-6 w-full \">\n                  {quizes.questionType == \"multiopt\" ? (\n                    <p className=\"text-sm font-medium text-gray-600\">\n                      *Multiple answers can be selected\n                    </p>\n                  ) : null}\n                  {quizes.answers.map((options, index) => {\n                    if (quizes.questionType == \"multiopt\") {\n                      var a;\n                      const colorchanger = bucket.map((item) => {\n                        if (item.id == quiz.questions[i].id) {\n                          //setCss(\"bg-green-500 border-green-400 hover:bg-green-500\");\n\n                          item.selectedOption.find((id) => {\n                            if (id === index + 1) {\n                              return (a = true);\n                            } else {\n                              return (a = false);\n                            }\n                          });\n\n                          return a;\n                        }\n                      });\n\n                      return (\n                        <li key={uuid_v4()} className=\"space-y-1\">\n                          <label\n                            className={`inline-flex justify-between items-center p-5 w-full rounded-lg border  cursor-pointer  ${a\n                              ? \" border-emerald-300 text-white bg-emerald-500 \"\n                              : \"bg-gray-200 hover:text-gray-800 hover:bg-gray-300 text-gray-700 \"\n                              }  `}\n                            onClick={() =>\n                              questionManager(\n                                quiz.questions[i],\n                                index + 1,\n                                options\n                              )\n                            }\n                          >\n                            <div className=\"block w-full\">\n                              <div className=\"w-full text-md font-semibold\">\n                                {options}\n                              </div>\n                              {/* <div className=\"w-full\">Explaination</div> */}\n                            </div>\n                          </label>\n                        </li>\n                      );\n                    } else {\n                      return (\n                        <Options\n                          key={uuid_v4()}\n                          options={options}\n                          index={index}\n                          i={i}\n                          bucket={bucket}\n                          questionManager={questionManager}\n                          quiz={quiz}\n                        />\n                      );\n                    }\n                  })}\n                </ul>\n              )}\n            </div>\n          );\n        })}\n        {bucket?.length == quiz?.questions.length ? (\n          <>\n            {disabler ? (\n              <div className=\"relative\">\n                <button\n                  type=\"submit\"\n                  disabled\n                  className=\"inline-block cursor-not-allowed w-full px-5 py-2 text-md font-medium text-center text-white transition duration-200 bg-gray-500 rounded-lg hover:bg-gray-600 ease\"\n                >\n                  Submit Test\n                </button>\n              </div>\n            ) : (\n              <div className=\"relative\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-block w-full px-5 py-2 text-md font-medium text-center text-white transition duration-200 bg-sky-500 rounded-lg hover:bg-sky-600 ease\"\n                >\n                  Submit Test\n                </button>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"relative\">\n            <button\n              type=\"submit\"\n              disabled\n              className=\"inline-block cursor-not-allowed w-full px-5 py-2 text-md font-medium text-center text-white transition duration-200 bg-gray-500 rounded-lg hover:bg-gray-600 ease\"\n            >\n              Submit Test\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default CustomQuiz;\n","import { data } from \"autoprefixer\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction FeedbackOptions({\n  index,\n  i,\n  questionManager,\n  bucket,\n  quiz,\n  quizes,\n  description,\n}) {\n  const [add, setAdd] = useState(null);\n\n  useEffect(() => {\n    const colorchanger = bucket.map((item) => {\n      if (item.id == quiz.questions[i].id) {\n        //setCss(\"bg-green-500 border-green-400 hover:bg-green-500\");\n        setAdd(item.selectedOption);\n        //console.log(\"true\");\n      }\n      return item;\n    });\n  }, [bucket]);\n  return (\n    <li className=\"space-y-1 mt-2 flex flex-col items-center justify-center h-16\">\n      <label\n        className=\"-mx-8 flex items-center justify-center flex-col\"\n        onClick={() =>\n          questionManager(\n            quiz.questions[i],\n            // 5 - index,\n            description.data.length <= 5\n              ? description.data.length - index\n              : description.data.length - 1 - index,\n            description.data.length <= 5\n              ? description.data[description.data.length - (index + 1)]\n              : description.data[description.data.length - 1 - index]\n            //quizes.answers[5 - index]\n          )\n        }\n      >\n        <div\n          className={`flex justify-center items-center py-2 w-12 rounded-full border  cursor-pointer  ${\n            add ==\n            `${\n              description.data.length <= 5\n                ? description.data.length - index\n                : description.data.length - 1 - index\n            }`\n              ? \" border-emerald-300 text-white bg-emerald-500 \"\n              : \"bg-gray-200 hover:text-gray-800 hover:bg-gray-300 text-gray-700 \"\n          }  `}\n        >\n          <div className=\"w-full text-center text-lg font-semibold\">\n            {description.data.length <= 5 ? (\n              <>{description.data.length - index}</>\n            ) : (\n              <>{description.data.length - 1 - index}</>\n            )}\n          </div>\n\n          {/* <div className=\"w-full\">Explaination</div> */}\n        </div>\n        <p className=\" text-md font-medium  text-blue-500 \">\n          {/* {quizes.answers[5 - index]} */}\n          {description.data.length <= 5 ? (\n            <>{description.data[description.data.length - (index + 1)]}</>\n          ) : (\n            <>{description.data[description.data.length - 1 - index]}</>\n          )}\n        </p>\n      </label>\n    </li>\n  );\n}\n\nexport default FeedbackOptions;\n\n{\n  /* <>\n                  <ul className=\"grid gap-3 grid-cols-5 w-full  \">\n                    {Array(5)\n                      .fill()\n                      .map((_, index) => {\n                        return (\n                          <li>\n                            <input\n                              id={`button${i}`}\n                              type=\"radio\"\n                              name={`button${index}`}\n                              className=\"hidden peer\"\n                              value={`${index + 1}`}\n                              required\n                            />\n                            <label\n                              htmlFor={`button${i}`}\n                              className=\"flex justify-center py-2.5 items-center  w-full text-gray-500 rounded-full bg-white  border border-gray-200 cursor-pointer  peer-checked:border-blue-600 peer-checked:text-blue-600 hover:text-gray-600 hover:bg-gray-100 \"\n                            >\n                              <div className=\"block \">\n                                <div className=\"w-full text-lg font-semibold\">\n                                  {index + 1}\n                                </div>\n                              </div>\n                            </label>\n                          </li>\n                        );\n                      })}\n                  </ul>\n                  <div className=\"flex  w-full justify-between\">\n                    <p className=\"mb-5 text-lg font-medium text-blue-500 \">\n                      Poor\n                    </p>\n                    <p className=\"mb-5 text-lg font-medium text-blue-500 \">\n                      Average\n                    </p>\n                    <p className=\"mb-5 text-lg font-medium text-blue-500 \">\n                      Great\n                    </p>\n                  </div>\n                </> */\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { v4 as uuid_v4 } from \"uuid\";\nimport FeedbackInput from \"./FeedbackInput\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport { useAuth } from \"../../../context/auth\";\n\nfunction CustomFeedback({\n  quiz,\n  questionList,\n  id,\n  setType,\n  description,\n  quizData,\n}) {\n  const [totalMarks, setTotalMarks] = useState();\n  const [add, setAdd] = useState(true);\n  const [bucket, setBucket] = useState([]);\n  const { userData } = useAuth()\n  const [formSubmit, setFormSubmit] = useState([]);\n  const [disabler, setDisabler] = useState(false);\n  const questionManager = (questionData, selectedData, selectedAnswer) => {\n    console.log(questionData, selectedData, \"okg\");\n\n    var doesItemExist;\n    var objects = {\n      ...questionData,\n      selectedOption: selectedData,\n      selectedAnswer: selectedAnswer,\n    };\n    if (bucket.length === 0) {\n      setBucket([objects]);\n    } else {\n      const newState = bucket.map((item) => {\n        if (item.id === objects.id) {\n          //item.quantity += 1;\n          doesItemExist = true;\n        }\n        //  objects = item;\n        return item;\n      });\n\n      //  console.log(newState);\n\n      if (doesItemExist) {\n        const index = bucket.findIndex((item) => item.id === objects.id);\n\n        let newBucket = [...bucket];\n        if (index >= 0) {\n          var replaceOption = newBucket[index];\n          newBucket.splice(index, 1);\n        } else {\n          console.warn(`Cannot remove : ${objects.id}`);\n        }\n        var updatedBucket = [...newBucket, objects];\n        setBucket(updatedBucket);\n      } else {\n        setBucket([...bucket, objects]);\n      }\n    }\n  };\n  console.log(bucket, \"ihuih\");\n\n  const submitTest = (e) => {\n    e.preventDefault();\n    setDisabler(true);\n    var firstRun = bucket.sort(function (a, b) {\n      return a.qnumber - b.qnumber;\n    });\n    var secondRun = firstRun.sort(function (a, b) {\n      return a.qnumber - b.qnumber;\n    });\n    console.log(secondRun, \"secondrun\");\n    if (\n      secondRun?.length === 0 ||\n      secondRun?.length !== quiz?.questions.length\n    ) {\n      toast.error(\"Please answer all questions\");\n      return;\n    }\n    var error = false;\n    secondRun.forEach((item) => {\n      if (!item.selectedAnswer) {\n        error = true;\n      }\n    });\n    if (error) {\n      toast.error(\"Please answer all questions\");\n      return;\n    }\n    var formData = {\n      batchId: id,\n      assessmentId: questionList.assessmentId,\n      answerResponseBunch: JSON.stringify(secondRun),\n      totalMarks: 0,\n    };\n    Array.from(e.currentTarget.elements).forEach((field) => {\n      if (!field.name) return;\n      formData[field.name] = field.value;\n    });\n\n    formData = {\n      ...formData,\n      referenceCode: formData.employeeId,\n      obtainMarks: 0,\n      result: \"Submitted\",\n    };\n\n    // console.log(sum, \"score\");\n    // console.log(bucket, \"submitted\");\n\n    // return console.log(formData);\n    saveAssessment(formData);\n  };\n\n  const saveAssessment = async (formData) => {\n    var response;\n    console.log(formData);\n    let form = new URLSearchParams(Object.entries(formData)).toString();\n    console.log(form);\n    response = await fetch(\n      `${process.env.REACT_APP_PUBLIC_URL}/api/userBatchAnswers/add?access_token=${userData?.accessToken}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n\n        method: \"POST\",\n        body: form,\n      }\n    );\n\n    const data = await response.json();\n    console.log(data);\n\n    if (!response.ok) {\n      console.log(\"er\");\n      toast.error(data?.error?.message);\n    } else {\n      console.log(data);\n      if (!data.value) {\n        toast.error(data.message);\n      } else {\n        //document.getElementById(\"quiz-form\").reset;\n        // setSubmitted(true);\n        console.log(data);\n        toast.success(\"Assessment Submitted Succesfully !!\");\n        setType(\"submitted\");\n        setBucket([]);\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col w-full justify-center items-center bg-blue-100/80 px-12 py-5 space-y-3 min-h-screen\">\n      <form\n        className=\"flex flex-col items-center justify-center max-w-2xl\"\n        id=\"quiz\"\n        onSubmit={submitTest}\n      >\n        <div className=\" w-full  py-5  my-2 bg-white rounded-md shadow-md\">\n          <div className=\"flex justify-center\">\n            <div className=\"flex sm:flex-row px-5 justify-center flex-col mb-2 sm:w-full w-[50]  items-center sm:justify-between\">\n              {quizData.programType == \"1\" ? (\n                <>\n                  <img\n                    className=\"h-auto\"\n                    style={{ width: \"9rem\" }}\n                    src=\"/LSS Logo.png\"\n                  />\n                  <div>\n                    <img\n                      className=\"w-[8rem] h-auto mt-2 sm:mt-0 \"\n                      src=\"../IDFC-logo-website.jpg\"\n                    />\n                  </div>\n                </>\n              ) : (\n                <>\n                  <img\n                    className=\"h-auto\"\n                    style={{ width: \"5rem\" }}\n                    src=\"/Retail Pro Logo.png\"\n                  />\n                  <div>\n                    <img\n                      className=\"w-[8rem] h-auto mt-2 sm:mt-0 \"\n                      src=\"../IDFC-logo-website.jpg\"\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n          <div className=\"flex flex-col px-20 \">\n            <h3 className=\"my-3  text-2xl text-center font-bold text-gray-700 \">\n              Feedback Form\n            </h3>\n            <span className=\"flex justify-center w-full mt-2\">\n              <h3 className=\"mb-3 text-lg text-center font-medium text-gray-700 \">\n                {quiz?.quizTitle}\n              </h3>\n            </span>\n            <span className=\"flex justify-center w-full\">\n              <h3 className=\"mb-3 text-lg text- font-medium text-gray-700 \">\n                <b>Trainer Name:</b> {quizData?.trainerName}\n              </h3>\n            </span>\n            <span className=\"flex justify-center w-full\">\n              <h3 className=\"mb-3 text-lg text-center text- font-medium text-gray-700 \">\n                <b>Program Date:</b> {quizData?.programDate}\n              </h3>\n            </span>\n\n            <h3 className=\"mb-2 text-md text-center font-medium text-gray-700 \">\n              {quiz?.quizSynopsis}\n            </h3>\n          </div>\n        </div>\n        <div className=\"flex flex-col w-full space-y-4 px-20 py-12 bg-white rounded-md shadow-md my-2 \">\n          <div className=\"flex flex-row w-full  items-center\">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Full Name*\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"fullName\"\n                placeholder=\"Full Name\"\n                required\n              />\n            </div>\n          </div>\n\n          {/* <div className=\"flex flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Employee Id\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"employeeId\"\n                placeholder=\"Employee Id\"\n              />\n            </div>\n          </div> */}\n          {/* <div className=\"flex flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Branch Name\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"branchName\"\n                placeholder=\"Branch Name\"\n              />\n            </div>\n          </div> */}\n          <div className=\"hidden flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Reference Code\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"text\"\n                name=\"referenceCode\"\n                placeholder=\"Reference Code\"\n              />\n            </div>\n          </div>\n          <div className=\"flex flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Email*\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                required\n              />\n            </div>\n          </div>\n          {/* <div className=\"flex flex-row w-full items-center \">\n            <label className=\"leading-loose w-44 font-semibold text-gray-700\">\n              Contact No.\n            </label>\n            <div className=\"w-full flex-col flex\">\n              <input\n                id=\"input-hide\"\n                type=\"number\"\n                className=\"px-4  py-2 border-b focus:ring-gray-700 focus:border-gray-800 w-full sm:text-sm border-gray-700  focus:outline-none text-gray-600\"\n                name=\"contactNo\"\n                placeholder=\"Contact No.\"\n                // required\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </div> */}\n        </div>\n        {quiz?.questions.map((quizes, i) => {\n          quizes.qnumber = i;\n          return (\n            <div\n              key={uuid_v4()}\n              className=\"flex flex-col w-full px-10 py-12 bg-white rounded-md shadow-md my-2 \"\n            >\n              <span className=\"flex justify-between\">\n                <h3 className=\"mb-5 text-xl font-medium text-gray-700 \">\n                  Question {i + 1}\n                </h3>\n                <h3 className=\"mb-5 hidden text-lg font-medium text-blue-500 \">\n                  Points: N/A\n                </h3>\n              </span>\n              <h3 className=\"mb-4 text-xl font-medium text-gray-700 \">\n                {quizes.question}\n              </h3>\n              {/* //${description.data.length} */}\n              {quizes?.questionType == \"ratings\" ? (\n                <>\n                  <span\n                    className={`grid gap-4 grid-cols-3 md:grid-cols-6 w-full`}\n                  >\n                    {Array(description.data.length)\n                      .fill()\n                      .map((_, index) => {\n                        return (\n                          <FeedbackOptions\n                            key={uuid_v4()}\n                            // options={options}\n                            // index={index}\n                            index={index}\n                            i={i}\n                            bucket={bucket}\n                            quizes={quizes}\n                            description={description}\n                            questionManager={questionManager}\n                            quiz={quiz}\n                          />\n                        );\n                      })}\n                  </span>\n                  {/* <div className=\"flex  w-full justify-between px-2 mt-1\">\n                    <p className=\"mb-5 text-sm font-medium text-blue-500 \">\n                      Poor\n                    </p>\n                    <p className=\"mb-5 text-sm font-medium text-blue-500 \">\n                      Average\n                    </p>\n                    <p className=\"mb-5 text-sm font-medium text-blue-500 \">\n                      Good\n                    </p>\n                    <p className=\"mb-5 text-sm font-medium text-blue-500 \">\n                      Very Good\n                    </p>\n                    <p className=\"mb-5 text-sm font-medium text-blue-500 \">\n                      Excellent\n                    </p>\n                  </div> */}\n                </>\n              ) : (\n                <FeedbackInput\n                  key={uuid_v4()}\n                  // options={options}\n                  // index={index}\n                  //index={index}\n                  i={i}\n                  bucket={bucket}\n                  questionManager={questionManager}\n                  quiz={quiz}\n                />\n              )}\n            </div>\n          );\n        })}\n        <div className=\"relative\">\n          <button\n            type=\"submit\"\n            className=\"inline-block  w-full px-5 py-2 text-md font-medium text-center text-white transition duration-200 bg-sky-500 rounded-lg hover:bg-sky-600 ease\"\n          >\n            Submit\n          </button>\n        </div>\n        {/* {bucket?.length == quiz?.questions.length ? (\n          <>\n            {disabler ? (\n              <div className=\"relative\">\n                <button\n                  type=\"submit\"\n                  disabled\n                  className=\"inline-block cursor-not-allowed w-full px-5 py-2 text-md font-medium text-center text-white transition duration-200 bg-gray-500 rounded-lg hover:bg-gray-600 ease\"\n                >\n                  Submit Test\n                </button>\n              </div>\n            ) : (\n              <div className=\"relative\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-block w-full px-5 py-2 text-md font-medium text-center text-white transition duration-200 bg-sky-500 rounded-lg hover:bg-sky-600 ease\"\n                >\n                  Submit Test\n                </button>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"relative\">\n            <button\n              type=\"submit\"\n              disabled\n              className=\"inline-block cursor-not-allowed w-full px-5 py-2 text-xl font-medium text-center text-white transition duration-200 bg-gray-500 rounded-lg hover:bg-gray-600 ease\"\n            >\n              Submit Test\n            </button>\n          </div>\n        )} */}\n      </form>\n    </div>\n  );\n}\n\nexport default CustomFeedback;\n","import React, { useEffect, useState } from \"react\";\nimport { v4 as uuid_v4 } from \"uuid\";\n// import \"react-quiz-component\";\n//import { quiz } from \"../../components/adminComponents/quiz/Quiz\";\nimport CustomQuiz from \"../../../components/training/quiz/CustomQuiz\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport CustomFeedback from \"../../../components/training/quiz/CustomFeedback\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth } from \"../../../context/auth\";\nfunction QuizPage() {\n  const [questionList, setQuestionList] = useState([]);\n  const [questionjson, setQuestionJson] = useState(null);\n  const [id, setId] = useState(null);\n  const { userData, singOut } = useAuth()\n  const [type, setType] = useState(null);\n  const [loading, setLoading] = useState(\"Loading...\");\n  const [allQuestion, setAllQuestions] = useState([]);\n  const [assessmentId, setAssessmentId] = useState(null);\n  const [programTitle, setProgramTitle] = useState(\"\");\n  const [description, setDescription] = useState({ data: [], label: \"\" });\n  const [quizData, setQuizData] = useState(null);\n  // const router = useRouter();\n  // const path = router.query;\n  const { batchid, name, asstype, id: pathid } = useParams();\n  // const {batchId} = useParams()\n  //console.log(path.id);\n  var links = pathid;\n  useEffect(() => {\n    if (links !== undefined) {\n      var arr = links.split(\"=\");\n      var num = arr.length - 1;\n      //console.log(arr[num], \"yt\");\n      setAssessmentId(arr[num]);\n    }\n  }, [links]);\n  console.log(assessmentId, \"ss\");\n  //27 //38\n  const getQuestionData = () => {\n    fetch(\n      `${process.env.REACT_APP_PUBLIC_URL}/api/Assessments/traineeBatchAssessmentdetailsById?id=${assessmentId}&access_token=${userData?.accessToken}`\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        console.log(data);\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response statusText\n          const error = (data && data.message) || response.statusText;\n          setLoading(\"Something went Wrong!!\");\n          return Promise.reject(error);\n        }\n\n        setQuestionList(data.data.assessmentRes);\n        // var a = JSON.stringify(\n        //   data.data.assessmentRes.questionBunchOfAssessment\n        // );\n        setId(data.data.batchId);\n        setType(data.data.assessmentRes.assessmentType);\n        setProgramTitle(data.data.programTitle);\n        setQuizData(data.data);\n        // console.log(a);\n        setQuestionJson(true);\n      })\n      .catch((error) => {\n        setQuestionList([]);\n        setLoading(\"Redirecting...\");\n        console.error(\"There was an error!\", error);\n      });\n  };\n  useEffect(() => {\n    if (assessmentId) {\n      getQuestionData();\n    }\n  }, [assessmentId, questionjson]);\n  // var a = [];\n  useEffect(() => {\n    if (questionjson) {\n\n      var a = JSON.parse(questionList.questionBunchOfAssessment);\n      console.log(\"=============qurstion array\", a)\n      if (type == \"feedback\") {\n        var b = JSON.parse(questionList?.description);\n        setDescription(b);\n      } else {\n        setDescription({ data: \"\", label: questionList?.description });\n      }\n\n      setAllQuestions(a);\n    }\n  }, [questionjson]);\n\n  const quiz = {\n    quizTitle: programTitle,\n    quizSynopsis: description?.label,\n    questions: allQuestion,\n  };\n\n  // var x;\n  // var a = [];\n  // var b;\n  // if (questionjson) {\n  //   //console.log(questionjson);\n  //   x = JSON.parse(questionList.questionBunchOfAssessment),\n  //   //b = [x.toString()];\n  //   var c = x.map((nx) => {\n  //     return JSON.parse(nx);\n  //   });\n  //   a = c;\n  // }\n\n  if (type == null) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen\">\n        <h5 className=\"text-3xl font-semibold leading-none text-gray-700 \">\n          {loading}\n        </h5>\n      </div>\n    );\n  } else if (type == \"submitted\") {\n    return (\n      <main className=\" h-screen pt-60 bg-white\">\n        <div className=\" mx-auto  max-w-screen-lg \">\n          <div className=\"flex flex-col text-2xl  p-10 \">\n            <div className=\"mt-4 mb-5 flex items-center justify-center space-x-2\">\n              <FaCheckCircle className=\"h-10 text-7xl text-green-500\" />\n              <h1 className=\"text-2xl text-gray700 font-medium\">\n                Thank You, your Response has been submitted!\n              </h1>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  } else {\n    if (type !== \"feedback\") {\n      return (\n        <div className=\"flex flex-col\">\n          <CustomQuiz\n            setType={setType}\n            quiz={quiz}\n            questionList={questionList}\n            id={id}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"flex flex-col\">\n          <CustomFeedback\n            setType={setType}\n            quiz={quiz}\n            questionList={questionList}\n            id={id}\n            description={description}\n            quizData={quizData}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default QuizPage;\n"],"names":["_ref","i","questionManager","bucket","quiz","add","setAdd","useState","useEffect","map","item","id","questions","selectedOption","_jsxs","children","_jsx","htmlFor","concat","className","rows","placeholder","onChange","e","target","value","onBlur","defaultValue","options","index","onClick","questionList","setType","totalMarks","setTotalMarks","userData","signOut","useAuth","setBucket","disabler","setDisabler","marks","point","parseFloat","questionData","selectedData","selectedAnswer","doesItemExist","objects","questionType","parseInt","length","findIndex","newBucket","replaceOption","bindex","indexOf","splice","updatedBucket","push","console","warn","saveAssessment","async","response","form","URLSearchParams","Object","entries","formData","toString","fetch","process","accessToken","headers","method","body","data","json","_data$error","log","ok","toast","success","error","message","onSubmit","preventDefault","secondRun","sort","a","b","qnumber","batchId","assessmentId","answerResponseBunch","JSON","stringify","Array","from","currentTarget","elements","forEach","field","name","referenceCode","employeeId","finalresult","score","sum","result","array1","correctAnswer","array2","every","element","toLowerCase","reduce","minimumPassingScore","obtainMarks","quizTitle","quizSynopsis","type","required","quizes","question","FeedbackInput","uuid_v4","answers","find","Options","_Fragment","disabled","description","quizData","formSubmit","setFormSubmit","programType","style","width","src","trainerName","programDate","fill","_","FeedbackOptions","setQuestionList","questionjson","setQuestionJson","setId","singOut","loading","setLoading","allQuestion","setAllQuestions","setAssessmentId","programTitle","setProgramTitle","setDescription","label","setQuizData","batchid","asstype","pathid","useParams","links","undefined","arr","split","num","then","statusText","Promise","reject","assessmentRes","assessmentType","catch","parse","questionBunchOfAssessment","FaCheckCircle","CustomQuiz","CustomFeedback"],"sourceRoot":""}
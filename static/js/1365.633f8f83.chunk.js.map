{"version":3,"file":"static/js/1365.633f8f83.chunk.js","mappings":"uOAIA,MAAMA,EAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,IACxC,CAAEF,MAAO,oBAAqBC,WAAY,4BAA6BC,MAAO,KAC9E,CAAEF,MAAO,eAAgBC,WAAY,uBAAwBC,MAAO,KACpE,CAAEF,MAAO,cAAeC,WAAY,eAAgBC,MAAO,MA0F7D,EAxCqBC,KACnB,MAAOC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,aACjDC,EAjDcH,KAIpB,MAAMI,EAAgB,CACpB,CAAEC,GAAI,EAAGC,kBAAmB,IAAKC,aAAc,EAAGC,YAAa,gBAC/D,CAAEH,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,mBAC9D,CAAEH,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,eAE9D,CAAEH,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,iBAI1DC,EAAc,CAClB,CAAEJ,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,mBAC9D,CAAEH,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,eAE9D,CAAEH,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,iBAI1DE,EAAa,CACjB,CAAEL,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,eAE9D,CAAEH,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,iBAI1DG,EAAY,CAChB,CAAEN,GAAI,EAAGC,kBAAmB,GAAIC,aAAc,EAAGC,YAAa,gBAIhE,OAAQR,GACN,IAAK,YACH,OAAOI,EACT,IAAK,UACH,OAAOK,EACT,IAAK,SACH,OAAOC,EACT,IAAK,QACH,OAAOC,EACT,QACE,MAAO,GACX,EAKaC,CAAaZ,GAE1B,OACEa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAAD,SAAA,EACVE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACZ,GAAG,yBAAwBS,SAAC,6BACxCD,EAAAA,EAAAA,MAACK,EAAAA,EAAM,CACLC,QAAQ,yBACRd,GAAG,mBACHe,MAAOpB,EACPqB,SAAWC,GAAMrB,EAAmBqB,EAAEC,OAAOH,OAC7CI,MAAO,CAAEC,SAAU,QAASC,SAAU,QAASZ,SAAA,EAE/CE,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACP,MAAM,YAAWN,SAAC,eAC5BE,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACP,MAAM,UAASN,SAAC,aAC1BE,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACP,MAAM,SAAQN,SAAC,YACzBE,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACP,MAAM,QAAON,SAAC,iBAG5BE,EAAAA,EAAAA,KAAA,OAAKQ,MAAO,CAAEI,OAAQ,IAAK9B,MAAO,OAAO+B,UAAU,QAAUf,UAC3DE,EAAAA,EAAAA,KAACc,EAAAA,GAAQ,CACP3B,KAAMA,EACN4B,qBAAmB,EACnBC,uBAAqB,EACrBC,wBAAsB,EACtBtC,QAASA,EACTuC,MAAO,CAAEC,QAASC,EAAAA,GAClBC,UAAW,CACTF,QAAS,CACPG,iBAAiB,UAKrB,C","sources":["pages/Reports/ReportFormat.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 90 },\r\n  { field: 'totalParticipants', headerName: 'Total No. of participants', width: 220 },\r\n  { field: 'totalBatches', headerName: 'Total No. of Batches', width: 200 },\r\n  { field: 'trainerName', headerName: 'Trainer Name', width: 150 },\r\n];\r\n\r\nconst generateRows = (reportFrequency) => {\r\n  // Generate demo data based on the selected report frequency\r\n  // You can replace this with actual data fetching logic\r\n\r\n  const quarterlyData = [\r\n    { id: 4, totalParticipants: 100, totalBatches: 5, trainerName: 'John Trainer' },\r\n    { id: 3, totalParticipants: 80, totalBatches: 4, trainerName: 'Jane Instructor' },\r\n    { id: 1, totalParticipants: 40, totalBatches: 2, trainerName: 'Alice Coach' },\r\n\r\n    { id: 2, totalParticipants: 60, totalBatches: 3, trainerName: 'Bob Educator' },\r\n    // Add more rows as needed\r\n  ];\r\n\r\n  const monthlyData = [\r\n    { id: 3, totalParticipants: 80, totalBatches: 4, trainerName: 'Jane Instructor' },\r\n    { id: 1, totalParticipants: 40, totalBatches: 2, trainerName: 'Alice Coach' },\r\n\r\n    { id: 2, totalParticipants: 60, totalBatches: 3, trainerName: 'Bob Educator' },\r\n    // Add more rows as needed\r\n  ];\r\n\r\n  const weeklyData = [\r\n    { id: 1, totalParticipants: 40, totalBatches: 2, trainerName: 'Alice Coach' },\r\n\r\n    { id: 2, totalParticipants: 60, totalBatches: 3, trainerName: 'Bob Educator' },\r\n    // Add more rows as needed\r\n  ];\r\n\r\n  const dailyData = [\r\n    { id: 1, totalParticipants: 40, totalBatches: 2, trainerName: 'Alice Coach' },\r\n    // Add more rows as needed\r\n  ];\r\n\r\n  switch (reportFrequency) {\r\n    case 'Quarterly':\r\n      return quarterlyData;\r\n    case 'Monthly':\r\n      return monthlyData;\r\n    case 'Weekly':\r\n      return weeklyData;\r\n    case 'Daily':\r\n      return dailyData;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nconst ReportFormat = () => {\r\n  const [reportFrequency, setReportFrequency] = useState('Quarterly');\r\n  const rows = generateRows(reportFrequency);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <InputLabel id=\"report-frequency-label\">Select Report Frequency</InputLabel>\r\n        <Select\r\n          labelId=\"report-frequency-label\"\r\n          id=\"report-frequency\"\r\n          value={reportFrequency}\r\n          onChange={(e) => setReportFrequency(e.target.value)}\r\n          style={{ minWidth: '150px', fontSize: '16px' }}\r\n        >\r\n          <MenuItem value=\"Quarterly\">Quarterly</MenuItem>\r\n          <MenuItem value=\"Monthly\">Monthly</MenuItem>\r\n          <MenuItem value=\"Weekly\">Weekly</MenuItem>\r\n          <MenuItem value=\"Daily\">Daily</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div style={{ height: 400, width: '100%',marginTop:'20px'  }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          disableColumnFilter\r\n          disableColumnSelector\r\n          disableDensitySelector\r\n          columns={columns}\r\n          slots={{ toolbar: GridToolbar }}\r\n          slotProps={{\r\n            toolbar: {\r\n              showQuickFilter: true,\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportFormat\r\n"],"names":["columns","field","headerName","width","ReportFormat","reportFrequency","setReportFrequency","useState","rows","quarterlyData","id","totalParticipants","totalBatches","trainerName","monthlyData","weeklyData","dailyData","generateRows","_jsxs","children","FormControl","_jsx","InputLabel","Select","labelId","value","onChange","e","target","style","minWidth","fontSize","MenuItem","height","marginTop","DataGrid","disableColumnFilter","disableColumnSelector","disableDensitySelector","slots","toolbar","GridToolbar","slotProps","showQuickFilter"],"sourceRoot":""}
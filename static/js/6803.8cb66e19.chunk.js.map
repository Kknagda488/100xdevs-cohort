{"version":3,"file":"static/js/6803.8cb66e19.chunk.js","mappings":"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","sources":["components/auth/components/auth-forms/AuthWrapper1.jsx","components/auth/components/auth-forms/AuthCardWrapper.jsx","hooks/useScriptRef.js","components/auth/components/auth-forms/AuthLogin.jsx","pages/LoginPage.jsx"],"sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import { useState } from 'react';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Stack,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from '../../../../hooks/useScriptRef';\r\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../../../context/auth';\r\n\r\n// import Google from 'assets/images/icons/social-google.svg';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst Login = ({ ...others }) => {\r\n  const theme = useTheme();\r\n  const scriptedRef = useScriptRef();\r\n  // const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  // const customization = useSelector((state) => state.customization);\r\n  const [checked, setChecked] = useState(true);\r\n  const navigate = useNavigate();\r\n  // const googleHandler = async () => {\r\n  //   console.error('Login');\r\n  // };\r\n  // sessionStorage.setItem()\r\n  const { storeUserDataInLs } = useAuth()\r\n\r\n  const handleSubmit = async (values, { setErrors, setStatus, setSubmitting }) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_PUBLIC_URL}/api/Users/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: values.email,\r\n          password: values.password,\r\n          domain: \"localhost\", // Use the value from process.env.DOMAIN\r\n        }),\r\n      });\r\n\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        if (data.data) {\r\n          console.log(\"inside iff================\")\r\n          storeUserDataInLs(data.data)\r\n          toast.success(\"Login Successfully\");\r\n          console.log('Login successful:', data);\r\n          navigate(\"/dashboard\")\r\n          setStatus({ success: true });\r\n          setSubmitting(false);\r\n\r\n        }\r\n      } else {\r\n        console.error(\"There was an error!\", data.msg);\r\n        toast.error(data.msg);\r\n        setStatus({ success: true });\r\n        setSubmitting(false);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Login error:', error.message);\r\n      setStatus({ success: false });\r\n      setErrors({ submit: error.message });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  // let UserDetails = localStorage.getItem('user')\r\n  // UserDetails = JSON.parse(UserDetails)\r\n  // console.log(UserDetails);\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n\r\n        {/* {UserDetails.accessToken} */}\r\n        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          email: 'john@test.com',\r\n          password: '123456',\r\n          submit: null\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          password: Yup.string().max(255).required('Password is required')\r\n        })}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n              <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-email-login\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                label=\"Email Address / Username\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.email && errors.email && (\r\n                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                  {errors.email}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\r\n              <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password-login\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={values.password}\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                      size=\"large\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                label=\"Password\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.password && errors.password && (\r\n                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                  {errors.password}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n            {errors.submit && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <FormHelperText error>{errors.submit}</FormHelperText>\r\n              </Box>\r\n            )}\r\n\r\n            <Box sx={{ mt: 2 }}>\r\n              <Button disableElevation fullWidth size=\"large\" type=\"submit\" style={{ backgroundColor: theme.palette.secondary.main, color: theme.palette.info.contrastText }}>\r\n                Sign in\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../components/auth/components/auth-forms/AuthWrapper1';\r\nimport AuthCardWrapper from \"../components/auth/components/auth-forms/AuthCardWrapper\"\r\nimport AuthLogin from '../components/auth/components/auth-forms/AuthLogin';\r\nimport Logo from \"../components/ui-component/Logo\"\r\n\r\nconst LoginPage = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\r\n                                                        Hi, Welcome Back\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthLogin />\r\n                                    </Grid>\r\n                                    {/* <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid> */}\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            {/* <Typography component={Link} to=\"/pages/register/register3\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                          Don&apos;t have an account?\r\n                        </Typography> */}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    {/* <AuthFooter /> */}\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default LoginPage"],"names":["styled","_ref","theme","backgroundColor","palette","primary","light","minHeight","children","other","_jsx","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","others","useTheme","checked","setChecked","useState","navigate","useNavigate","storeUserDataInLs","useAuth","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","_jsxs","_Fragment","Grid","container","direction","justifyContent","spacing","item","alignItems","mb","Typography","variant","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","async","values","_ref2","setErrors","setStatus","setSubmitting","response","fetch","concat","process","method","headers","body","JSON","stringify","domain","data","json","ok","console","log","toast","success","error","msg","message","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","mt","Button","disableElevation","style","secondary","main","color","info","contrastText","LoginPage","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","m","AuthCardWrapper","Link","to","Logo","Stack","gutterBottom","fontSize","textAlign","AuthLogin"],"sourceRoot":""}
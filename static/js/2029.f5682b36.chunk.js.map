{"version":3,"file":"static/js/2029.f5682b36.chunk.js","mappings":"wJAGe,MAAMA,EACjB,mBAAOC,CAAaC,EAASC,GACzB,MAIMC,EAAK,CAAEC,OAAQ,CAAEC,KADZC,EAAAA,GAAWC,cAAcN,IACDO,WAAY,CAAC,SAC1CC,EAAcH,EAAAA,GAAWH,EAAI,CAAEO,SAAU,OAAQC,KAAM,UACvDN,EAAO,IAAIO,KAAK,CAACH,GAAc,CAAEE,KALnC,oFAMJE,EAAAA,OAAiBR,EAAMH,EALD,QAM1B,CAEA,sBAAOY,CAAgBb,EAASC,GAC5B,MAGMa,EAAKT,EAAAA,GAAWU,aAAaf,GAC7BE,EAAKG,EAAAA,GAAWW,WACtBX,EAAAA,GAAWY,kBAAkBf,EAAIY,EAAI,UACrC,MAAMN,EAAcH,EAAAA,GAAWH,EAAI,CAAEO,SAAU,OAAQC,KAAM,UACvDN,EAAO,IAAIO,KAAK,CAACH,GAAc,CAAEE,KANnC,oFAOJE,EAAAA,OAAiBR,EAAMH,EAND,QAO1B,E,uJCoZJ,QAjaA,SAAoBiB,GAUhB,IAADC,EAAAC,EAAAC,EAAA,IAVkB,KACnBC,EAAI,YACJC,EAAW,aACXC,EAAY,aAEZC,EAAY,QACZC,EAAO,WACPC,EAAU,OACVC,EAAM,UACNC,GACDX,EACC,MAAM,SAAEY,IAAaC,EAAAA,EAAAA,OACdC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAElCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,KAC7BS,GAAIC,IAAYC,EAAAA,EAAAA,OACjBC,EAAaC,IAAkBb,EAAAA,EAAAA,UAAS,KACxCc,EAAWC,IAAgBf,EAAAA,EAAAA,UAAS,KACpCgB,EAAcC,IAAmBjB,EAAAA,EAAAA,UAAS,KAE1CkB,EAAYC,IAAiBnB,EAAAA,EAAAA,WAAS,GAC7C,IAAIoB,EAAU,GACVC,EAAa,GACbC,EAAmB,GACnBC,EAAe,GACfC,EAAW,IAEfC,EAAAA,EAAAA,YAAU,KACe,SAAnBjC,EAAQkC,SACVC,EAAiBjC,EAAOkC,MAAOlC,EAAOmC,YAEtCpC,EAAW,IAAKD,EAASkC,OAAQ,SACnC,GACC,CAAClC,IAEJ,MAAMmC,EAAmBG,MAAOC,EAAKC,KACnC,MAAMC,EAAW,CAAEC,aAAcF,EAAKtB,QAASqB,GAC/C,IAAII,EAEJ,IAAIC,EAAO,IAAIC,gBAAgBC,OAAOC,QAAQN,IAAWO,WAEzDL,QAAiBM,MAAM,GAADC,OACjBC,wBAAgC,iDAAAD,OAAwD,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,aAC7F,CACEC,QAAS,CACP,eAAgB,qCAGlBC,OAAQ,OACRC,KAAMX,IAIV,MAAMlE,QAAaiE,EAASa,OAE5B,GAAKb,EAASc,GAGZ,GAAkB,MAAd/E,EAAKgF,KACPC,QAAQC,MAAMlF,EAAKmF,UAGnB,GAAQ,OAAJnF,QAAI,IAAJA,GAAAA,EAAMoF,MAAO,CACfzC,EAAe3C,EAAKA,MAGpB,IAAIqF,EAAarF,EAAKA,KACtBsF,EAAcD,EAAYxB,EAAKC,EACjC,MACEyB,EAAAA,GAAMC,KAAK,+CAbfP,QAAQQ,IAAI,KAgBd,EAGIH,EAAgBA,CAACD,EAAYxB,EAAKC,KACtC,IAAI4B,EACAC,EACAC,EAEsB,OAAVP,QAAU,IAAVA,GAAAA,EAAYA,WAAWQ,KAAI,CAACC,EAAGC,KAAW,IAADC,EAAAC,EAAAC,EAAAC,EACvDT,EAAY,CACVU,UAAWN,EAAEO,YACbC,QAAmB,OAAVjB,QAAU,IAAVA,GAAoB,QAAVW,EAAVX,EAAYkB,gBAAQ,IAAAP,OAAV,EAAVA,EAAsBQ,YAC/BC,YAAuB,OAAVpB,QAAU,IAAVA,GAAoB,QAAVY,EAAVZ,EAAYkB,gBAAQ,IAAAN,OAAV,EAAVA,EAAsBS,aACnClE,QAASqB,EACTG,aAAcF,EACd6C,gBAAiBb,EAAEc,SACnBC,aAAcf,EAAEgB,WAChBC,MAAOjB,EAAEiB,MACTC,MAAM,GAADxC,OAAKsB,EAAEmB,YAAW,OAAAzC,OAAMsB,EAAEoB,YAC/BC,OAAQrB,EAAEsB,WACVC,OAAQvB,EAAEuB,OACVC,SAAU,IAEZ1B,EAAmB,CACjBU,QAAmB,OAAVjB,QAAU,IAAVA,GAAoB,QAAVa,EAAVb,EAAYkB,gBAAQ,IAAAL,OAAV,EAAVA,EAAsBM,YAC/BC,YAAuB,OAAVpB,QAAU,IAAVA,GAAoB,QAAVc,EAAVd,EAAYkB,gBAAQ,IAAAJ,OAAV,EAAVA,EAAsBO,aACnCN,UAAWN,EAAEO,YAAYkB,UAAU,EAAG,IACtCZ,gBAAiBb,EAAEc,SACnBC,aAAcf,EAAEgB,WAChBC,MAAOjB,EAAEiB,MACTS,QAAU,OAAD1B,QAAC,IAADA,OAAC,EAADA,EAAG2B,UACZT,MAAOlB,EAAEmB,YACTE,OAAQrB,EAAEsB,WACVC,OAAQvB,EAAEuB,QAGJK,KAAKC,MAAM7B,EAAE8B,qBACX/B,KAAI,CAACgC,EAAIC,KACjB,IAAIC,EAEFA,EADqB,YAAnBF,EAAGG,cAED,OAAFH,QAAE,IAAFA,OAAE,EAAFA,EAAIE,eAAeE,UAAY,OAAFJ,QAAE,IAAFA,OAAE,EAAFA,EAAIK,eAAeD,SAE/B,OAAFJ,QAAE,IAAFA,OAAE,EAAFA,EAAIE,kBAAoB,OAAFF,QAAE,IAAFA,OAAE,EAAFA,EAAIK,gBAE7C,IAAIC,EAAe,CAAC,EAMpB,OALAA,EAAe,IACVA,EACH,CAAC,WAAD3D,OAAYsD,EAAI,IAAMC,GAExBnC,EAAmB,IAAKA,KAAqBuC,GACtCN,CAAE,IASX,GALA3E,EAAQkF,KAAKC,SAASvC,EAAEmB,cAExB5D,EAAa+E,KAAKV,KAAKC,MAAM7B,EAAE8B,sBAE/BzE,EAAWiF,KAAK1C,GACZvC,EAAWmF,QAAUjD,EAAWA,WAAWiD,OACnCpF,EAAQqF,QAAO,CAACC,EAAIC,IAAOD,EAAKC,GAAI,GAC7BvF,EAAQoF,OAc3B,OAFAlF,EAAiBgF,KAAKxC,GAEfE,CAAC,IAIV5D,EAASiB,GACc,SAAnB7B,EAAQkC,QACVnC,EAAa8B,GAGfA,EAAa,GACbf,EAASgB,GACYC,EAAawC,KAAK6C,GAC9BA,EAAI7C,KAAK8C,IACdhD,EAAW,CACTiD,MAAOD,EAAOE,SACd7I,KAAM2I,EAAOT,eACb5H,KAAMqI,EAAOX,aACbc,QAASH,EAAOI,SAGXzF,EAAS8E,KAAKzC,QAIzBqD,EAAY1F,EAAS,EAGjB0F,EAAehJ,IACnB,MAAMiJ,EAAcjJ,EAAKuI,QAAO,CAACW,EAAKC,KACpC,MAAMC,EAAIF,EAAIG,MAAMC,GAASA,EAAKV,QAAUO,EAAQP,QAEpD,GAAKQ,EAQE,CACL,MAAMG,EAAUH,EAAEpJ,KAAKoI,KAAKe,EAAQnJ,MAE3BmJ,EAAQP,MAETO,EAAQ7I,KACL6I,EAAQL,QAEnB,OAAOI,CACT,CAjBQ,CACN,MAAMM,EAAU,CACdZ,MAAOO,EAAQP,MACf5I,KAAM,CAACmJ,EAAQnJ,MACfM,KAAM6I,EAAQ7I,KACdwI,QAASK,EAAQL,SAEnB,OAAOI,EAAI1E,OAAO,CAACgF,GACrB,CASA,GACC,IAwBH,IAtBA,IAAIC,EAAI,GACJC,EAAY,GAeZC,GAbIV,EAAYpD,KAAK+D,IACvBF,EAAUtB,KAAKwB,EAAEhB,OASVgB,KAGA,IAMA9B,EAAI,EAAGA,GAAK2B,EAAEnB,OAAQR,IAAK,CAClC,IAAI+B,EACJA,EAAS,IAAK1G,EAAW2E,MAAO2B,EAAE3B,IAClC6B,EAAGvB,KAAKyB,EACV,CACAH,EAAY,CACV,gBACA,cACA,OACA,gBACA,aACA,QACA,UACA,QACA,SACA,YACGA,GAIL7G,EAAa6G,GAQb1H,EAAYiH,GACZpH,GAAY,EAAK,EAqHnB,MAlHU,GAAA2C,OAAiB,OAAX9B,QAAW,IAAXA,GAA0B,QAAf3B,EAAX2B,EAAaoH,qBAAa,IAAA/I,OAAf,EAAXA,EAA4BgJ,eAAc,gBAAAvF,OAA0B,OAAX9B,QAAW,IAAXA,GAA0B,QAAf1B,EAAX0B,EAAaoH,qBAAa,IAAA9I,OAAf,EAAXA,EAA4BgJ,KAAI,KAAAxF,OAAe,OAAX9B,QAAW,IAAXA,GAAqB,QAAVzB,EAAXyB,EAAa6D,gBAAQ,IAAAtF,OAAV,EAAXA,EAAuByF,eAmHlIuD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGvI,GACCqI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAWEF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,UACEC,QAASA,KAIPhJ,EAAaY,GACbd,GAAY,GACZ8B,GAAc,EAAM,EAEtB3C,KAAK,SACLgK,UAAU,2GAA0GH,SAAA,EAEpHF,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,CAACD,UAAU,iBAAiB,0BAKpDF,EAAAA,EAAAA,MAAA,UACE9J,KAAK,SACL+J,QAASA,KACP5G,EAAiBvC,EAAKsB,QAAStB,EAAK8C,aAAa,EAEnDsG,UAAU,sFAAqFH,SAAA,EAE/FF,EAAAA,EAAAA,KAACO,EAAAA,IAAkB,KACnBP,EAAAA,EAAAA,KAAA,KAAGK,UAAU,iBAAgBH,SAAC,qBAKxC,EC5LA,QAzOA,SAAuBrJ,GAqBnB,IArBoB,KACtB2J,EAAI,SACJC,EAAQ,QACRC,EAAO,KACPC,EAAI,WACJC,EAAU,SACVC,EAAQ,QACRC,EAAO,UACPC,EAAS,YACT7J,EAAW,aACXC,EAAY,gBACZ6J,EAAe,GACf1I,EAAE,aACFlB,EAAY,QACZC,EAAO,WACPC,EAAU,OACVC,EAAM,UACNC,EAAS,iBACTyJ,EAAgB,iBAChBC,EAAgB,cAChBC,GACDtK,EACC,MAAOuK,EAASC,IAAcxJ,EAAAA,EAAAA,UAAS,eAavC,OAZAmD,QAAQQ,IAAI,mBAAoByF,IAChC3H,EAAAA,EAAAA,YAAU,KACR,MAAMgI,EAAQC,YAAW,KACvBF,EAAW,mBAAmB,GAC7B,KACH,MAAO,IAAMG,aAAaF,EAAM,GAC/B,IAEHtG,QAAQQ,IACNyF,EACA,qEAGAd,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeH,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,+DAA8DH,SAAC,+BAG7EC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qDAAoDH,SAAA,EACjEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uCAAsCH,UACnDC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,mDAAkDH,SAAA,CAAC,4BACrC5H,QAI9B6H,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6EAA4EH,UACzFF,EAAAA,EAAAA,KAAA,OACEK,UAAU,yBACVoB,KAAK,eACLC,QAAQ,YACRC,MAAM,6BAA4BzB,UAElCF,EAAAA,EAAAA,KAAA,QACE4B,SAAS,UACTC,EAAE,mHACFC,SAAS,iBAIf9B,EAAAA,EAAAA,KAAA,SACE3J,KAAK,OACLiC,GAAG,eACH+H,UAAU,wJACV0B,YAAY,wBACZC,SAAWC,GAAMlB,EAAUkB,EAAEC,OAAO/G,gBAK1C6E,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wDAAuDH,UACpEC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,6CAA4CH,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,4CAA2CH,UAC1DC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,gBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,UAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,cAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,UAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,iBAItCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,yBAKd,IAAZ,OAAfc,QAAe,IAAfA,OAAe,EAAfA,EAAiB3C,SAChB2B,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,8DAA6DH,SAAA,EACzEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAC,OAC1BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAC,OAC1BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAEkB,KAC3BpB,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAC,OAC1BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAC,OAC1BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAC,YAI9BF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACkB,OAAfc,QAAe,IAAfA,OAAe,EAAfA,EAAiBpF,KAAK3E,IAAU,IAADmL,EAC9B,OACEpC,EAAAA,EAAAA,KAAA,SAAuBK,UAAU,cAAaH,UAC5CC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,qDAAoDH,SAAA,EAChEF,EAAAA,EAAAA,KAAA,MACEmC,MAAM,MACN9B,UAAU,yDAAwDH,SAEjEjJ,EAAK8I,QAERC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAEjJ,EAAK6I,kBAChCE,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAEjJ,EAAKsB,WAChCyH,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAClB,OAAJjJ,QAAI,IAAJA,GAAiB,QAAbmL,EAAJnL,EAAMmF,mBAAW,IAAAgG,OAAb,EAAJA,EAAmB9E,UAAU,EAAG,OAEnC0C,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAEjJ,EAAKoL,cAChCrC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,2FAA0FH,UACtGF,EAAAA,EAAAA,KAACsC,EAAW,CACVrL,KAAMA,EACNC,YAAaA,EACbC,aAAcA,EACdC,aAAcA,EACdC,QAASA,EACTC,WAAYA,EACZC,OAAQA,EACRC,UAAWA,WAvBP+K,EAAAA,EAAAA,KA2BJ,YAOpBvC,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDH,SAAC,qBAGrEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mDAAkDH,UAC/DC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,sDAAqDH,SAAA,EACpEF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,4CAA2CH,UAC1DC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,aAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,eAG1BL,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,yBAezCe,GACCjB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAEIe,EAAiB5C,QAAU,IACzB2B,EAAAA,EAAAA,KAAA,SAAAE,UAWEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,OAAMH,SAAE5H,KACtB0H,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UACdL,EAAAA,EAAAA,KAAA,MAAIK,UAAU,2FAA0FH,UACtGC,EAAAA,EAAAA,MAAA,UACE9J,KAAK,SACL+J,QAASA,KACPc,GAAiB,EAAK,EAExBb,UAAU,sFAAqFH,SAAA,EAE/FF,EAAAA,EAAAA,KAACO,EAAAA,IAAkB,KACnBP,EAAAA,EAAAA,KAAA,KAAGK,UAAU,iBAAgBH,SAAC,8BAkB5CF,EAAAA,EAAAA,KAAA,SAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,mBAAmBmC,QAAS,EAAEtC,SAAC,2BAU7D,ECzJA,QAjFA,SAA2BrJ,GAAwC,IAAD4L,EAAAC,EAAA,IAAtC,UAAEC,EAAS,WAAErL,EAAU,UAAEE,GAAWX,EAC9D,OACEsJ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBH,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CH,SAAA,EACvDC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CH,SAAA,EACvDC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,8CAA6CH,SAAA,CAAC,iBAC/B,QAAbuC,EAACE,EAAU,UAAE,IAAAF,OAAA,EAAZA,EAAcpG,YAE/B8D,EAAAA,EAAAA,MAAA,KAAGE,UAAU,oCAAmCH,SAAA,CAAC,YACzB,QAAbwC,EAACC,EAAU,UAAE,IAAAD,OAAA,EAAZA,EAAclG,mBAG5B2D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,kDAAiDH,SAAA,CAAC,qBACnC,OAATyC,QAAS,IAATA,OAAS,EAATA,EAAWtE,SAAU,MAEzC8B,EAAAA,EAAAA,MAAA,UACEC,QAASA,KAAO,IAADwC,EAAAC,EACbrL,EAAU,CACRiC,MAAmB,QAAdmJ,EAAED,EAAU,UAAE,IAAAC,OAAA,EAAZA,EAAcrK,QACrBmB,WAAwB,QAAdmJ,EAAEF,EAAU,UAAE,IAAAE,OAAA,EAAZA,EAAc9I,eAE5BzC,EAAW,CAAEiC,OAAQ,UAAWjB,IAAIiK,EAAAA,EAAAA,MAAY,EAElDlC,UAAU,iGAAgGH,SAAA,CAC3G,aAECF,EAAAA,EAAAA,KAAC8C,EAAAA,IAAkB,CAACzC,UAAU,kCAIpCL,EAAAA,EAAAA,KAAA,OACE1H,GAAG,iBACH+H,UAAU,kDAAiDH,UAE3DC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,qDAAoDH,SAAA,EACnEF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,+CAA8CH,UAC7DC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,gBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,mBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,iBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,YAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,iBAK1CF,EAAAA,EAAAA,KAAA,SAAAE,SACGyC,EAAU/G,KAAK7F,IAAU,IAADgN,EAAAC,EACvB,OACE7C,EAAAA,EAAAA,MAAA,MAAoBE,UAAU,sBAAqBH,SAAA,EACjDF,EAAAA,EAAAA,KAAA,MACEmC,MAAM,MACN9B,UAAU,yDAAwDH,SAE7D,OAAJnK,QAAI,IAAJA,GAAe,QAAXgN,EAAJhN,EAAMoG,iBAAS,IAAA4G,GAAmB,QAAnBC,EAAfD,EAAiBE,QAAQ,IAAK,YAAI,IAAAD,OAA9B,EAAJA,EAAoC1F,UAAU,EAAG,OAEpD0C,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAM,OAAJnK,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,mBACjCsD,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAM,OAAJnK,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,gBACjCoD,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SAAM,OAAJnK,QAAI,IAAJA,OAAI,EAAJA,EAAMmH,UACjC8C,EAAAA,EAAAA,KAAA,MAAIK,UAAU,yCAAwCH,SAAC,iBAVhDqC,EAAAA,EAAAA,KAaJ,aAQrB,E,6CC63BA,QA/7BA,SAAqB1L,GAAe,IAAd,QAAEqM,GAASrM,EAC/B,MAAOmK,EAAiBmC,IAAsBtL,EAAAA,EAAAA,UAAS,KAChDuL,EAAUlM,IAAeW,EAAAA,EAAAA,WAAS,IAClCsJ,EAAeD,IAAoBrJ,EAAAA,EAAAA,WAAS,IAC5CwL,EAAQtC,IAAalJ,EAAAA,EAAAA,UAAS,KAE/B,SAAEJ,EAAQ,QAAE6L,IAAY5L,EAAAA,EAAAA,OACvBiJ,EAAMG,IAAWjJ,EAAAA,EAAAA,UAAS,IAC1B+I,EAAY2C,IAAiB1L,EAAAA,EAAAA,aAC7B2L,EAAWrM,IAAgBU,EAAAA,EAAAA,UAAS,KACpC8K,EAAWvL,IAAgBS,EAAAA,EAAAA,UAAS,KACpCR,EAASC,IAAcO,EAAAA,EAAAA,UAAS,CAAE0B,OAAQ,OAAQjB,GAAI,OACtDf,EAAQC,IAAaK,EAAAA,EAAAA,UAAS,OAE9BoJ,EAAkBwC,IAAuB5L,EAAAA,EAAAA,UAAS,KAClD6L,EAAaC,IAAkB9L,EAAAA,EAAAA,UAAS,WAGxC+L,EAAO/C,IAAYhJ,EAAAA,EAAAA,UAAS,IAC5BgM,EAAOC,IAAYjM,EAAAA,EAAAA,UAAS,IAC5BkM,EAAYC,IAAiBnM,EAAAA,EAAAA,UAAS,KACtCoM,EAAaC,IAAkBrM,EAAAA,EAAAA,UAAS,KACxCsM,EAAWC,IAAgBvM,EAAAA,EAAAA,UAAS,CAAC,IACrCwM,EAAgBC,IAAqBzM,EAAAA,EAAAA,WAAS,IAC9CiF,EAAOyH,IAAY1M,EAAAA,EAAAA,UAAS,KAC5BgF,EAAY2H,KAAiB3M,EAAAA,EAAAA,UAAS,KACtC4M,GAASC,KAAc7M,EAAAA,EAAAA,WAAS,IAChC8M,GAAUC,KAAe/M,EAAAA,EAAAA,UAAS,OAClCgN,GAAMC,KAAWjN,EAAAA,EAAAA,UAAS,OAC1BkN,GAAgBC,KAAqBnN,EAAAA,EAAAA,UAAS,OAI9CoN,GAAIC,KAASrN,EAAAA,EAAAA,UAAS,KACtBS,GAAI6M,KAAStN,EAAAA,EAAAA,UAAS,MAC7B,IAAI,QAAEU,KAAYC,EAAAA,EAAAA,MAMd4M,GAAM7M,GAAQ8M,MAAM,KAExB9M,GAAU6M,GAAI,IAId9L,EAAAA,EAAAA,YAAU,KACRgM,IAAoB,GACnB,CAACjC,EAAQO,EAAOjD,EAAMtJ,KAEzBiC,EAAAA,EAAAA,YAAU,KACRiM,IAAkB,GAEjB,CAACV,KAEJ,MAAMS,GAAqB3L,UACzB,IAAIK,QAAiBM,MAAM,GAADC,OACrBC,wBAAgC,uCAAAD,OAAsChC,GAAO,kBAAAgC,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,aAC3G,CACEC,QAAS,CACP,eAAgB,qCAGlBC,OAAQ,SAIZ,MAAM5E,QAAaiE,EAASa,OAE5B,IAAKb,EAASc,GAAI,CAChB,MAAMG,EAASlF,GAAQA,EAAKyP,SAAYxL,EAASyL,WAEjD,OAAOC,QAAQC,OAAO1K,EACxB,CAIU,IAAD2K,EAFW,MAAd7P,EAAKgF,KACPC,QAAQC,MAAMlF,EAAKmF,MAEnBiI,EAAmBpN,EAAKA,MAExBwN,GAAkB,OAAJxN,QAAI,IAAJA,GAAU,QAAN6P,EAAJ7P,EAAMA,YAAI,IAAA6P,OAAN,EAAJA,EAAYvH,SAAU,GAExC,EAGIqC,GADSE,EACU,EAUnBiF,GAAkBlM,UACtB,IACE,IAAIK,QAAiBM,MAAM,GAADC,OACrBC,wBAAgC,8BAAAD,OAA6BhC,GAAO,kBAAAgC,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,aAClG,CACEC,QAAS,CACP,eAAgB,qCAElBC,OAAQ,QAGZ,MAAM5E,QAAaiE,EAASa,OAC5B,IAAKb,EAASc,GAAI,CAChB,MAAMG,EAASlF,GAAQA,EAAKyP,SAAYxL,EAASyL,WACjD,OAAOC,QAAQC,OAAO1K,EACxB,CAEoB,MAAdlF,EAAKgF,KACPC,QAAQC,MAAMlF,EAAKmF,KAEnBuI,EAAoB1N,EAAKA,KAAK+P,mBAGpC,CAAE,MAAO7K,GACPD,QAAQQ,IAAIP,EACd,GAGI8K,GAAuBpM,UAC3B,IACE,MAAMqM,EAAS,CAIbpC,QACAC,QACAR,UAEI4C,EAASC,mBAAmBzI,KAAK0I,UAAUH,IAC3ChM,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,4DAAAD,OAA2DhC,GAAO,YAAAgC,OAAW0L,EAAM,kBAAA1L,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,cAE7I1E,QAAaiE,EAASa,OACK,IAADuL,EAAAC,EAAhC,GAAqB,aAAb,OAAJtQ,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,QACRyK,EAAkB,OAAJjO,QAAI,IAAJA,GAAU,QAANqQ,EAAJrQ,EAAMA,YAAI,IAAAqQ,OAAN,EAAJA,EAAYhJ,QAC1BpC,QAAQQ,IACN,0DACI,OAAJzF,QAAI,IAAJA,GAAU,QAANsQ,EAAJtQ,EAAMA,YAAI,IAAAsQ,OAAN,EAAJA,EAAYjJ,QAIlB,CAAE,MAAOnC,GACPD,QAAQQ,IAAIP,EACd,GAWF,SAASqL,GAAUzI,GACjB,IAAI0I,EAAU,GAG4B,OAAfvF,QAAe,IAAfA,GAAAA,EAAiBpF,KAAK4K,IAC3CA,EAAEjO,SAAWsF,IAEf0I,EAAU,IAAIA,EAASC,IAGlBA,KAGTtB,GAAMqB,EACR,CAEA,MAAME,GAAYA,KAGhBC,GAAYnO,IACZ4M,GAAM5M,IACN+N,GAAU/N,IACVsN,KACAE,KACAY,IAAS,GAIXrN,EAAAA,EAAAA,YAAU,KAKR6L,GAAM5M,IACN+N,GAAU/N,IACVsN,KACAY,IAAW,GAGV,CAAClO,GAASyI,EAAiB6C,IAE9B,MA8DM6C,GAAc/M,UAClB,IACE,MAAMK,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,8BAAAD,OAA6BqM,EAAG,kBAAArM,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,cAE1FoM,QAAY7M,EAASa,OAC3B,GAAkB,OAAX,OAAHgM,QAAG,IAAHA,OAAG,EAAHA,EAAK9L,MAAc,CAErB,MADe8L,IAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKrB,UAAYxL,EAASyL,UAElD,CACErB,EAAgB,OAAHyC,QAAG,IAAHA,OAAG,EAAHA,EAAK9Q,KAItB,CAAE,MAAOkF,GACPD,QAAQQ,IAAIP,EACd,GAGI0L,GAAUA,KAKd,IAJA,IAAIG,EAAYC,IAAgB,OAAT5C,QAAS,IAATA,OAAS,EAATA,EAAW6C,gBAC9BC,EAAUF,IAAgB,OAAT5C,QAAS,IAATA,OAAS,EAATA,EAAW+C,cAC5BC,EAAc,GACdC,EAAcN,EAAUO,QACrBD,EAAYE,eAAeL,IAAU,CAC1C,IAAIM,EAAoBH,EAAYI,OAAO,cAC3CL,EAAYhJ,KAAKoJ,GACjBH,EAAYK,IAAI,EAAG,OACrB,CACAvD,EAAeiD,EAAY,EAmEvB5B,GAAmB5L,UACvB,GAAa,KAATkL,GA8BF,OAAO,EA7BP,IACE,MAAMmB,EAAS,CAIbpC,QACAC,QACAR,UAEI4C,EAASC,mBAAmBzI,KAAK0I,UAAUH,IAE3ChM,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,gEAAAD,OAA+DhC,GAAO,UAAAgC,OAASsK,GAAI,YAAAtK,OAAW0L,EAAM,kBAAA1L,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,cAE9J1E,QAAaiE,EAASa,OACK,IAAD6M,EAAAC,EAAhC,GAAqB,aAAb,OAAJ5R,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,QACRyK,EAAkB,OAAJjO,QAAI,IAAJA,GAAU,QAAN2R,EAAJ3R,EAAMA,YAAI,IAAA2R,OAAN,EAAJA,EAAYtK,QAC1BpC,QAAQQ,IACN,0DACI,OAAJzF,QAAI,IAAJA,GAAU,QAAN4R,EAAJ5R,EAAMA,YAAI,IAAA4R,OAAN,EAAJA,EAAYvK,QAMlB,CAAE,MAAOnC,GACPD,QAAQQ,IAAIP,EACd,CAGF,GAGF3B,EAAAA,EAAAA,YAAU,KACJ6K,GAEFwC,IACF,GACC,CAACxC,KAEJ7K,EAAAA,EAAAA,YAAU,KACJhB,IACFyN,IACF,GACC,CAACzN,GAAIsL,EAAOC,EAAOR,IAEtB,MAiCMuE,GAAmBC,IACvB,IAAIC,EAAY,CACd,CACE,QACA,UACA,YACA,WACA,OACA,kBACA,mBACA,aACA,WACA,OACA,OACA,OACA,OACA,OACA,aACA,qBACA,wBACA,uBACA,iBACA,4BACA,kCAIJD,EAAwBE,SAAQ,CAAChS,EAAM+F,KACrC,IAAIkM,EAAU,CACZlM,EAAQ,EACR/F,EAAK8G,YAAc,GAEnB9G,EAAKkS,UAAS,GAAA1N,OAAMxE,EAAKkS,UAAS,KAAA1N,OAAIxE,EAAKmS,UAAY,IAAO,GAC9DnS,EAAKoS,UAAY,GACjBpS,EAAKqS,MAAQ,GACbrS,EAAKsS,aAAe,GACpBtS,EAAKuS,cAAgB,GACrBvS,EAAKwS,SAAW,GAChBxS,EAAKwC,SAAW,GAChBxC,EAAKyS,MAAQ,IACbzS,EAAK0S,MAAQ,IACb1S,EAAK2S,MAAQ,IACb3S,EAAK4S,MAAQ,IACb5S,EAAK6S,MAAQ,IACb7S,EAAK8S,WAAa,GAClB9S,EAAK+S,kBAAoB,GACzB,IACA/S,EAAKgT,oBAAsB,GAC3B,iBACA,4BACA,iCAIFjB,EAAU3J,KAAK6J,EAAQ,IAGzBhN,QAAQQ,IAAIsM,GAEZrS,EAAAA,EAAMe,gBAAgBsR,EAAU,qBAADvN,OAAuByO,KAAKC,OAAQ,EAGrE,OACE9I,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CH,SAAA,CACtDiB,GACCnB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uEAAsEH,UACnFF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8DAA6DH,UAC1EF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4GAA2GH,UAexHC,EAAAA,EAAAA,MAAA,OACE7H,GAAG,iBACH+H,UAAU,mCAAkCH,SAAA,EAsD5CC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8CAA6CH,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,qDAAoDH,SAAC,qBAGnEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBC,EAAAA,EAAAA,MAAA,UACE6B,SAAWC,IAAO,IAADiH,EACfpE,GAAS,OAAD7C,QAAC,IAADA,GAAS,QAARiH,EAADjH,EAAGC,cAAM,IAAAgH,OAAR,EAADA,EAAW/N,MAAM,EAE3BkF,UAAU,gJAA+IH,SAAA,EAEzJF,EAAAA,EAAAA,KAAA,UAAQ7E,MAAM,GAAE+E,SAAC,gBAChB+D,EAAYrI,KAAI,CAACiJ,EAAM/I,KACtBkE,EAAAA,EAAAA,KAAA,UAAoB7E,MAAO0J,EAAK3E,SAC7B6G,IAAOlC,GAAM2C,OAAO,eADV1L,SAKjBkE,EAAAA,EAAAA,KAAA,UACEK,UAAU,qFAIVD,QAASA,KAlMLzG,WACtB,IACE,MAAMK,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,iDAAAD,OAAgDjC,EAAE,kBAAAiC,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,cAGlH,IAAKT,EAASc,GAAI,CAEhB,MAAMG,EAASlF,GAAQA,EAAKyP,SAAYxL,EAASyL,WAEjD,OADAzK,QAAQQ,IAAI,QAASxB,EAASyL,YACvBC,QAAQC,OAAO1K,EACxB,CACA,MAAMlF,QAAaiE,EAASa,OAE5B,GADAG,QAAQQ,IAAI,uBAAwBzF,GAChB,YAAhBA,EAAKwD,OAEP,YADA+B,EAAAA,GAAML,MAAU,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,KAIpB,IAAI2M,EAA0B9R,EAC9BiF,QAAQQ,IACN,0CACAqM,GAEFD,GAAgBC,EAClB,CAAE,MAAO5M,GACPD,QAAQC,MAAM,sBAAuBA,GACvB,kBAAVA,GAAuC,mBAAVA,GAC/BqI,GAEJ,GAoKmC6F,CAAgB7Q,GAAG,EAAI4H,SACzC,YAGDF,EAAAA,EAAAA,KAAA,UACEK,UAAU,0FACVD,QAASA,IAAMkE,GAAkB,GAAMpE,SACxC,oBAGDF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAsBD,QAASqG,GAAUvG,UACtDF,EAAAA,EAAAA,KAACoJ,EAAAA,IAAS,CAACC,KAAM,QAEnBrJ,EAAAA,EAAAA,KAACsJ,EAAAA,IAAO,CACNlJ,QAASA,KACPS,EAAS,GACTiD,EAAS,GACT2C,KACAvF,GAAiB,EAAM,EAEzBb,UAAU,wDACVgJ,KAAM,YAIZrJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wDAAuDH,UACpEC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,yCAAwCH,SAAA,EACvDF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,oCAAmCH,UAClDC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,UAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,WAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,iBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,iBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,YAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,gBAGtCF,EAAAA,EAAAA,KAAA,MAAImC,MAAM,MAAM9B,UAAU,YAAWH,SAAC,yBAQ/B,OAAV6D,QAAU,IAAVA,OAAU,EAAVA,EAAYnI,KAAI,CAACyD,EAAMxB,KAAO,IAAD0L,EAAAC,EAAAC,EAC5B,OACEzJ,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,sBAAqBH,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,0BAAyBH,SAEhC,OAAJb,QAAI,IAAJA,GAAAA,EAAMqK,QACC,OAAJrK,QAAI,IAAJA,GAAa,QAATkK,EAAJlK,EAAMqK,eAAO,IAAAH,OAAT,EAAJA,EAAetB,UACX,OAAJ5I,QAAI,IAAJA,OAAI,EAAJA,EAAM4I,aAEZjI,EAAAA,EAAAA,KAAA,MAAIK,UAAU,0BAAyBH,SAChC,OAAJb,QAAI,IAAJA,GAAAA,EAAMqK,QACC,OAAJrK,QAAI,IAAJA,GAAa,QAATmK,EAAJnK,EAAMqK,eAAO,IAAAF,OAAT,EAAJA,EAAe1M,MACX,OAAJuC,QAAI,IAAJA,OAAI,EAAJA,EAAMvC,SAEZkD,EAAAA,EAAAA,KAAA,MAAIK,UAAU,0BAAyBH,SAChC,OAAJb,QAAI,IAAJA,GAAAA,EAAMqK,QACC,OAAJrK,QAAI,IAAJA,GAAa,QAAToK,EAAJpK,EAAMqK,eAAO,IAAAD,OAAT,EAAJA,EAAe5M,WACX,OAAJwC,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,cAEZmD,EAAAA,EAAAA,KAAA,MAAIK,UAAU,0BAAyBH,SACZ,aAApB,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMsK,gBACL3J,EAAAA,EAAAA,KAAA,QAAMK,UAAU,kHAAiHH,SAAC,aAIlIF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,4GAA2GH,SAAC,cAKhIF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,YAAWH,SACK,aAAvB,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMuK,mBACL5J,EAAAA,EAAAA,KAAA,QAAMK,UAAU,mHAAkHH,SAAC,aAInIF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,2GAA0GH,SAAC,cAK/HC,EAAAA,EAAAA,MAAA,MAAIE,UAAU,8BAA6BH,SAAA,EACzCC,EAAAA,EAAAA,MAAA,UACEE,UAAU,2IAIV2B,SAAWC,IAAC,IAAA4H,EAAA,OACVlG,EAAgB,OAAD1B,QAAC,IAADA,GAAS,QAAR4H,EAAD5H,EAAGC,cAAM,IAAA2H,OAAR,EAADA,EAAW1O,MAAM,EACjC+E,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQ7E,MAAM,UAAS+E,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQ7E,MAAM,SAAQ+E,SAAC,eAEzBF,EAAAA,EAAAA,KAAA,QACEK,UAAU,yEACVD,QAAU6B,GAhgBftI,OAAO0F,EAAM9F,KACpC,GAAe,WAAXA,EACF,IAAK,IAADuQ,EAAAC,EACF,IAAI9P,EAAO,IAAIC,gBAAgB,CAC7B0P,iBAAkBlG,IACjBrJ,WACH,MAAML,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,2CAAAD,OAA8C,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAM2K,aAAY,kBAAAzP,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,aAC1H,CACEC,QAAS,CACP,eAAgB,qCAGlBC,OAAQ,MACRC,KAAMX,IAGJlE,QAAaiE,EAASa,OAC5B,GAAqB,aAAb,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,SAAoD,OAAxB,OAAJxD,QAAI,IAAJA,GAAW,QAAP+T,EAAJ/T,EAAMkF,aAAK,IAAA6O,OAAP,EAAJA,EAAaG,YAC7C,OAAO3O,EAAAA,GAAML,MAAU,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,KACS,aAArB,OAAJnF,QAAI,IAAJA,GAAY,QAARgU,EAAJhU,EAAMqH,cAAM,IAAA2M,OAAR,EAAJA,EAAcxQ,UACvB+B,EAAAA,GAAM4O,QAAQ,oCACdzD,KAGJ,CAAE,MAAOxL,GACPD,QAAQQ,IAAIP,EACd,MAEA,IACE,IAAIhB,EAAO,IAAIC,gBAAgB,CAC7B2C,WAAgB,OAAJwC,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,WAClBtE,QAAa,OAAJ8G,QAAI,IAAJA,OAAI,EAAJA,EAAM9G,UACd8B,WACH,MAAML,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,4DAAAD,OAAmE,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,aACxG,CACEC,QAAS,CACP,eAAgB,qCAGlBC,OAAQ,OACRC,KAAMX,IAGJlE,QAAaiE,EAASa,OAC5B,GAAoB,YAAhB9E,EAAKwD,OACP,OAAO+B,EAAAA,GAAML,MAAU,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,KAE3BuL,KACAnL,EAAAA,GAAM4O,QAAQ,oCAEd3F,EAAS,IACTK,GAAY,KACd,CAAE,MAAO3J,GACPD,QAAQQ,IAAIP,EACd,CAAC,QACCyJ,IAAW,EACb,CACF,EAsc8ByF,CACE9K,EACI,OAAJA,QAAI,IAAJA,GAAAA,EAAM2K,aAAe,SAAW,OAEnC9J,SAEI,OAAJb,QAAI,IAAJA,GAAAA,EAAM2K,aAAe,SAAW,YAGrChK,EAAAA,EAAAA,KAAA,MAAIK,UAAU,0BAAyBH,SAChC,OAAJb,QAAI,IAAJA,GAAAA,EAAM+K,eACHrD,IAAW,OAAJ1H,QAAI,IAAJA,OAAI,EAAJA,EAAM+K,gBAAgB5C,OAC7B,cAEA,UAtEE3J,EAAI,EA4ER,UAKhBsC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mDAAkDH,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,iCAChBL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMH,UACnBC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sCAAqCH,SAAA,EAClDF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UACHF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,6FAA4FH,UAC1GC,EAAAA,EAAAA,MAAA,UACEE,UAAU,0CACV2B,SAAWC,IAGTpB,EAASoB,EAAEC,OAAO/G,OAClB2I,EAAS,EAAE,EACX5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,OACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,QACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,QACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,QACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,QACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,QACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,SACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,SACzBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,OAAMH,SAAC,cAG7BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6BAgCf,KACHkD,GACCpD,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uEAAsEH,UACnFF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6DAA4DH,UACzEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4GAA2GH,SAAA,EACxHF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uEAAsEH,UACnFF,EAAAA,EAAAA,KAACsJ,EAAAA,IAAO,CACNlJ,QAASA,IAAMlJ,GAAY,GAC3BmJ,UAAU,wDAGdL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAE/BF,EAAAA,EAAAA,KAACqK,EAAkB,CACjB1H,UAAWA,EACXrL,WAAYA,EACZE,UAAWA,aAMnB,MACJwI,EAAAA,EAAAA,KAACsK,EAAc,CACbtJ,gBAAiBiE,GACjBzE,KA9tBOA,KACPqD,GAASnD,IAGXoD,EAASD,EAAQ,EACnB,EA0tBIpD,SA/pBWA,KACXoD,GAAS,GAGXC,EAASD,EAAQ,EACnB,EA2pBInD,QAASA,GACTtJ,aAAcA,EACduJ,KAAMA,EACNC,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXzI,GAAIA,GACJpB,YAAaA,EACbC,aAAcA,EACdE,QAASA,EACTC,WAAYA,EACZC,OAAQA,EACRC,UAAWA,EACXyJ,iBAAkBA,EAClBC,iBAAkBA,EAClBC,cAAeA,IAEhBkD,IACCrE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uEAAsEH,UACnFF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iDAAgDH,UAC7DC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mGAAkGH,SAAA,EAC/GF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uEAAsEH,UACnFF,EAAAA,EAAAA,KAACsJ,EAAAA,IAAO,CACNlJ,QAASA,KACP4E,GAAkB,MAClBR,GAAc,IACdI,GAAY,IACZN,GAAkB,EAAM,EAE1BjE,UAAU,yDAGdL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,UAClCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uCAAsCH,UACnDC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oDAAmDH,SAAA,EAChEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,mBAAkBH,SAAC,qBACjCF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMuK,SA9gBK5Q,UAC3BiL,GAAY,MACZ3C,EAAEuI,iBACF,IACE,MAAMvE,EAASC,mBAAmBzI,KAAK0I,UAAU,CAAEtJ,gBAC7C7C,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,wCAAAD,OAAuC0L,EAAM,kBAAA1L,OAAyB,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,cAEvG1E,QAAaiE,EAASa,OAC5B,IAAIV,OAAOsQ,KAAS,OAAJ1U,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MAAMsI,OAO1B,MAAMqM,MAAM,sBAPuB,IAADC,EAAAC,EAAAC,EAClC7P,QAAQQ,IAAIzF,EAAM,wBAClB6O,GAAY,CACV9H,MAAW,OAAJ/G,QAAI,IAAJA,GAAU,QAAN4U,EAAJ5U,EAAMA,YAAI,IAAA4U,OAAN,EAAJA,EAAY7N,MACnBiD,MAAU,OAAJhK,QAAI,IAAJA,GAAU,QAAN6U,EAAJ7U,EAAMA,YAAI,IAAA6U,OAAN,EAAJA,EAAY3C,WAAY,KAAU,OAAJlS,QAAI,IAAJA,GAAU,QAAN8U,EAAJ9U,EAAMA,YAAI,IAAA8U,OAAN,EAAJA,EAAY3C,WAKtD,CAAE,MAAOjN,GACPK,EAAAA,GAAML,MAAW,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOuK,QACrB,GA0fqDtF,UACnCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uBAAsBH,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,gBAAeH,SAAC,iBACjCF,EAAAA,EAAAA,KAAA,SACE3J,KAAK,OACL0J,KAAK,QACLM,UAAU,2IACV0B,YAAY,sBACZ+I,UAAQ,EACR3P,MAAO0B,EACPmF,SAAWC,GAAMuC,GAAcvC,EAAEC,OAAO/G,aAG5C6E,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,UAClCF,EAAAA,EAAAA,KAAA,UACE3J,KAAK,SACLgK,UAAU,0GAAyGH,SACpH,iBAMPC,EAAAA,EAAAA,MAAA,QAAMoK,SA/kBE5Q,UAGxB,GAFA+K,IAAW,GACXzC,EAAEuI,iBACG7F,GAGH,IACE,IAAI1K,EAAO,IAAIC,gBAAgB,CAC7B2C,WAAYA,EACZtE,QAASD,GACT8R,eAAgBrD,IAAOhC,IAAgByC,OAAO,gBAC7CnN,WACH,MAAML,QAAiBM,MAAM,GAADC,OACvBC,wBAAgC,6DAAAD,OAAoE,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,aACzG,CACEC,QAAS,CACP,eAAgB,qCAGlBC,OAAQ,OACRC,KAAMX,IAGJlE,QAAaiE,EAASa,OAC5B,GAAqB,aAAb,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,QAGR,OAFA0I,EAAEC,OAAO6I,QACTvG,GAAc,IACPlJ,EAAAA,GAAML,MAAU,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,KAE3BI,EAAAA,GAAM4O,QAAQ,oCACdjI,EAAEC,OAAO6I,QACTvG,GAAc,GAChB,CAAE,MAAOvJ,GACPD,QAAQQ,IAAIP,EACd,CAAC,QACC2J,GAAY,MACZF,IAAW,GACXJ,GAAmBD,EACrB,MAlCA/I,EAAAA,GAAML,MAAM,qBAmCd,EAwiBkDiF,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,gBAAeH,SAAC,eACjCF,EAAAA,EAAAA,KAAA,SACED,KAAK,WACLM,UAAU,2IACV0B,YAAY,oBACZ+I,UAAQ,EACRE,UAAQ,EAERC,aAAsB,OAARtG,SAAQ,IAARA,QAAQ,EAARA,GAAU5E,WAG5BI,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,gBAAeH,SAAC,WACjCF,EAAAA,EAAAA,KAAA,SACED,KAAK,QACLM,UAAU,2IACV0B,YAAY,gBACZ+I,UAAQ,EACRE,UAAQ,EACRC,aAAsB,OAARtG,SAAQ,IAARA,QAAQ,EAARA,GAAU7H,YAG5BqD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOK,UAAU,gBAAeH,SAAC,UACjCC,EAAAA,EAAAA,MAAA,UACE2K,UAAQ,EACR9I,SAAWC,IAAO,IAADiJ,EACflG,GAAmB,OAAD/C,QAAC,IAADA,GAAS,QAARiJ,EAADjJ,EAAGC,cAAM,IAAAgJ,OAAR,EAADA,EAAW/P,MAAM,EAErCkF,UAAU,gJAA+IH,SAAA,EAEzJF,EAAAA,EAAAA,KAAA,UAAQ7E,MAAM,GAAE+E,SAAC,gBAChB+D,EAAYrI,KAAI,CAACiJ,EAAM/I,KACtBkE,EAAAA,EAAAA,KAAA,UAAoB7E,MAAO0J,EAAK3E,SAC7B6G,IAAOlC,GAAM2C,OAAO,eADV1L,YAiBnBkE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uBAAsBH,UACnCF,EAAAA,EAAAA,KAAA,UACE3J,KAAK,SACLgK,UAAU,0GACV2K,SAAUvG,GAAQvE,SACnB,gCAczB,C","sources":["components/utils/index.js","components/training/batch/batchComponents/liveview/LiveTracker.jsx","components/training/batch/batchComponents/liveview/LiveReportList.jsx","components/training/batch/batchComponents/liveview/LiveSubmissionList.jsx","pages/training/program/livebatchtracking/index.jsx"],"sourcesContent":["import * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport default class Utils {\r\n    static exportToXlsx(apiData, fileName) {\r\n        const fileType =\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const fileExtension = \".xlsx\";\r\n        const ws = XLSX.utils.json_to_sheet(apiData);\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    static exportAoaToXlsx(apiData, fileName) {\r\n        const fileType =\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const fileExtension = \".xlsx\";\r\n        const ws = XLSX.utils.aoa_to_sheet(apiData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  AiOutlineDownload,\n  AiOutlineFundView,\n  AiOutlineLineChart,\n} from \"react-icons/ai\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useAuth } from \"../../../../../context/auth\";\nimport { saveAs } from \"file-saver\";\nimport { useParams } from \"react-router\";\n// import XlsxPopulate from \"xlsx-populate\";\nfunction LiveTracker({\n  list,\n  setBatchPop,\n  setChartData,\n\n  setExcelData,\n  updater,\n  setUpdater,\n  syncId,\n  setSyncId,\n}) {\n  const { userData } = useAuth()\n  const [generate, setGenerate] = useState(false);\n  const [chartRep, setChartRep] = useState([]);\n\n  const [xlRep, setXlRep] = useState([]);\n  const [advxl, setadvXl] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const { id: batchId } = useParams()\n  const [reportsData, setReportsData] = useState([]);\n  const [newLabels, setNewLabels] = useState([]);\n  const [averageScore, setAverageScore] = useState([]);\n\n  const [downloader, setDownloader] = useState(false);\n  var average = [];\n  var newReports = [];\n  var newAdvanceReport = [];\n  var chartReports = [];\n  var chartArr = [];\n\n  useEffect(() => {\n    if (updater.status !== \"init\") {\n      reportDownloader(syncId.batch, syncId.assessment);\n\n      setUpdater({ ...updater, status: \"init\" });\n    }\n  }, [updater]);\n\n  const reportDownloader = async (bId, aId) => {\n    const formData = { assessmentId: aId, batchId: bId };\n    var response;\n\n    let form = new URLSearchParams(Object.entries(formData)).toString();\n\n    response = await fetch(\n      `${process.env.REACT_APP_PUBLIC_URL}/api/userBatchAnswers/getReport?access_token=${userData?.accessToken}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n\n        method: \"POST\",\n        body: form,\n      }\n    );\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      console.log(\"er\");\n    } else {\n      if (data.code === 404) {\n        console.error(data.msg);\n      } else {\n        //setPeopleList(data.data);\n        if (data?.value) {\n          setReportsData(data.data);\n          // console.log(data.data, \"ub\");\n          // setGenerate(true);\n          var reportData = data.data;\n          resultCreator(reportData, bId, aId);\n        } else {\n          toast.warn(`No reports available!! Try again later`);\n        }\n      }\n    }\n  };\n\n  const resultCreator = (reportData, bId, aId) => {\n    var reportObj;\n    var chartObj;\n    var advanceReportObj;\n\n    const content = reportData?.reportData.map((r, index) => {\n      reportObj = {\n        timestamp: r.createdDate,\n        program: reportData?.teamInfo?.programName,\n        facilitator: reportData?.teamInfo?.tranineeName,\n        batchId: bId,\n        assessmentId: aId,\n        participantName: r.fullName,\n        employeeCode: r.employeeId,\n        email: r.email,\n        score: `${r.obtainMarks} / ${r.totalMarks}`,\n        region: r.branchName,\n        result: r.result,\n        avgscore: \"\",\n      };\n      advanceReportObj = {\n        program: reportData?.teamInfo?.programName,\n        facilitator: reportData?.teamInfo?.tranineeName,\n        timestamp: r.createdDate.substring(0, 10),\n        participantName: r.fullName,\n        employeeCode: r.employeeId,\n        email: r.email,\n        contact: r?.contactNo,\n        score: r.obtainMarks,\n        region: r.branchName,\n        result: r.result,\n      };\n\n      var g = JSON.parse(r.answerResponseBunch);\n      var h = g.map((op, i) => {\n        var selectedAnswer;\n        if (op.questionType == \"multiopt\") {\n          selectedAnswer =\n            op?.selectedAnswer.join() || op?.selectedOption.join();\n        } else {\n          selectedAnswer = op?.selectedAnswer || op?.selectedOption;\n        }\n        var userselected = {};\n        userselected = {\n          ...userselected,\n          [`question${i + 1}`]: selectedAnswer,\n        };\n        advanceReportObj = { ...advanceReportObj, ...userselected };\n        return op;\n      });\n\n      //setAverageScore([...averageScore, r.obtainMarks]);\n      average.push(parseInt(r.obtainMarks));\n\n      chartReports.push(JSON.parse(r.answerResponseBunch));\n\n      newReports.push(reportObj);\n      if (newReports.length == reportData.reportData.length) {\n        var sum = average.reduce((pv, cv) => pv + cv, 0);\n        var avgs = sum / average.length;\n        // newReports.push({\n        //   timestamp: \"\",\n        //   participantName: \"\",\n        //   employeeCode: \"\",\n        //   email: \"\",\n        //   score: \"\",\n        //   region: \"\",\n        //   result: \"\",\n        //   avgscore: `${Math.trunc(avgs)} / ${r.totalMarks}`,\n        // });\n      }\n      newAdvanceReport.push(advanceReportObj);\n\n      return r;\n    });\n    //  averageFinder(average);\n\n    setXlRep(newReports);\n    if (updater.status !== \"init\") {\n      setExcelData(newReports);\n    }\n\n    newReports = [];\n    setadvXl(newAdvanceReport);\n    const newChartData = chartReports.map((rep) => {\n      return rep.map((newrep) => {\n        chartObj = {\n          label: newrep.question,\n          data: newrep.selectedOption,\n          type: newrep.questionType,\n          options: newrep.answers,\n        };\n\n        return chartArr.push(chartObj);\n      });\n    });\n\n    arrayMerger(chartArr);\n  };\n\n  const arrayMerger = (data) => {\n    const filteredArr = data.reduce((acc, current) => {\n      const x = acc.find((item) => item.label === current.label);\n\n      if (!x) {\n        const newCurr = {\n          label: current.label,\n          data: [current.data],\n          type: current.type,\n          options: current.options,\n        };\n        return acc.concat([newCurr]);\n      } else {\n        const newData = x.data.push(current.data);\n        const newCurr = {\n          label: current.label,\n          data: newData,\n          type: current.type,\n          options: current.options,\n        };\n        return acc;\n      }\n    }, []);\n\n    var c = [];\n    var allLabels = [];\n    // console.log(filteredArr, \"shh\");\n    var u = filteredArr.map((f) => {\n      allLabels.push(f.label);\n\n      //  var a = { ...f.data };\n      // var inc = 1;\n      // var a = f.data.reduce(\n      //   (a, b) => ((a[`opt${inc++}`] = JSON.stringify(b)), a),\n      //   {}\n      // );\n      // c.push(a);\n      return f;\n    });\n    // console.log(c, \"pouu\");\n    var tr = [];\n    // const finalReport = newReports.map((add, i) => {\n    //   var finals = {};\n    //   finals = { ...add, ...c[i] };\n    //   tr.push(finals);\n    // });\n    for (var i = 0; i <= c.length; i++) {\n      var finals = {};\n      finals = { ...newReports[i], ...c[i] };\n      tr.push(finals);\n    }\n    allLabels = [\n      \"Program Title\",\n      \"Facilitator\",\n      \"Date\",\n      \"Employee Name\",\n      \"EmployeeId\",\n      \"Email\",\n      \"Contact\",\n      \"Score\",\n      \"Region\",\n      \"Result\",\n      ...allLabels,\n    ];\n    // console.log(tr, allLabels, \"ihug\");\n    //setadvXl(tr);\n    setNewLabels(allLabels);\n\n    // // chartArry = filteredArr;\n    // console.log(filteredArr, \"ouigvvhf\");\n\n    //  setLabels(allLabels);\n\n    //setChartData(filteredArr);\n    setChartRep(filteredArr);\n    setGenerate(true);\n  };\n\n  const file = `${reportsData?.assessmentRes?.assessmentType}_assessment_${reportsData?.assessmentRes?.name}_${reportsData?.teamInfo?.tranineeName}`;\n  // const type = reportData?.assessmentRes?.assessmentType;\n\n  function getSheetData(data, header) {\n    var fields = Object.keys(data[0]);\n    var sheetData = data.map(function (row) {\n      return fields.map(function (fieldName) {\n        return row[fieldName] ? row[fieldName] : \"\";\n      });\n    });\n    sheetData.unshift(header);\n\n    return sheetData;\n  }\n  // console.log(xlRep, \"pppppppppo\");\n  async function saveAsExcel() {\n    var newData = xlRep;\n    // var scoreObj = {\n    //   timestamp: \"\",\n    //   participantName: \"\",\n    //   employeeCode: \"\",\n    //   email: \"\",\n    //   score: \"\",\n    //   region: \"\",\n    //   result: \"\",\n    //   avgscore: averageScore,\n    // };\n    // newData.push(scoreObj);\n\n    var data = newData;\n    console.log(data, \"uh\");\n    let header = [\n      \"Time Stamps\",\n      \"Employee Name\",\n      \"EmployeeId\",\n      \"Email\",\n      \"Score\",\n      \"Branch Name\",\n      \"Result\",\n      \"Average Score\",\n    ];\n\n    // XlsxPopulate.fromBlankAsync().then(async (workbook) => {\n    //   const sheet1 = workbook.sheet(0);\n    //   // const sheet2 = workbook.sheet(1);\n    //   // workbook.addSheet(SHEET2, 1);\n    //   const sheetData = getSheetData(data, header);\n\n    //   const totalColumns = sheetData[0].length;\n\n    //   sheet1.cell(\"A1\").value(sheetData);\n\n    //   const range = sheet1.usedRange();\n    //   const endColumn = String.fromCharCode(64 + totalColumns);\n    //   sheet1.row(1).style(\"bold\", true);\n    //   sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"ffff29\");\n    //   range.style(\"border\", true);\n    //   //   return workbook.outputAsync().then((res) => {\n    //   //     saveAs(res, `BasicReport_${file}.xlsx`);\n    //   //   });\n    // });\n    setDownloader(!downloader);\n  }\n\n  const averageFinder = (average) => {\n    console.log(average, \"uhj\");\n    //var arr = [3, \"a\", \"a\", \"a\", 2, 3, \"a\", 3, \"a\", 2, 4, 9, 3];\n    var arr = average;\n    var mf = 1;\n    var m = 0;\n    var item;\n\n    for (var i = 0; i < arr.length; i++) {\n      for (var j = i; j < arr.length; j++) {\n        if (arr[i] == arr[j]) m++;\n        if (mf < m) {\n          mf = m;\n          item = arr[i];\n        }\n      }\n\n      m = 0;\n    }\n    setAverageScore(item);\n    console.log(item + \" ( \" + mf + \" times ) \", \"uhukbk\");\n  };\n\n  async function saveAdvanceExcel() {\n    var data = advxl;\n    let header = newLabels;\n    console.log(data, header, \"popopop\");\n    // XlsxPopulate.fromBlankAsync().then(async (workbook) => {\n    //   const sheet1 = workbook.sheet(0);\n    //   // const sheet2 = workbook.sheet(1);\n    //   // workbook.addSheet(SHEET2, 1);\n    //   const sheetData = getSheetData(data, header);\n\n    //   const totalColumns = sheetData[0].length;\n\n    //   sheet1.cell(\"A1\").value(sheetData);\n\n    //   const range = sheet1.usedRange();\n    //   const endColumn = String.fromCharCode(64 + totalColumns);\n    //   sheet1.row(1).style(\"bold\", true);\n    //   //sheet1.range(\"A1:\" + endColumn + \"1\").style(\"fill\", \"ffff29\");\n    //   range.style(\"border\", true);\n\n    //   return workbook.outputAsync().then((res) => {\n    //     saveAs(res, `UserReport_${file}.xlsx`);\n    //   });\n    // });\n    setDownloader(!downloader);\n  }\n\n  return (\n    <>\n      {generate ? (\n        <>\n          {/* <div>\n            <button\n              type=\"button\"\n              className=\"flex w-fit items-center justify-center bg-sky-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n              onClick={() => saveAsExcel()}\n              // onClick={() => setDownloader(!downloader)}\n            >\n              <AiOutlineDownload className=\"text-xl mr-1\" /> Preview Report\n            </button>\n          </div> */}\n          <div>\n            <button\n              onClick={() => {\n                // saveAsExcel();\n                //setChartData(chartRep);\n                //  setExcelData(reportsData?.assessmentRes?.assessmentType);\n                setExcelData(xlRep);\n                setBatchPop(true);\n                setDownloader(false);\n              }}\n              type=\"button\"\n              className=\"flex w-fit items-center justify-center bg-green-500 py-2 rounded-md px-5 text-sm  text-white font-medium\"\n            >\n              <AiOutlineFundView className=\"text-xl mr-1\" /> Preview Report\n            </button>\n          </div>\n        </>\n      ) : (\n        <button\n          type=\"button\"\n          onClick={() => {\n            reportDownloader(list.batchId, list.assessmentId);\n          }}\n          className=\" text-gray-600  flex items-center justify-center space-x-1 text-2xl hover:underline\"\n        >\n          <AiOutlineLineChart />\n          <p className=\"text-sm mb-0.5\">Track Report</p>\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default LiveTracker;\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\nimport LiveTracker from \"./LiveTracker\";\r\n// import LiveAttendance from \"./LiveAttendance\";\r\nimport { AiOutlineLineChart } from \"react-icons/ai\";\r\n\r\nfunction LiveReportList({\r\n  next,\r\n  previous,\r\n  pgindex,\r\n  page,\r\n  totalCount,\r\n  setLimit,\r\n  setPage,\r\n  setSearch,\r\n  setBatchPop,\r\n  setChartData,\r\n  assessmentsList,\r\n  id,\r\n  setExcelData,\r\n  updater,\r\n  setUpdater,\r\n  syncId,\r\n  setSyncId,\r\n  batchAttendences,\r\n  setAttendancePop,\r\n  attendancePop,\r\n}) {\r\n  const [changer, setChanger] = useState(\"Fetching...\");\r\n  console.log(\"batchAttendences\", batchAttendences);\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setChanger(\"No Data Found...\");\r\n    }, 10000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  console.log(\r\n    batchAttendences,\r\n    \"batchAttendencesbatchAttendencesbatchAttendencesbatchAttendences\"\r\n  );\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <h5 className=\"text-2xl font-medium text-center leading-none text-gray-700 \">\r\n        Live Batch Report Preview\r\n      </h5>\r\n      <div className=\"flex flex-row  w-full justify-between items-center\">\r\n        <div className=\"px-2  flex w-full justify-between   \">\r\n          <h5 className=\"text-lg  font-medium leading-none text-gray-700 \">\r\n            Report List of Batch Id: {id}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className=\"relative mt-1 \">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none py-2 \">\r\n            <svg\r\n              className=\"w-5 h-5 text-gray-500 \"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"table-search\"\r\n            className=\"bg-gray-50 border py-1 outline-none border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-500 focus:border-sky-500 block w-80 pl-10 p-2.5  \"\r\n            placeholder=\"Search by Assessments\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-3\">\r\n        <table className=\"w-full text-sm  text-center text-gray-500 \">\r\n          <thead className=\"text-xs text-white uppercase bg-sky-500  \">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Assessment\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Type\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Batch Id\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Client Name\r\n              </th>\r\n\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                Download Report\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          {assessmentsList?.length == 0 ? (\r\n            <tbody>\r\n              <tr className=\"border-b  text-lg font-medium odd:bg-white even:bg-gray-50 \">\r\n                <td className=\"px-6 py-4\"> </td>\r\n                <td className=\"px-6 py-4\"> </td>\r\n                <td className=\"px-6 py-4\">{changer}</td>\r\n                <td className=\"px-6 py-4\"> </td>\r\n                <td className=\"px-6 py-4\"> </td>\r\n                <td className=\"px-6 py-4\"> </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <>\r\n              {assessmentsList?.map((list) => {\r\n                return (\r\n                  <tbody key={uuid_v4()} className=\"text-center\">\r\n                    <tr className=\"border-b   odd:bg-white even:bg-gray-50 odd: even:\">\r\n                      <th\r\n                        scope=\"row\"\r\n                        className=\"px-6 py-4 font-medium text-gray-900  whitespace-nowrap\"\r\n                      >\r\n                        {list.name}\r\n                      </th>\r\n                      <td className=\"px-6 py-4\">{list.assessmentType}</td>\r\n                      <td className=\"px-6 py-4\">{list.batchId}</td>\r\n                      <td className=\"px-6 py-4\">\r\n                        {list?.createdDate?.substring(0, 10)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">{list.clientName}</td>\r\n                      <td className=\"relative flex flex-row px-6 text-center py-4 justify-center items-center space-x-6  mt-2\">\r\n                        <LiveTracker\r\n                          list={list}\r\n                          setBatchPop={setBatchPop}\r\n                          setChartData={setChartData}\r\n                          setExcelData={setExcelData}\r\n                          updater={updater}\r\n                          setUpdater={setUpdater}\r\n                          syncId={syncId}\r\n                          setSyncId={setSyncId}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <h5 className=\"text-lg py-5 font-medium leading-none text-gray-700 \">\r\n        Attendance Data\r\n      </h5>\r\n      <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n        <table className=\"w-full text-sm border-b  text-center text-gray-500 \">\r\n          <thead className=\"text-xs text-white uppercase bg-sky-500  \">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                BatchId\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                {/* Total Attendance */}\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                View Attendance\r\n              </th>\r\n              {/* <th scope=\"col\" className=\"px-6 py-3\">\r\n                EMPLOYEE ID\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                EMPLOYEE NAME\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n                EMPLOYEE EMAIL\r\n              </th> */}\r\n            </tr>\r\n          </thead>\r\n\r\n          {batchAttendences ? (\r\n            <>\r\n              {\r\n                batchAttendences.length >= 0 && (\r\n                  <tbody>\r\n                    {/* {\r\n                    batchAttendences.map((data) => (\r\n\r\n                      < tr >\r\n                        <td className=\"py-3\">{data?.nominee?.employeeId ? `${data?.nominee?.employeeId}` : `-`}</td>\r\n                        <td className=\"py-3\">{data?.nominee?.firstName + \"  \" + data?.nominee?.lastName}</td>\r\n                        <td className=\"py-3\">{data?.nominee?.email}</td>\r\n                      </tr>\r\n                    ))\r\n                  } */}\r\n                    <tr>\r\n                      <td className=\"py-3\">{id}</td>\r\n                      <td className=\"py-3\"></td>\r\n                      <td className=\"relative flex flex-row px-6 text-center py-4 justify-center items-center space-x-6  mt-2\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            setAttendancePop(true);\r\n                          }}\r\n                          className=\" text-gray-600  flex items-center justify-center space-x-1 text-2xl hover:underline\"\r\n                        >\r\n                          <AiOutlineLineChart />\r\n                          <p className=\"text-sm mb-0.5\">Track Report</p>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n                // :(\r\n                //   <tbody>\r\n                //     <tr>\r\n                //       <td className=\"text-center py-3\" colSpan={2}>\r\n                //         No Attendance Found\r\n                //       </td>\r\n                //     </tr>\r\n                //   </tbody>\r\n                // )\r\n              }\r\n            </>\r\n          ) : (\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"text-center py-3\" colSpan={2}>\r\n                  Fetching...\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveReportList;\r\n","import React from \"react\";\nimport { AiOutlineCloudSync } from \"react-icons/ai\";\nimport { v4 as uuid_v4 } from \"uuid\";\nfunction LiveSubmissionList({ excelData, setUpdater, setSyncId }) {\n  return (\n    <div className=\"mt-10 relative\">\n      <div className=\"flex w-full justify-between items-center\">\n        <div className=\"flex flex-col w-fit my-3  bg-white  px-2\">\n          <h2 className=\"text-xl font-bold text-gray-800 capitalize \">\n            Program Name: {excelData[0]?.program}\n          </h2>\n          <p className=\"font-medium text-md text-gray-700\">\n            Trainer: {excelData[0]?.facilitator}\n          </p>\n        </div>\n        <div>\n          <h2 className=\"text-xl font-bold text-gray-800 capitalize mb-1\">\n            Total responses: {excelData?.length || 0}\n          </h2>\n          <button\n            onClick={() => {\n              setSyncId({\n                batch: excelData[0]?.batchId,\n                assessment: excelData[0]?.assessmentId,\n              });\n              setUpdater({ status: \"refresh\", id: uuid_v4() });\n            }}\n            className=\"flex w-fit items-center justify-center text-md mb-2 text-white bg-sky-500 rounded-md px-2 pb-1\"\n          >\n            Sync Data\n            <AiOutlineCloudSync className=\" ml-2 text-2xl mt-1\" />\n          </button>\n        </div>\n      </div>\n      <div\n        id=\"journal-scroll\"\n        className=\"flex w-full overflow-y-auto  max-h-[25rem] pt-1\"\n      >\n        <table className=\"w-full text-sm font-medium text-left text-gray-700\">\n          <thead className=\"text-xs text-gray-700 uppercase  bg-gray-50 \">\n            <tr>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Time Stamp\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Employee Name\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Employee Id\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Region\n              </th>\n              <th scope=\"col\" className=\"py-3 px-6\">\n                Status\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {excelData.map((data) => {\n              return (\n                <tr key={uuid_v4()} className=\"bg-white  border-b \">\n                  <th\n                    scope=\"row\"\n                    className=\"py-4 px-6 font-medium text-gray-600 whitespace-nowrap \"\n                  >\n                    {data?.timestamp?.replace(\"T\", \" \")?.substring(0, 19)}\n                  </th>\n                  <td className=\"py-4 px-6\">{data?.participantName}</td>\n                  <td className=\"py-4 px-6\">{data?.employeeCode}</td>\n                  <td className=\"py-4 px-6\">{data?.region}</td>\n                  <td className=\"py-4 px-6 text-green-500 font-semibold\">\n                    Submitted\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default LiveSubmissionList;\n","import React, { useEffect, useState } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\n// import ChartList from \"../../components/adminComponents/batchComponents/ChartList\";\nimport LiveReportList from \"../../../../components/training/batch/batchComponents/liveview/LiveReportList\";\nimport LiveSubmissionList from \"../../../../components/training/batch/batchComponents/liveview/LiveSubmissionList\";\nimport { BiRefresh } from \"react-icons/bi\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport Utils from \"../../../../components/utils\";\nimport { useAuth } from \"../../../../context/auth\";\nimport { useParams } from \"react-router-dom\";\n// import Utils from \"../../components/utils\";\n\n\n//report by id\nfunction BatchReports({ session }) {\n  const [assessmentsList, setAssessmentsList] = useState([]);\n  const [batchPop, setBatchPop] = useState(false);\n  const [attendancePop, setAttendancePop] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  // const [limit, setLimit] = useState(100);\n  const { userData, signOut } = useAuth()\n  const [page, setPage] = useState(0);\n  const [totalCount, setTotalCount] = useState();\n  const [chartData, setChartData] = useState([]);\n  const [excelData, setExcelData] = useState([]);\n  const [updater, setUpdater] = useState({ status: \"init\", id: \"0\" });\n  const [syncId, setSyncId] = useState(null);\n  // const router = useRouter();\n  const [batchAttendences, setBatchAttendances] = useState([]);\n  const [selectValue, setSelectValue] = useState(\"Absent\");\n  // const [pageLimit, setPageLimit] = useState(5);\n  // const [pageNo, setPageNo] = useState(1);\n  const [limit, setLimit] = useState(5);\n  const [start, setstart] = useState(0);\n  const [attendence, setAttendence] = useState([]);\n  const [dateOptions, setDateOptions] = useState([]);\n  const [batchData, setBatchData] = useState({});\n  const [showAddNominee, setShowAddNominee] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [employee, setEmployee] = useState(null);\n  const [date, setDate] = useState(null);\n  const [attendanceDate, setAttendanceDate] = useState(null);\n\n  //const { id } = router.query;\n  // var ab = [];\n  const [ab, setAb] = useState([]);\n  const [id, setId] = useState(null);\n  let { batchId } = useParams()\n  // console.log(\"links\", path)\n  // console.log(\"links\", path.id)\n  // 1&batch&name=batch 1&1\n  // alert(batchId)\n\n  let arr = batchId.split(\"&\")\n\n  batchId = arr[0]\n  // alert(batchId)\n\n\n  useEffect(() => {\n    getAssessmentsData();\n  }, [search, limit, page, updater]);\n\n  useEffect(() => {\n    searchAttendence();\n    //getOneBatch(id);\n  }, [date]);\n\n  const getAssessmentsData = async () => {\n    var response = await fetch(\n      `${process.env.REACT_APP_PUBLIC_URL}/api/userBatchAnswers/listOfReport/${batchId}?access_token=${userData?.accessToken}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n\n        method: \"POST\",\n      }\n    );\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      const error = (data && data.message) || response.statusText;\n\n      return Promise.reject(error);\n    } else {\n      // console.log(data);\n      if (data.code === 404) {\n        console.error(data.msg);\n      } else {\n        setAssessmentsList(data.data);\n\n        setTotalCount(data?.data?.length || 0);\n      }\n    }\n  };\n  const npages = totalCount;\n  const pgindex = npages - 5;\n  // const pgindex = npages;\n  const next = () => {\n    if (start >= pgindex) {\n      return;\n    } else {\n      setstart(start + 1);\n    }\n  };\n\n  const fetchAttendance = async () => {\n    try {\n      var response = await fetch(\n        `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/all/${batchId}?access_token=${userData?.accessToken}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          method: \"GET\",\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        const error = (data && data.message) || response.statusText;\n        return Promise.reject(error);\n      } else {\n        // console.log(data);\n        if (data.code === 404) {\n          console.error(data.msg);\n        } else {\n          setBatchAttendances(data.data.allBatchAttendence);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchBatchPeopleList = async () => {\n    try {\n      const filter = {\n        // pageLimit,\n        // pageNo,\n        // search,\n        limit,\n        start,\n        search,\n      };\n      const params = encodeURIComponent(JSON.stringify(filter));\n      const response = await fetch(\n        `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/listAttendenceofLiveTrackingLinks/${batchId}?filter=${params}&access_token=${userData?.accessToken}`\n      );\n      const data = await response.json();\n      if (data?.status === \"success\") {\n        setAttendence(data?.data?.result);\n        console.log(\n          \"data-----------------fetchBatchPeopleList ---------is \" +\n          data?.data?.result\n        );\n      }\n      //setPgindex(data.data.lastPage);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const previous = () => {\n    if (start <= 0) {\n      return;\n    } else {\n      setstart(start - 1);\n    }\n  };\n\n  function findBatch(i) {\n    var temparr = [];\n    // console.log(i);\n\n    const filteredassessment = assessmentsList?.map((a) => {\n      if (a.batchId == i) {\n        //setAb([...ab, a]);\n        temparr = [...temparr, a];\n        // console.log(a);\n      }\n      return a;\n    });\n\n    setAb(temparr);\n  }\n\n  const onRefresh = () => {\n\n    //console.log(batchId, \"yt\");\n    getOneBatch(batchId);\n    setId(batchId);\n    findBatch(batchId);\n    fetchAttendance(batchId);\n    fetchBatchPeopleList(batchId);\n    getDays();\n\n  };\n\n  useEffect(() => {\n    // var arr = links.split(\"=\");\n    // var num = arr.length - 1;\n    // //console.log(batchId, \"yt\");\n\n    setId(batchId);\n    findBatch(batchId);\n    fetchAttendance(batchId);\n    onRefresh();\n    //getDays();\n\n  }, [batchId, assessmentsList, start]);\n\n  const updateAttendance = async (item, status) => {\n    if (status === \"Update\") {\n      try {\n        let form = new URLSearchParams({\n          attendenceStatus: selectValue,\n        }).toString();\n        const response = await fetch(\n          `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/updateAttendence/${item?.attendenceId}?access_token=${userData?.accessToken}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n\n            method: \"PUT\",\n            body: form,\n          }\n        );\n        const data = await response.json();\n        if (data?.status === \"failure\" || data?.error?.statusCode === 404) {\n          return toast.error(data?.msg);\n        } else if (data?.result?.status === \"success\") {\n          toast.success(\"Attendence submitted successful.\");\n          onRefresh();\n        }\n        // e.target.reset();\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        let form = new URLSearchParams({\n          employeeId: item?.employeeId,\n          batchId: item?.batchId,\n        }).toString();\n        const response = await fetch(\n          `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/addAttendenceforAxis?access_token=${userData?.accessToken}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n\n            method: \"POST\",\n            body: form,\n          }\n        );\n        const data = await response.json();\n        if (data.status === \"failure\") {\n          return toast.error(data?.msg);\n        }\n        onRefresh();\n        toast.success(\"Attendence submitted successful.\");\n        // e.target.reset();\n        setEmail(\"\");\n        setEmployee(null);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const getOneBatch = async (ids) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_PUBLIC_URL}/api/batches/batchDetails/${ids}?access_token=${userData?.accessToken}`\n      );\n      const res = await response.json();\n      if (res?.code !== 200) {\n        const error = (res && res?.message) || response.statusText;\n        throw error;\n      } else {\n        setBatchData(res?.data);\n      }\n      //setPeopleList(data.data.nominees);\n      //setPgindex(data.data.lastPage);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getDays = () => {\n    var startDate = moment(batchData?.batchStartDate);\n    var endDate = moment(batchData?.batchEndDate);\n    var daysBetween = [];\n    var currentDate = startDate.clone();\n    while (currentDate.isSameOrBefore(endDate)) {\n      var currentDateFormat = currentDate.format(\"YYYY-MM-DD\");\n      daysBetween.push(currentDateFormat);\n      currentDate.add(1, \"days\");\n    }\n    setDateOptions(daysBetween);\n  };\n\n  const addAttendenceForm = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n    if (!employee) {\n      toast.error(\"Employee not found\");\n    } else {\n      try {\n        let form = new URLSearchParams({\n          employeeId: employeeId,\n          batchId: id,\n          attendenceDate: moment(attendanceDate).format(\"YYYY-MM-DD\"),\n        }).toString();\n        const response = await fetch(\n          `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/addDateWiseAttendence?access_token=${userData?.accessToken}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n\n            method: \"POST\",\n            body: form,\n          }\n        );\n        const data = await response.json();\n        if (data?.status === \"failure\") {\n          e.target.reset();\n          setEmployeeId(\"\");\n          return toast.error(data?.msg);\n        }\n        toast.success(\"Attendence submitted successful.\");\n        e.target.reset();\n        setEmployeeId(\"\");\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setEmployee(null);\n        setLoading(false);\n        setShowAddNominee(!showAddNominee);\n      }\n    }\n  };\n  const fetchEmployeeDetails = async (e) => {\n    setEmployee(null);\n    e.preventDefault();\n    try {\n      const params = encodeURIComponent(JSON.stringify({ employeeId }));\n      const response = await fetch(\n        `${process.env.REACT_APP_PUBLIC_URL}/api/nominees/getNomineeById?filter=${params}&access_token=${userData?.accessToken}`\n      );\n      const data = await response.json();\n      if (Object.keys(data?.data).length) {\n        console.log(data, \"fetchEmployeeDetails\");\n        setEmployee({\n          email: data?.data?.email,\n          name: data?.data?.firstName + \" \" + data?.data?.lastName,\n        });\n      } else {\n        throw Error(\"Employee not found\");\n      }\n    } catch (error) {\n      toast.error(error?.message);\n    }\n  };\n\n  const searchAttendence = async () => {\n    if (date !== \"\") {\n      try {\n        const filter = {\n          // pageLimit,\n          // pageNo,\n          // search,\n          limit,\n          start,\n          search,\n        };\n        const params = encodeURIComponent(JSON.stringify(filter));\n\n        const response = await fetch(\n          `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/daysWiseAttendenceofLiveTrackingLinks/${batchId}?date=${date}&filter=${params}&access_token=${userData?.accessToken}`\n        );\n        const data = await response.json();\n        if (data?.status === \"success\") {\n          setAttendence(data?.data?.result);\n          console.log(\n            \"data-----------------fetchBatchPeopleList ---------is \" +\n            data?.data?.result\n          );\n        }\n\n        //setPeopleList(data.data.nominees);\n        //setPgindex(data.data.lastPage);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    if (batchData) {\n      //getOneBatch();\n      getDays();\n    }\n  }, [batchData]);\n\n  useEffect(() => {\n    if (id) {\n      fetchBatchPeopleList();\n    }\n  }, [id, limit, start, search]);\n\n  const fetchAttendence = async (id) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_PUBLIC_URL}/api/batchAttendences/liveTrackingAttendence/${id}?access_token=${userData?.accessToken}`\n      );\n      // check for error response\n      if (!response.ok) {\n        // get error message from body or default to response statusText\n        const error = (data && data.message) || response.statusText;\n        console.log(\"error\", response.statusText);\n        return Promise.reject(error);\n      }\n      const data = await response.json();\n      console.log(\"data++++++++++++++++\", data);\n      if (data.status === \"failure\") {\n        toast.error(data?.msg);\n        return;\n      }\n      debugger\n      var allExportAttendenceData = data;\n      console.log(\n        \"allExportAttendenceData++++++++++++++++\",\n        allExportAttendenceData\n      );\n      handleAllExport(allExportAttendenceData);\n    } catch (error) {\n      console.error(\"There was an error!\", error);\n      if (error === \"Token Expired\" || error === \"Malformed User\") {\n        signOut();\n      }\n    }\n  };\n\n  const handleAllExport = (allExportAttendenceData) => {\n    let employees = [\n      [\n        \"Sr.No\",\n        \"Emp. Id\",\n        \"Full Name\",\n        \"Function\",\n        \"Zone\",\n        \"Supervisor Name\",\n        \"Supervisor Email\",\n        \"Job Family\",\n        \"Batch Id\",\n        \"Day1\",\n        \"Day2\",\n        \"Day3\",\n        \"Day4\",\n        \"Day5\",\n        \"Total Days\",\n        \"Total Present Days\",\n        \"Complete/Not complete\",\n        \"Total Learning Hours\",\n        \"Learning hours\",\n        \"Feedback on 5 point scale\",\n        \"Assessment Score (Only Day 5)\"\n      ],\n    ];\n\n    allExportAttendenceData.forEach((data, index) => {\n      let rowData = [\n        index + 1,\n        data.employeeId || \"\",\n        // data.email || \"\",\n        data.firstName ? `${data.firstName} ${data.lastName || ''}` : \"\",\n        data.function || \"\",\n        data.zone || \"\",\n        data.managerName || \"\",\n        data.managerEmail || \"\",\n        data.product || \"\",\n        data.batchId || \"\",\n        data.day1 || \"A\",\n        data.day2 || \"A\",\n        data.day3 || \"A\",\n        data.day4 || \"A\",\n        data.day5 || \"A\",\n        data.totalDays || \"\",\n        data.totalPresentDays || \"\",\n        \"-\",\n        data.totalLearningHours || \"\",\n        \"Learning hours\",\n        \"Feedback on 5 point scale\",\n        \"Assessment Score (Only Day 5)\"\n\n      ];\n\n      employees.push(rowData);\n    });\n\n    console.log(employees);\n    // Assuming Utils.exportAoaToXlsx is correctly implemented\n    Utils.exportAoaToXlsx(employees, `Attendance-Report-${Date.now()}`);\n  };\n\n  return (\n    <div className=\"flex flex-col w-full mt-5 px-6 h-[10rem]\">\n      {attendancePop ? (\n        <div className=\"fixed z-30  w-full h-screen top-0 left-0 items-center bg-gray-800/40\">\n          <div className=\"flex w-full items-start justify-center px-6  h-screen mt-20\">\n            <div className=\"relative mx-10  flex flex-col  w-full items-center justify-center bg-white rounded-lg shadow-md px-8 py-2\">\n              {/* <div className=\"absolute z-30 bg-white flex w-full justify-end items-end top-0 p-4 mt-20\">\n                  <IoClose\n                    onClick={() => setAttendancePop(false)}\n                    className=\"cursor-pointer text-xl font-semibold text-black \"\n                  />\n                </div> */}\n              {/* <div className=\"mt-20 w-full flex justify-between items-center\">\n                  <h3 className=\"text-black text-lg\">\n                    Attendance List ({batchAttendences?.length || 0})\n                  </h3>\n                  <div className=\"cursor-pointer\" onClick={onRefresh}>\n                    <BiRefresh size={30} />\n                  </div>\n                </div> */}\n              <div\n                id=\"journal-scroll\"\n                className=\"w-full h-[30rem] overflow-y-auto\"\n              >\n                {/* <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-5\">\n                    <table className=\"w-full text-sm  text-center text-gray-500 \">\n                      <thead className=\"text-xs text-white uppercase bg-sky-500  \">\n                        <tr>\n                          <th scope=\"col\" className=\"px-6 py-3\">\n                            First Name\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3\">\n                            Last Name\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3\">\n                            EmployeeId\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3\">\n                            Email\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3\">\n                            Timestamp\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {batchAttendences?.length ? (\n                          <>\n                            {batchAttendences?.map((batchAttendence, index) => (\n                              <tr\n                                key={index}\n                                className=\"border-b  text-lg font-medium odd:bg-white even:bg-gray-50 \"\n                              >\n                                <td className=\"px-6 py-4\">\n                                  {batchAttendence?.nominee?.firstName}\n                                </td>\n                                <td className=\"px-6 py-4\">\n                                  {batchAttendence?.nominee?.lastName}\n                                </td>\n                                <td className=\"px-6 py-4\">\n                                  {batchAttendence?.nominee?.employeeId}\n                                </td>\n                                <td className=\"px-6 py-4\">\n                                  {batchAttendence?.nominee?.email}\n                                </td>\n                                <td className=\"px-6 py-4\">\n                                  {batchAttendence?.createdAt}\n                                </td>\n                              </tr>\n                            ))}\n                          </>\n                        ) : null}\n                      </tbody>\n                    </table>\n                  </div> */}\n\n                <div className=\"flex justify-between items-center mt-5 mb-4\">\n                  <h5 className=\"text-xl font-semibold  leading-none text-gray-700 \">\n                    Attendence List\n                  </h5>\n                  <div className=\"flex\">\n                    <select\n                      onChange={(e) => {\n                        setDate(e?.target?.value);\n                      }}\n                      className=\"px-4 py-2 mr-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                    >\n                      <option value=\"\">Select Date</option>\n                      {dateOptions.map((date, index) => (\n                        <option key={index} value={date}>\n                          {moment(date).format(\"YYYY-MM-DD\")}\n                        </option>\n                      ))}\n                    </select>\n                    <button\n                      className=\"px-3 py-2 text-white text-sm font-medium bg-green-500 items-center rounded-md mr-2\"\n                      // onClick={() => {\n                      //   fetchAttendence(id);\n                      // }}\n                      onClick={() => { fetchAttendence(id); }}\n                    >\n                      Export\n                    </button>\n                    <button\n                      className=\"px-1 py-1 mr-1 text-white text-sm font-medium bg-green-500 items-center rounded-md w-80\"\n                      onClick={() => setShowAddNominee(true)}\n                    >\n                      Add Attendence\n                    </button>\n                    <div className=\"cursor-pointer mt-2\" onClick={onRefresh}>\n                      <BiRefresh size={30} />\n                    </div>\n                    <IoClose\n                      onClick={() => {\n                        setLimit(5);\n                        setstart(0);\n                        onRefresh();\n                        setAttendancePop(false);\n                      }}\n                      className=\"cursor-pointer text-xl font-semibold text-black ml-10\"\n                      size={50}\n                    />\n                  </div>\n                </div>\n                <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg mt-3\">\n                  <table className=\"w-full text-sm text-left text-gray-500\">\n                    <thead className=\"text-md m-4 bg-sky-600 text-white\">\n                      <tr>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          Name\n                        </th>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          Email\n                        </th>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          Employee Id\n                        </th>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          BatchStatus\n                        </th>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          Status\n                        </th>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          Attendance\n                        </th>\n                        <th scope=\"col\" className=\"px-3 py-2\">\n                          Attendance Date\n                        </th>\n                        {/* <th scope=\"col\" className=\"px-3 py-2\">\n                            Timestamp\n                          </th> */}\n                      </tr>\n                    </thead>\n                    {attendence?.map((item, i) => {\n                      return (\n                        <tbody key={i + 1}>\n                          <tr className=\"bg-white border-b  \">\n                            <td className=\"px-3 py-2 text-gray-900\">\n                              {/* {item?.nominee?.firstName} */}\n                              {item?.nominee\n                                ? item?.nominee?.firstName\n                                : item?.firstName}\n                            </td>\n                            <td className=\"px-3 py-2 text-gray-900\">\n                              {item?.nominee\n                                ? item?.nominee?.email\n                                : item?.email}\n                            </td>\n                            <td className=\"px-3 py-2 text-gray-900\">\n                              {item?.nominee\n                                ? item?.nominee?.employeeId\n                                : item?.employeeId}\n                            </td>\n                            <td className=\"px-3 py-2 text-gray-900\">\n                              {item?.batchNominees === \"Outside\" ? (\n                                <span className=\"bg-gray-300 text-green-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-600\">\n                                  Outside\n                                </span>\n                              ) : (\n                                <span className=\"bg-cyan-100 text-red-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-red-900 dark:text-red-600\">\n                                  Inside\n                                </span>\n                              )}\n                            </td>\n                            <td className=\"px-1 py-2\">\n                              {item?.attendenceStatus === \"Present\" ? (\n                                <span className=\"bg-green-100 text-green-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-600\">\n                                  Present\n                                </span>\n                              ) : (\n                                <span className=\"bg-red-100 text-red-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-red-900 dark:text-red-600\">\n                                  Absent\n                                </span>\n                              )}\n                            </td>\n                            <td className=\"flex items-center px-1 py-2\">\n                              <select\n                                className=\"px-2 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                                // value={selectValue}\n                                //value={data?.attendenceStatus}\n                                //onChange={(eF) => setSelectValue(e.target.value)}\n                                onChange={(e) =>\n                                  setSelectValue(e?.target?.value)\n                                }\n                              >\n                                <option value=\"Present\">Present</option>\n                                <option value=\"Absent\">Absent</option>\n                              </select>\n                              <span\n                                className=\"bg-blue-500 text-xs font-medium ml-2 mr-2 px-2 py-2 rounded text-white\"\n                                onClick={(e) =>\n                                  updateAttendance(\n                                    item,\n                                    item?.attendenceId ? \"Update\" : \"Add\"\n                                  )\n                                }\n                              >\n                                {item?.attendenceId ? \"Update\" : \"Add\"}\n                              </span>\n                            </td>\n                            <td className=\"px-3 py-4 text-gray-900\">\n                              {item?.attendenceDate\n                                ? moment(item?.attendenceDate).format(\n                                  \"YYYY-MM-DD\"\n                                )\n                                : \"-\"}\n                            </td>\n                            {/* <td className=\"px-3 py-4 text-gray-900\">\n                                {item?.createdAt}\n                              </td> */}\n                          </tr>\n                        </tbody>\n                      );\n                    })}\n                  </table>\n                </div>\n                <div className=\"flex flex-row justify-around mt-5 items-center  \">\n                  <span className=\"text-sm flex text-gray-700 \"></span>\n                  <div className=\"flex\">\n                    <div className=\"dropdown flex items-center relative\">\n                      <p>Show</p>\n                      <span className=\"bg-gray-100 text-gray-700 mx-2  font-normal tracking-wide rounded inline-flex items-center\">\n                        <select\n                          className=\"bg-transparent px-3 py-2  outline-none \"\n                          onChange={(e) => {\n                            //setPageLimit(e.target.value);\n                            //setPageNo(1);\n                            setLimit(e.target.value);\n                            setstart(0);\n                          }}\n                        >\n                          <option className=\"mr-1\">5</option>\n                          <option className=\"mr-1\">10</option>\n                          <option className=\"mr-1\">20</option>\n                          <option className=\"mr-1\">30</option>\n                          <option className=\"mr-1\">40</option>\n                          <option className=\"mr-1\">50</option>\n                          <option className=\"mr-1\">100</option>\n                          <option className=\"mr-1\">250</option>\n                          <option className=\"mr-1\">500</option>\n                        </select>\n                      </span>\n                      <p>Entries</p>\n                    </div>\n                  </div>\n\n                  {/* <div>\n                      <a\n                        onClick={() => previous()}\n                        className={` ${\n                          start === 0\n                            ? \"hidden\"\n                            : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 bg-gray-200 cursor-pointer rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                        }`}\n                      >\n                        Previous\n                      </a>\n\n                      <a\n                        onClick={() => next()}\n                        className={` ${\n                          start >= pgindex\n                            ? \"hidden\"\n                            : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 cursor-pointer bg-gray-200 rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                        }`}\n                      >\n                        Next\n                      </a>\n                    </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {batchPop ? (\n        <div className=\"fixed z-30  w-full h-screen top-0 left-0 items-center bg-gray-800/40\">\n          <div className=\"flex w-full items-start mt-4 justify-center px-6  h-screen\">\n            <div className=\"relative mx-10  flex flex-col  w-full items-center justify-center bg-white rounded-lg shadow-md px-8 py-2\">\n              <div className=\"absolute z-30 bg-white flex w-full justify-end items-end top-0  p-4 \">\n                <IoClose\n                  onClick={() => setBatchPop(false)}\n                  className=\"cursor-pointer text-xl font-semibold text-black \"\n                />\n              </div>\n              <div className=\"w-full h-[34rem]\">\n                {/* <ChartList chartData={chartData} excelData={excelData} /> */}\n                <LiveSubmissionList\n                  excelData={excelData}\n                  setUpdater={setUpdater}\n                  setSyncId={setSyncId}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <LiveReportList\n        assessmentsList={ab}\n        next={next}\n        previous={previous}\n        pgindex={pgindex}\n        setExcelData={setExcelData}\n        page={page}\n        totalCount={totalCount}\n        setLimit={setLimit}\n        setPage={setPage}\n        setSearch={setSearch}\n        id={id}\n        setBatchPop={setBatchPop}\n        setChartData={setChartData}\n        updater={updater}\n        setUpdater={setUpdater}\n        syncId={syncId}\n        setSyncId={setSyncId}\n        batchAttendences={batchAttendences}\n        setAttendancePop={setAttendancePop}\n        attendancePop={attendancePop}\n      />\n      {showAddNominee && (\n        <div className=\"fixed z-30  w-full h-screen top-0 left-0 items-center bg-gray-800/40\">\n          <div className=\"flex w-full items-center mt-20 justify-center \">\n            <div className=\"relative mx-10 flex flex-col items-center justify-center bg-white rounded-lg shadow-md px-8 py-2\">\n              <div className=\"absolute z-30 bg-white flex w-full justify-end items-end top-0  p-2 \">\n                <IoClose\n                  onClick={() => {\n                    setAttendanceDate(null)\n                    setEmployeeId(\"\")\n                    setEmployee(\"\");\n                    setShowAddNominee(false);\n                  }}\n                  className=\"cursor-pointer text-2xl font-semibold text-black \"\n                />\n              </div>\n              <div className=\"flex justify-center\">\n                <div className=\"flex items-center justify-center p-4\">\n                  <div className=\"rounded overflow-hidden shadow-lg p-5 bg-[white] \">\n                    <h1 className=\"text-xl text-700\">Attendence Form</h1>\n                    <br />\n                    <form onSubmit={fetchEmployeeDetails}>\n                      <div className=\"w-100 flex flex-wrap\">\n                        <div className=\"px-2\">\n                          <label className=\"leading-loose\">Employee Id</label>\n                          <input\n                            type=\"text\"\n                            name=\"email\"\n                            className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                            placeholder=\"Provide Employee Id\"\n                            required\n                            value={employeeId}\n                            onChange={(e) => setEmployeeId(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"py-1 mt-7 space-x-4\">\n                          <button\n                            type=\"submit\"\n                            className=\"bg-[#97144c] flex-inline justify-center items-center text-white px-4 py-1 rounded-md focus:outline-none\"\n                          >\n                            Find\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                    <form onSubmit={addAttendenceForm}>\n                      <div className=\"px-2\">\n                        <label className=\"leading-loose\">Full name</label>\n                        <input\n                          name=\"fullName\"\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                          placeholder=\"Provide full name\"\n                          required\n                          disabled\n                          // readOnly\n                          defaultValue={employee?.name}\n                        />\n                      </div>\n                      <div className=\"px-2\">\n                        <label className=\"leading-loose\">Email</label>\n                        <input\n                          name=\"email\"\n                          className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                          placeholder=\"Provide email\"\n                          required\n                          disabled\n                          defaultValue={employee?.email}\n                        />\n                      </div>\n                      <div className=\"px-2\">\n                        <label className=\"leading-loose\">Date</label>\n                        <select\n                          required\n                          onChange={(e) => {\n                            setAttendanceDate(e?.target?.value);\n                          }}\n                          className=\"px-4 py-2 mr-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                        >\n                          <option value=\"\">Select Date</option>\n                          {dateOptions.map((date, index) => (\n                            <option key={index} value={date}>\n                              {moment(date).format(\"YYYY-MM-DD\")}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      {/* <div className=\"w-1/2 px-2\">\n                <label className=\"leading-loose\">Branch Name</label>\n                <input\n                  name=\"branchName\"\n                  className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                  placeholder=\"Provide employee id\"\n                  required\n                  readOnly\n                  defaultValue={employee.branchName}\n                />\n              </div> */}\n                      <div className=\"py-4  space-x-4 px-2\">\n                        <button\n                          type=\"submit\"\n                          className=\"bg-[#97144c] flex-inline justify-center items-center text-white px-4 py-2 rounded-md focus:outline-none\"\n                          disabled={loading}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BatchReports;"],"names":["Utils","exportToXlsx","apiData","fileName","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportAoaToXlsx","ws","aoa_to_sheet","book_new","book_append_sheet","_ref","_reportsData$assessme","_reportsData$assessme2","_reportsData$teamInfo","list","setBatchPop","setChartData","setExcelData","updater","setUpdater","syncId","setSyncId","userData","useAuth","generate","setGenerate","useState","chartRep","setChartRep","xlRep","setXlRep","advxl","setadvXl","labels","setLabels","id","batchId","useParams","reportsData","setReportsData","newLabels","setNewLabels","averageScore","setAverageScore","downloader","setDownloader","average","newReports","newAdvanceReport","chartReports","chartArr","useEffect","status","reportDownloader","batch","assessment","async","bId","aId","formData","assessmentId","response","form","URLSearchParams","Object","entries","toString","fetch","concat","process","accessToken","headers","method","body","json","ok","code","console","error","msg","value","reportData","resultCreator","toast","warn","log","reportObj","chartObj","advanceReportObj","map","r","index","_reportData$teamInfo","_reportData$teamInfo2","_reportData$teamInfo3","_reportData$teamInfo4","timestamp","createdDate","program","teamInfo","programName","facilitator","tranineeName","participantName","fullName","employeeCode","employeeId","email","score","obtainMarks","totalMarks","region","branchName","result","avgscore","substring","contact","contactNo","JSON","parse","answerResponseBunch","op","i","selectedAnswer","questionType","join","selectedOption","userselected","push","parseInt","length","reduce","pv","cv","rep","newrep","label","question","options","answers","arrayMerger","filteredArr","acc","current","x","find","item","newData","newCurr","c","allLabels","tr","f","finals","assessmentRes","assessmentType","name","_jsx","_Fragment","children","_jsxs","onClick","className","AiOutlineFundView","AiOutlineLineChart","next","previous","pgindex","page","totalCount","setLimit","setPage","setSearch","assessmentsList","batchAttendences","setAttendancePop","attendancePop","changer","setChanger","timer","setTimeout","clearTimeout","fill","viewBox","xmlns","fillRule","d","clipRule","placeholder","onChange","e","target","scope","_list$createdDate","clientName","LiveTracker","uuid_v4","colSpan","_excelData$","_excelData$2","excelData","_excelData$3","_excelData$4","AiOutlineCloudSync","_data$timestamp","_data$timestamp$repla","replace","session","setAssessmentsList","batchPop","search","signOut","setTotalCount","chartData","setBatchAttendances","selectValue","setSelectValue","limit","start","setstart","attendence","setAttendence","dateOptions","setDateOptions","batchData","setBatchData","showAddNominee","setShowAddNominee","setEmail","setEmployeeId","loading","setLoading","employee","setEmployee","date","setDate","attendanceDate","setAttendanceDate","ab","setAb","setId","arr","split","getAssessmentsData","searchAttendence","message","statusText","Promise","reject","_data$data","fetchAttendance","allBatchAttendence","fetchBatchPeopleList","filter","params","encodeURIComponent","stringify","_data$data2","_data$data3","findBatch","temparr","a","onRefresh","getOneBatch","getDays","ids","res","startDate","moment","batchStartDate","endDate","batchEndDate","daysBetween","currentDate","clone","isSameOrBefore","currentDateFormat","format","add","_data$data7","_data$data8","handleAllExport","allExportAttendenceData","employees","forEach","rowData","firstName","lastName","function","zone","managerName","managerEmail","product","day1","day2","day3","day4","day5","totalDays","totalPresentDays","totalLearningHours","Date","now","_e$target","fetchAttendence","BiRefresh","size","IoClose","_item$nominee","_item$nominee2","_item$nominee3","nominee","batchNominees","attendenceStatus","_e$target2","_data$error","_data$result","attendenceId","statusCode","success","updateAttendance","attendenceDate","LiveSubmissionList","LiveReportList","onSubmit","preventDefault","keys","Error","_data$data4","_data$data5","_data$data6","required","reset","disabled","defaultValue","_e$target3"],"sourceRoot":""}
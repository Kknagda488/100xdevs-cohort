{"version":3,"file":"static/js/308.b1375705.chunk.js","mappings":"gPA8GA,QAxGA,SAAoBA,GAUhB,IAViB,MACnBC,EAAK,QACLC,EAAO,eACPC,EAAc,OACdC,EAAM,iBACNC,EAAgB,gBAChBC,EAAe,MACfC,EAAK,eACLC,EAAc,SACdC,GACDT,EACC,MAAOU,EAAKC,IAAUC,EAAAA,EAAAA,WAAS,IACzB,SAAEC,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,MAExBC,GAAWC,EAAAA,EAAAA,OACVC,EAAKC,IAAUP,EAAAA,EAAAA,UAAS,+CAC/BQ,EAAAA,EAAAA,YAAU,KACahB,EAAOiB,KAAKC,IAC3BA,EAAKC,KAAa,OAAPrB,QAAO,IAAPA,OAAO,EAAPA,EAASqB,KAEtBZ,GAAO,GAEFW,IACP,GACD,CAAClB,IACJoB,QAAQC,IAAI,0BAA2BvB,GACvC,MAAMwB,EAAmB,IAAIC,KAAKzB,EAAQwB,kBAC1CxB,EAAQwB,iBAAmBA,EAAiBE,cAAcC,MAAM,KAAK,GAErE,MAAMC,EAAiB,IAAIH,KAAKzB,EAAQ4B,gBAGxC,OAFA5B,EAAQ4B,eAAiBA,EAAeF,cAAcC,MAAM,KAAK,IAG/DE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kDAAiDF,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,UACrCF,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLC,QAASA,KAEPrB,EAAS,YAADsB,OAAoB,OAAPpC,QAAO,IAAPA,OAAO,EAAPA,EAASqB,IAAK,EAKrCY,UAAS,WAAAG,OAAa5B,EAClB,mDACA,6CAA4C,sHACuEuB,SAEtHvB,EAAM,QAAU,WAGrBqB,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,SAAE/B,EAAQqC,eACjDR,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,SAAE/B,EAAQsC,cACjDT,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,SACb,KAAvB/B,EAAQuC,YACL,OACuB,KAAvBvC,EAAQuC,YACN,QACA,OAERV,EAAAA,EAAAA,KAAA,MAAII,UAAU,qBAAoBF,SAAE/B,EAAQwB,oBAC5CK,EAAAA,EAAAA,KAAA,MAAII,UAAU,qBAAoBF,SAAE/B,EAAQ4B,kBAC5CC,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,SACZ,KAAxB/B,EAAQwC,aACL,sBACwB,KAAxBxC,EAAQwC,aACN,mBACA,OAERX,EAAAA,EAAAA,KAAA,MAAII,UAAU,0BAAyBF,SACZ,KAAxB/B,EAAQwC,cAAuBxC,EAAQyC,SACpCzC,EAAQyC,SACR,OAENZ,EAAAA,EAAAA,KAAA,MAAII,UAAU,wCAAuCF,SAC5B,MAAd,OAARpB,QAAQ,IAARA,OAAQ,EAARA,EAAU+B,WACTV,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oDAAmDF,UAChEF,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAE,0BAAAR,OAA4BpC,EAAQqB,IAAKU,UAC/CF,EAAAA,EAAAA,KAACgB,EAAAA,IAAa,SAGlBhB,EAAAA,EAAAA,KAAA,OACEI,UAAU,mDACVE,QAASA,KACP5B,GAAS,GACTD,EAAe,CACbwC,MAAO9C,EAAQqC,YACfhB,GAAIrB,EAAQqB,IACZ,EACFU,UAEFF,EAAAA,EAAAA,KAACkB,EAAAA,IAAe,CAACC,MAAM,aAGzB,WAKd,E,0BCmLA,QArRA,SAAwBlD,GAiBpB,IAjBqB,YACvBmD,EAAW,gBACX7C,EAAe,GACfiB,EAAE,OACFnB,EAAM,UACNgD,EAAS,MACT7C,EAAK,KAEL8C,EAAI,SACJC,EAAQ,QACRC,EAAO,KACPC,EAAI,SACJC,EAAQ,QACRC,EAAO,UACPC,EAAS,OACTC,EAAM,iBACNvD,GACDL,EAEC,MAAO6D,EAAOpD,IAAYG,EAAAA,EAAAA,WAAS,IAC5BkD,EAAatD,IAAkBI,EAAAA,EAAAA,UAAS,CAC7CoC,MAAO,GACPzB,GAAI,MAEA,SAAEV,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,MACxBZ,EAAkB4D,IAEtB,IAAIC,EAEJ,GAAsB,IAAlB5D,EAAO6D,OACTb,EAAU,CAACW,QACN,CACY3D,EAAOiB,KAAKC,IACvBA,EAAKC,KAAOwC,EAAYxC,KAE1ByC,GAAgB,GAER1C,EACHA,KAKT,GAAI0C,EAAe,CACjB,MAAM/D,EAAQG,EAAO8D,WAAW5C,GAASA,EAAKC,KAAOwC,EAAYxC,KACjE,IAAI4C,EAAY,IAAI/D,GAChBH,GAAS,EACXkE,EAAUC,OAAOnE,EAAO,GAExBuB,QAAQ6C,KAAK,mBAAD/B,OAAoByB,EAAYO,kBAE9ClB,EAAUe,EACZ,MACEf,EAAU,IAAIhD,EAAQ2D,GAE1B,GAkCF,OACE7B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CF,SAAA,EAEvDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDF,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,uCAAsCF,UACnDF,EAAAA,EAAAA,KAAA,MAAII,UAAU,0CAAyCF,SAAC,0CAK1DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,8EAA6EF,UAC1FF,EAAAA,EAAAA,KAAA,OACEI,UAAU,yBACVoC,KAAK,eACLC,QAAQ,YACRC,MAAM,6BAA4BxC,UAElCF,EAAAA,EAAAA,KAAA,QACE2C,SAAS,UACTC,EAAE,mHACFC,SAAS,iBAIf7C,EAAAA,EAAAA,KAAA,SACE8C,MAAOjB,EACPxB,KAAK,OACLb,GAAG,eACHY,UAAU,wJACV2C,YAAY,yBACZC,SAAWC,GAAMrB,EAAUqB,EAAEC,OAAOJ,eAIzChB,GACC9B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,yEAAwEF,UACrFF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gDAA+CF,UAC5DC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0GAAyGF,SAAA,EACtHF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0EAQfJ,EAAAA,EAAAA,KAAA,OACER,GAAG,iBACHY,UAAU,kDAAiDF,UAE3DF,EAAAA,EAAAA,KAACmD,EAAAA,EAAe,CACdlC,MAAOc,EAAYd,MACnBmC,aAAcA,IAAM1E,GAAS,GAC7B2E,cAAeA,IAtFHC,WAC1B,IACE,MAAMC,QAAiBC,MAAM,GAADjD,OACvBkD,wBAAgC,gCAAAlD,OAA+BwB,EAAYvC,GAAE,kBAAAe,OAAiBzB,EAAS4E,aAC1G,CACEC,QAAS,CACP,eAAgB,qCAGlBC,OAAQ,WAGNC,QAAaN,EAASO,OAC5B,IAAKP,EAASQ,GAGZ,MADeF,GAAQA,EAAKG,SAAYT,EAASU,WAE1B,MAAdJ,EAAKK,KACdC,EAAAA,GAAMC,MAAMP,EAAKQ,MAEjBF,EAAAA,GAAMG,QAAQT,EAAKQ,KACnB/F,IACAI,GAAS,GAEb,CAAE,MAAO0F,GACP3E,QAAQ2E,MAAM,sBAAuBA,GACvB,kBAAVA,GAAuC,mBAAVA,GAC/BrF,GAEJ,GAyDmCwF,CAAoBxC,EAAYvC,eAM7D,MACJQ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qDAAoDF,UACjEC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,0CAAyCF,SAAA,EACxDF,EAAAA,EAAAA,KAAA,SAAOI,UAAU,oCAAmCF,UAClDC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,wBAAuBF,SAAC,UAGlDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,wBAAuBF,SAAC,kBAIlDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,wBAAuBF,SAAC,iBAGlDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,yBAAwBF,SAAC,UAGnDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,yBAAwBF,SAAC,gBAInDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,yBAAwBF,SAAC,cAGnDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,yBAAwBF,SAAC,UAGnDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,yBAAwBF,SAAC,aAG7B,KAArBpB,EAAS+B,UACRb,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,yBAAwBF,SAAC,aAInDF,EAAAA,EAAAA,KAAA,MAAIwE,MAAM,MAAMpE,UAAU,iCAIhCJ,EAAAA,EAAAA,KAAA,SAAAE,SACyB,GAAtBkB,EAAYc,QACX/B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sDAAqDF,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAII,UAAU,eAEdJ,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWF,SAAC,kDAI1BF,EAAAA,EAAAA,KAAA,MAAII,UAAU,kBAGhBJ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGkB,EAAY9B,KAAI,CAACnB,EAASD,KAEvB8B,EAAAA,EAAAA,KAACyE,EAAW,CAEVvG,MAAOA,EACPG,OAAQA,EACRF,QAASA,EAETC,eAAgBA,EAEhBI,MAAOA,EAEPD,gBAAiBA,EACjBG,SAAUA,EAEVD,eAAgBA,IAZXiG,EAAAA,EAAAA,kBAsBrBvE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDF,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCF,SAAA,EAClDF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UACHF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,6FAA4FF,UAC1GC,EAAAA,EAAAA,MAAA,UACEC,UAAU,yCACV4C,SAAWC,IACTvB,EAASuB,EAAEC,OAAOJ,OAClBnB,EAAQ,EAAE,EACVzB,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,QAAOF,SAAC,OAC1BF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,QAAOF,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,QAAOF,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,QAAOF,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,QAAOF,SAAC,QAC1BF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,QAAOF,SAAC,aAG9BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mBAIPC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KACEM,QAASA,IAAMiB,IACfnB,UAAS,IAAAG,OAAe,IAATkB,EACX,SACA,mLACCvB,SACN,cAIDF,EAAAA,EAAAA,KAAA,KACEM,QAASA,IAAMgB,IACflB,UAAS,IAAAG,OAAMkB,GAAQD,EACnB,SACA,mLACCtB,SACN,iBAOX,ECrHA,QAhKA,SAAgBjC,GAAgD,IAA/C,GAAEuB,EAAE,MAAEhB,EAAK,gBAAED,EAAe,aAAEoG,GAAc1G,EAE3D,MAAM,SAAEa,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,OACvB4F,EAAUC,IAAehG,EAAAA,EAAAA,WAAS,IAClCmD,EAAa8C,IAAkBjG,EAAAA,EAAAA,UAAS,CAAC,IACzCkG,EAAQC,IAAanG,EAAAA,EAAAA,UAAS,IAC9BoG,EAAYC,IAAiBrG,EAAAA,EAAAA,UAAS,IACtC2C,EAAS2D,IAActG,EAAAA,EAAAA,UAAS,IAChCuG,EAAWC,IAAgBxG,EAAAA,EAAAA,UAAS,IACpCuC,EAAakE,IAAkBzG,EAAAA,EAAAA,UAAS,KACxCR,EAAQgD,IAAaxC,EAAAA,EAAAA,UAAS,KAC9BgD,EAAQD,IAAa/C,EAAAA,EAAAA,UAAS,KA6BrCQ,EAAAA,EAAAA,YAAU,KACJG,GA1BJgE,MAAM,GAADjD,OACAkD,wBAAgC,iCAAAlD,OAAgCf,EAAE,kBAAAe,OAAyB,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU4E,cAE/F6B,MAAKjC,UACJ,MAAMO,QAAaN,EAASO,OAI5B,GAHArE,QAAQC,IAAImE,IAGPN,EAASQ,GAAI,CAEhB,MAAMK,EAASP,GAAQA,EAAKG,SAAYT,EAASU,WACjD,OAAOuB,QAAQC,OAAOrB,EACxB,CAEAU,EAAejB,EAAKA,KAAK,IAE1B6B,OAAOtB,IACNU,EAAe,CAAC,GAChBrF,QAAQ2E,MAAM,sBAAuBA,GACvB,kBAAVA,GAAuC,mBAAVA,GAC/BrF,GACF,GAOJ,GACC,CAACS,IAGJ,MA4BMlB,EAAmBgF,UACvB,IACE,MAAMqC,EAAS,CACbP,YACAL,SACAlD,UAEI+D,EAASC,mBAAmBC,KAAKC,UAAUJ,IAC3CpC,QAAiBC,MAAM,GAADjD,OACvBkD,wBAAgC,8BAAAlD,OAA6BqF,EAAM,kBAAArF,OAAyB,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU4E,cAE7FG,QAAaN,EAASO,OAC5B,IAAKP,EAASQ,GACZ,MAAMF,EAAKG,QAEbsB,EAAezB,EAAKA,KAAKmC,UACzBb,EAAWtB,EAAKA,KAAKoC,SACvB,CAAE,MAAO7B,GACP3E,QAAQC,IAAI0E,GACE,mBAAVA,GAAwC,kBAAVA,GAChCrF,GAEJ,GAuBF,OAJAM,EAAAA,EAAAA,YAAU,KACRf,GAAkB,GACjB,CAACyG,EAAQK,EAAWvD,KAGrB7B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6CAA4CF,UAEzDF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gCAA+BF,UAE5CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sDAAqDF,SAAA,EAClEF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,8IAA6IF,UAC3JF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0LAAyLF,UACtMF,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAG,iBAAgBb,SAAC,4BAK9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC/BF,EAAAA,EAAAA,KAACkG,EAAe,CACd1H,MAAOA,EAEPD,gBAAiBA,EACjBiB,GAAIA,EACJnB,OAAQA,EACRgD,UAAWA,EACXD,YAAaA,EACbE,KA1CCA,KACX7B,QAAQC,IAAIqF,GACRA,GAAUvD,GAGZwD,EAAUD,EAAS,EACrB,EAqCUxD,SAnCKA,KACXwD,GAAU,GAGZC,EAAUD,EAAS,EACrB,EA+BUvD,QAASA,EACTC,KAAMsD,EACNpD,QAASqD,EACTtD,SAAU2D,EACVzD,UAAWA,EACXC,OAAQA,EAERvD,iBAAkBA,YAOhC,E,QC0FA,QApPA,WACE,MAAOuD,EAAQD,IAAa/C,EAAAA,EAAAA,UAAS,KAC/B,SAAEC,EAAQ,QAAEC,IAAYC,EAAAA,EAAAA,OAEvBmH,EAAUC,IAAevH,EAAAA,EAAAA,UAAS,KAElCwH,EAAO3E,IAAY7C,EAAAA,EAAAA,UAAS,IAC5B4C,EAAME,IAAW9C,EAAAA,EAAAA,UAAS,IAC1BoG,EAAYC,IAAiBrG,EAAAA,EAAAA,aAC7ByH,EAAaC,IAAkB1H,EAAAA,EAAAA,WAAS,IACxC2H,EAAUC,IAAe5H,EAAAA,EAAAA,WAAS,IAClC8F,EAAcpG,IAAmBM,EAAAA,EAAAA,WAAS,IAC1C6H,EAAKC,IAAU9H,EAAAA,EAAAA,aACfW,EAAIhB,IAASK,EAAAA,EAAAA,UAAS,OACtBR,EAAQgD,IAAaxC,EAAAA,EAAAA,UAAS,KAC9B+H,EAAYC,IAAiBhI,EAAAA,EAAAA,UAAS,KACtCmD,EAAa8C,IAAkBjG,EAAAA,EAAAA,UAAS,KACxCiI,EAAWC,IAAgBlI,EAAAA,EAAAA,UAAS,OACpCmI,EAAWC,IAAgBpI,EAAAA,EAAAA,UAAS,OACpCqI,EAAaC,IAAkBtI,EAAAA,EAAAA,UAAS,KAE/CQ,EAAAA,EAAAA,YAAU,KACR4H,EAAa,MACbE,EAAe,GAAG,GACjB,CAACX,KAuGJnH,EAAAA,EAAAA,YAAU,KAzBRmE,MAAM,GAADjD,OACAkD,wBAAgC,8DAAAlD,OAA6D8F,EAAK,mBAAA9F,OAAkBkB,EAAI,kDAAAlB,OAAiDsB,EAAM,wBAAAtB,OAA+B,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU4E,cAElN6B,MAAKjC,UACJ,MAAMO,QAAaN,EAASO,OAG5B,IAAKP,EAASQ,GAAI,CAEhB,MAAMK,EAASP,GAAQA,EAAKG,SAAYT,EAASU,WACjD,OAAOuB,QAAQC,OAAOrB,EACxB,CAEAgC,EAAYvC,EAAKA,KAAKuD,MACtBlC,EAAcrB,EAAKA,KAAKoB,WAAW,IAEpCS,OAAOtB,IACNgC,EAAY,IACZ3G,QAAQ2E,MAAM,sBAAuBA,GACvB,kBAAVA,GAAuC,mBAAVA,GAC/BrF,GACF,GAKU,GACb,CAACyH,EAAU3E,EAAQwE,EAAO5E,KAC7BpC,EAAAA,EAAAA,YAAU,KACRgI,IACAvC,EAAe,IACfqC,EAAe,GAAG,GACjB,KACH9H,EAAAA,EAAAA,YAAU,KACJyH,IACFQ,IACAH,EAAe,KAEbH,GACFO,GACF,GACC,CAACT,EAAWE,IACf,MAAMK,EAAgBA,KACpB7D,MAAM,GAADjD,OACAkD,wBAAgC,8EAAAlD,OAAqF,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU4E,cAEzH6B,MAAKjC,UACJ,MAAMO,QAAaN,EAASO,OAG5B,IAAKP,EAASQ,GAAI,CAEhB,MAAMK,EAASP,GAAQA,EAAKG,SAAYT,EAASU,WACjD,OAAOuB,QAAQC,OAAOrB,EACxB,CAEAyC,EAAchD,EAAKA,KAAK,IAGzB6B,OAAOtB,IACNyC,EAAc,IACdpH,QAAQ2E,MAAM,sBAAuBA,GACvB,kBAAVA,GACFrF,GACF,GACA,EAEAuI,EAAiBA,KACrB9D,MAAM,GAADjD,OACAkD,wBAAgC,uCAAAlD,OAAsCuG,EAAS,qDAAAvG,OAA4D,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU4E,cAE/I6B,MAAKjC,UACJ,MAAMO,QAAaN,EAASO,OAG5B,IAAKP,EAASQ,GAAI,CAEhB,MAAMK,EAASP,GAAQA,EAAKG,SAAYT,EAASU,WACjD,OAAOuB,QAAQC,OAAOrB,EACxB,CAEAU,EAAejB,EAAKA,KAAK,IAG1B6B,OAAOtB,IACNU,EAAe,IACfrF,QAAQ2E,MAAM,sBAAuBA,GACvB,kBAAVA,GAAuC,mBAAVA,GAC/BrF,GACF,GACA,EAEAwI,EAAiBA,KACrB/D,MAAM,GAADjD,OACAkD,wBAAgC,mDAAAlD,OAAkDyG,EAAS,kBAAAzG,OAAyB,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAU4E,cAExH6B,MAAKjC,UACJ,MAAMO,QAAaN,EAASO,OAG5B,IAAKP,EAASQ,GAAI,CAEhB,MAAMK,EAASP,GAAQA,EAAKG,SAAYT,EAASU,WACjD,OAAOuB,QAAQC,OAAOrB,EACxB,CAEA+C,EAAetD,EAAKA,KAAK,IAG1B6B,OAAOtB,IACN+C,EAAe,IACf1H,QAAQ2E,MAAM,sBAAuBA,GACvB,kBAAVA,GAAuC,mBAAVA,GAC/BrF,GACF,GACA,EAIAyC,EADSyD,EACU,EAIzB,OAFAxF,QAAQC,IAAI+B,EAAMD,IAGhBxB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,yDAAwDF,UACrEF,EAAAA,EAAAA,KAACwH,EAAO,CACNrB,SAAUA,EACV9E,UAAWA,EACXoF,YAAaA,EACbD,SAAUA,EACVF,YAAaA,EACbC,eAAgBA,EAChBhI,gBAAiBA,EACjBiB,GAAIA,EACJmF,aAAcA,EACdnG,MAAOA,EACPH,OAAQA,KAIhB,C","sources":["components/training/program/ProgramList.jsx","components/training/program/AllProgramTable.jsx","components/training/program/Program.jsx","pages/training/program/AllProgramPage.jsx"],"sourcesContent":["\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\r\nimport { useAuth } from \"../../../context/auth\";\r\nimport BackButton from \"./BackButton\";\r\nfunction ProgramList({\r\n  index,\r\n  program,\r\n  programManager,\r\n  bucket,\r\n  fetchProgramList,\r\n  setBatchListPop,\r\n  setId,\r\n  setSelectedRow,\r\n  setPopup,\r\n}) {\r\n  const [add, setAdd] = useState(false);\r\n  const { userData, signOut } = useAuth()\r\n  // const [allQuestions, setAllQuestions] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [css, setCss] = useState(\"bg-sky-500 border-sky-500 hover:bg-sky-600\");\r\n  useEffect(() => {\r\n    const colorchanger = bucket.map((item) => {\r\n      if (item.id == program?.id) {\r\n        //setCss(\"bg-green-500 border-green-400 hover:bg-green-500\");\r\n        setAdd(true);\r\n      }\r\n      return item;\r\n    });\r\n  }, [bucket]);\r\n  console.log(\"---------------progrram\", program)\r\n  const programStartDate = new Date(program.programStartDate);\r\n  program.programStartDate = programStartDate.toISOString().split('T')[0];\r\n\r\n  const programEndDate = new Date(program.programEndDate);\r\n  program.programEndDate = programEndDate.toISOString().split('T')[0];\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"bg-white border-b  odd:bg-white even:bg-gray-50\">\r\n        <td className=\"px-6 py-4 text-gray-900\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              // setAdd(!add);\r\n              navigate(`/program/${program?.id}`)\r\n              // setId(program?.id)\r\n              // setBatchListPop(true)\r\n              // // programManager(program);\r\n            }}\r\n            className={`border  ${add\r\n              ? \"bg-green-500 border-green-400 hover:bg-green-500\"\r\n              : \"bg-sky-500 border-sky-500 hover:bg-sky-600\"\r\n              } text-white rounded-md px-2 py-1  transition duration-75 ease select-none  focus:outline-none focus:shadow-outline`}\r\n          >\r\n            {add ? \"Added\" : \"Add\"}\r\n          </button>\r\n        </td>\r\n        <td className=\"px-6 py-4 text-gray-900\">{program.programName}</td>\r\n        <td className=\"px-6 py-4 text-gray-900\">{program.clientName}</td>\r\n        <td className=\"px-6 py-4 text-gray-900\">\r\n          {program.programType == \"1\"\r\n            ? \"Open\"\r\n            : program.programType == \"0\"\r\n              ? \"Close\"\r\n              : \"-\"}\r\n        </td>\r\n        <td className=\"px-6 text-gray-900\">{program.programStartDate}</td>\r\n        <td className=\"px-6 text-gray-900\">{program.programEndDate}</td>\r\n        <td className=\"px-6 py-4 text-gray-900\">\r\n          {program.trainingType == \"1\"\r\n            ? \"Class Room Training\"\r\n            : program.trainingType == \"2\"\r\n              ? \"Virtual Training\"\r\n              : \"-\"}\r\n        </td>\r\n        <td className=\"px-6 py-4 text-gray-900\">\r\n          {program.trainingType == \"1\" && program.location\r\n            ? program.location\r\n            : \"-\"}\r\n        </td>\r\n        <td className=\" flex  pl-10 flex-row px-6 py-4  mt-2\">\r\n          {userData?.userType == \"1\" ? (\r\n            <>\r\n              <div className=\"text-gray-700 mr-4 hover:underline cursor-pointer\">\r\n                <Link to={`/program/UpdateProgram/${program.id}`}>\r\n                  <AiOutlineEdit />\r\n                </Link>\r\n              </div>\r\n              <div\r\n                className=\"text-red-700 mr-4 hover:underline cursor-pointer\"\r\n                onClick={() => {\r\n                  setPopup(true);\r\n                  setSelectedRow({\r\n                    title: program.programName,\r\n                    id: program.id,\r\n                  });\r\n                }}\r\n              >\r\n                <AiOutlineDelete color=\"red\" />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProgramList;\r\n","import React, { useState } from \"react\";\r\n// import BatchQuestionListAdd from \"./QuestionList/BatchQuestionListAdd\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\nimport ProgramList from \"./ProgramList\";\r\nimport { IoClose } from \"react-icons/io\";\r\nimport DeletePopupCard from \"../DeletePopCard\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAuth } from \"../../../context/auth\";\r\nimport BackButton from \"./BackButton\";\r\n// import { signOut } from \"next-auth/react\";\r\nfunction AllProgramTable({\r\n  programList,\r\n  setBatchListPop,\r\n  id,\r\n  bucket,\r\n  setBucket,\r\n  setId,\r\n  //setSelected(true);\r\n  next,\r\n  previous,\r\n  pgindex,\r\n  page,\r\n  setLimit,\r\n  setPage,\r\n  setSearch,\r\n  search,\r\n  fetchProgramList,\r\n}) {\r\n  var selectedBatches = [];\r\n  const [popup, setPopup] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState({\r\n    title: \"\",\r\n    id: \"\",\r\n  });\r\n  const { userData, signOut } = useAuth()\r\n  const programManager = (programData) => {\r\n    //console.log(questionData, \"okg\");\r\n    var doesItemExist;\r\n    var objects;\r\n    if (bucket.length === 0) {\r\n      setBucket([programData]);\r\n    } else {\r\n      const newState = bucket.map((item) => {\r\n        if (item.id === programData.id) {\r\n          //item.quantity += 1;\r\n          doesItemExist = true;\r\n        }\r\n        objects = item;\r\n        return item;\r\n      });\r\n\r\n      //  console.log(newState);\r\n\r\n      if (doesItemExist) {\r\n        const index = bucket.findIndex((item) => item.id === programData.id);\r\n        let newBucket = [...bucket];\r\n        if (index >= 0) {\r\n          newBucket.splice(index, 1);\r\n        } else {\r\n          console.warn(`Cannot remove : ${programData.batchQuestionId}`);\r\n        }\r\n        setBucket(newBucket);\r\n      } else {\r\n        setBucket([...bucket, programData]);\r\n      }\r\n    }\r\n  };\r\n  const handleProgramDelete = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/programs/deleteProgram/${selectedRow.id}?access_token=${userData.accessToken}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n\r\n          method: \"Delete\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        // get error message from body or default to response statusText\r\n        const error = (data && data.message) || response.statusText;\r\n        throw error;\r\n      } else if (data.code === 400) {\r\n        toast.error(data.msg);\r\n      } else {\r\n        toast.success(data.msg);\r\n        fetchProgramList();\r\n        setPopup(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"There was an error!\", error);\r\n      if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n        signOut();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\" space-y-4 flex flex-col justify-between\">\r\n      {/* <BackButton setBatchListPop={setBatchListPop} /> */}\r\n      <div className=\"flex flex-row my-4 justify-between items-center \">\r\n        <div className=\"px-2  flex w-full justify-between   \">\r\n          <h5 className=\"font-medium leading-none text-gray-700 \">\r\n            Add Program from Existing Programs\r\n          </h5>\r\n        </div>\r\n\r\n        <div className=\"relative\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none py-2  \">\r\n            <svg\r\n              className=\"w-5 h-5 text-gray-500 \"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n          <input\r\n            value={search}\r\n            type=\"text\"\r\n            id=\"table-search\"\r\n            className=\"bg-gray-50 border py-1 outline-none border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-500 focus:border-sky-500 block w-80 pl-10 p-2.5  \"\r\n            placeholder=\"Search by Program Name\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {popup ? (\r\n        <div className=\"fixed z-30  w-full h-screen top-0 left-0 items-center   bg-gray-800/40\">\r\n          <div className=\"flex w-full items-start mt-10 justify-center \">\r\n            <div className=\"relative mx-20 flex flex-col  w-1/2 items-center justify-center bg-white rounded-lg shadow-md px-8 py-2\">\r\n              <div className=\"absolute z-30 bg-white flex w-full justify-end items-end top-0  p-4 \">\r\n                {/* <IoClose\r\n                  onClick={() => {\r\n                    setPopup(false);\r\n                  }}\r\n                  className=\"cursor-pointer text-2xl font-semibold text-black \"\r\n                /> */}\r\n              </div>\r\n              <div\r\n                id=\"journal-scroll\"\r\n                className=\"w-full max-h-[32rem] h-fit overflow-y-auto mt-8\"\r\n              >\r\n                <DeletePopupCard\r\n                  title={selectedRow.title}\r\n                  cancelDelete={() => setPopup(false)}\r\n                  confirmDelete={() => handleProgramDelete(selectedRow.id)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"relative overflow-x-auto shadow-md rounded-lg mt-3\">\r\n        <table className=\"w-full text-sm text-left  text-gray-500\">\r\n          <thead className=\"text-md m-4 bg-sky-600 text-white\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium\">\r\n                View\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium\">\r\n                Program Name\r\n              </th>\r\n\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium\">\r\n                Client Name\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium \">\r\n                Type\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium \">\r\n                Start Date\r\n              </th>\r\n\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium \">\r\n                End Date\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium \">\r\n                Mode\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 font-medium \">\r\n                Location\r\n              </th>\r\n              {userData.userType == \"1\" ? (\r\n                <th scope=\"col\" className=\"px-6 py-3 font-medium \">\r\n                  Actions\r\n                </th>\r\n              ) : (\r\n                <th scope=\"col\" className=\"px-6 py-3 font-medium \"></th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {programList.length == 0 ? (\r\n              <tr className=\"border-b  font-medium odd:bg-white even:bg-gray-50 \">\r\n                <td className=\"px-6 py-4\"></td>\r\n\r\n                <td className=\"px-6 py-4\">\r\n                  No Program Data Found!! Create a new Program\r\n                </td>\r\n\r\n                <td className=\"px-6 py-4\"></td>\r\n              </tr>\r\n            ) : (\r\n              <>\r\n                {programList.map((program, index) => {\r\n                  return (\r\n                    <ProgramList\r\n                      key={uuid_v4()}\r\n                      index={index}\r\n                      bucket={bucket}\r\n                      program={program}\r\n                      //allQuestion={allQuestion}\r\n                      programManager={programManager}\r\n                      // session={session}\r\n                      setId={setId}\r\n                      //setSelected(true);\r\n                      setBatchListPop={setBatchListPop}\r\n                      setPopup={setPopup}\r\n                      // fetchProgramList={fetchProgramList\r\n                      setSelectedRow={setSelectedRow}\r\n                    />\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"flex flex-row justify-around mt-2 items-center  \">\r\n        <div className=\"flex\">\r\n          <div className=\"dropdown flex items-center relative\">\r\n            <p>Show</p>\r\n            <span className=\"bg-gray-100 text-gray-700 mx-2  font-normal tracking-wide rounded inline-flex items-center\">\r\n              <select\r\n                className=\"bg-transparent px-3 py-2  outline-none\"\r\n                onChange={(e) => {\r\n                  setLimit(e.target.value);\r\n                  setPage(1);\r\n                }}\r\n              >\r\n                <option className=\"mr-1 \">5</option>\r\n                <option className=\"mr-1 \">10</option>\r\n                <option className=\"mr-1 \">20</option>\r\n                <option className=\"mr-1 \">30</option>\r\n                <option className=\"mr-1 \">40</option>\r\n                <option className=\"mr-1 \">50</option>\r\n              </select>\r\n            </span>\r\n            <p>Programs</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <a\r\n            onClick={() => previous()}\r\n            className={` ${page === 1\r\n              ? \"hidden\"\r\n              : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 bg-gray-200 cursor-pointer rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700   \"\r\n              }`}\r\n          >\r\n            Previous\r\n          </a>\r\n\r\n          <a\r\n            onClick={() => next()}\r\n            className={` ${page >= pgindex\r\n              ? \"hidden\"\r\n              : \"inline-flex items-center py-2 px-4 ml-3 text-sm font-medium text-gray-700 cursor-pointer bg-gray-200 rounded-lg border border-gray-300 hover:bg-gray-100 hover:text-gray-700   \"\r\n              }`}\r\n          >\r\n            Next\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllProgramTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IoMdClose, IoMdMore } from \"react-icons/io\";\r\nimport { MdAddBox } from \"react-icons/md\";\r\nimport ProgramDetails from \"./ProgramDetails\";\r\n// import { signOut } from \"next-auth/react\";\r\nimport AllProgramTable from \"./AllProgramTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/auth\";\r\nfunction Program({ id, setId, setBatchListPop, batchListPop }) {\r\n\r\n  const { userData, signOut } = useAuth()\r\n  const [selected, setSelected] = useState(false);\r\n  const [programData, setProgramData] = useState({});\r\n  const [pageNo, setPageNo] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [pgindex, setPgindex] = useState(1);\r\n  const [pageLimit, setPageLimit] = useState(5);\r\n  const [programList, setProgramList] = useState([]);\r\n  const [bucket, setBucket] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //Fetching selected program details\r\n  const getOneProgram = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/programs/getProgramById/${id}?access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        console.log(data);\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setProgramData(data.data);\r\n      })\r\n      .catch((error) => {\r\n        setProgramData({});\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getOneProgram();\r\n    }\r\n  }, [id]);\r\n\r\n  //Removing program from selected programs list\r\n  const removeProgramFromBucket = (programObj) => {\r\n    var doesItemExist;\r\n    var objects;\r\n    const newState = bucket.map((item) => {\r\n      if (item.id === programObj.id) {\r\n        //item.quantity += 1;\r\n        doesItemExist = true;\r\n      }\r\n      objects = item;\r\n      return item;\r\n    });\r\n\r\n    //  console.log(newState);\r\n\r\n    if (doesItemExist) {\r\n      const index = bucket.findIndex((item) => item.id === programObj.id);\r\n      let newBucket = [...bucket];\r\n      if (index >= 0) {\r\n        newBucket.splice(index, 1);\r\n      } else {\r\n        console.warn(`Cannot remove : ${programObj?.batchQuestionId}`);\r\n      }\r\n      setBucket(newBucket);\r\n      setId(null);\r\n    }\r\n  };\r\n\r\n  //Fetching programlist\r\n  const fetchProgramList = async () => {\r\n    try {\r\n      const filter = {\r\n        pageLimit,\r\n        pageNo,\r\n        search,\r\n      };\r\n      const params = encodeURIComponent(JSON.stringify(filter));\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_PUBLIC_URL}/api/programs/list?filter=${params}&access_token=${userData?.accessToken}`\r\n      );\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw data.message;\r\n      }\r\n      setProgramList(data.data.programs);\r\n      setPgindex(data.data.lastPage);\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error === \"Malformed User\" || error === \"Token Expired\") {\r\n        signOut();\r\n      }\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    console.log(pageNo);\r\n    if (pageNo >= pgindex) {\r\n      return;\r\n    } else {\r\n      setPageNo(pageNo + 1);\r\n    }\r\n  };\r\n  const previous = () => {\r\n    if (pageNo <= 1) {\r\n      return;\r\n    } else {\r\n      setPageNo(pageNo - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProgramList();\r\n  }, [pageNo, pageLimit, search]);\r\n\r\n  return (\r\n    <div className=\"flex flex-row w-full h-full space-x-5 py-5\">\r\n\r\n      <div className=\"flex w-full h-full rounded-lg\">\r\n\r\n        <div className=\"flex w-full h-full bg-white rounded-[33px] flex-col\">\r\n          <span className=\"flex cursor-pointer justify-between items-center p-3 text-sm font-medium text-gray-600 bg-gray-100 hover:underline border-t border-gray-200\">\r\n            <div className=\"float-right rounded-[33px] bg-sky-500 border-sky-500 hover:bg-sky-600 text-white rounded-md px-2 py-1  transition duration-75 ease select-none  focus:outline-none focus:shadow-outline\">\r\n              <Link to=\"create-program\">\r\n                Create New Program\r\n              </Link>\r\n            </div>\r\n          </span>\r\n          <div className=\"w-full py-4 px-5\">\r\n            <AllProgramTable\r\n              setId={setId}\r\n              //setSelected(true);\r\n              setBatchListPop={setBatchListPop}\r\n              id={id}\r\n              bucket={bucket}\r\n              setBucket={setBucket}\r\n              programList={programList}\r\n              next={next}\r\n              previous={previous}\r\n              pgindex={pgindex}\r\n              page={pageNo}\r\n              setPage={setPageNo}\r\n              setLimit={setPageLimit}\r\n              setSearch={setSearch}\r\n              search={search}\r\n              // session={session}\r\n              fetchProgramList={fetchProgramList}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Program;\r\n","// import { getSession, signOut } from \"next-auth/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IoClose } from \"react-icons/io5\";\r\n// import CreateProgramForm from \"../components/adminComponents/forms/CreateProgramForm\";\r\n// import Batch from \"../components/adminComponents/parts/Batch\";\r\nimport Program from \"../../../components/training/program/Program\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAuth } from \"../../../context/auth\";\r\n// import CreateZoomForm from \"../components/adminComponents/forms/CreateZoomForm\";\r\n// import AllBatchTable from \"../components/adminComponents/parts/AllBatchTable\";\r\n\r\nfunction CreateProgram() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { userData, signOut } = useAuth()\r\n\r\n  const [teamData, setTeamData] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(5);\r\n  const [page, setPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState();\r\n  const [schedulePop, setSchedulePop] = useState(false);\r\n  const [batchPop, setBatchPop] = useState(false);\r\n  const [batchListPop, setBatchListPop] = useState(false);\r\n  const [csv, setCsv] = useState();\r\n  const [id, setId] = useState(null);\r\n  const [bucket, setBucket] = useState([]);\r\n  const [clientData, setClientData] = useState([]);\r\n  const [programData, setProgramData] = useState([]);\r\n  const [programId, setProgramId] = useState(null);\r\n  const [projectId, setProjectId] = useState(null);\r\n  const [projectData, setProjectData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setProjectId(null);\r\n    setProjectData([]);\r\n  }, [batchPop]);\r\n  const uploadCsv = async (e) => {\r\n    e.preventDefault();\r\n    var formData = {};\r\n    Array.from(e.currentTarget.elements).forEach((field) => {\r\n      if (!field.name) return;\r\n      formData[field.name] = field.value;\r\n    });\r\n    var response;\r\n    var bulkUser = JSON.stringify(csv);\r\n    response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/Users/bulkUploadUser?access_token=${userData?.accessToken}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        method: \"POST\",\r\n        body: bulkUser,\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      toast.error(data?.error?.message);\r\n    } else {\r\n      // document.getElementById(\"adduser\").reset();\r\n      //   toast.success(\"Users Added Succesfully !!\");\r\n      const ids = data?.map((id) => {\r\n        return id?.data.userId;\r\n      });\r\n      const users = ids.toString();\r\n      //   console.log(users);\r\n      var teamName = formData.teamName;\r\n      var teamDescription = \"zoom batches\";\r\n      var type = 2;\r\n      formData = { ...formData, users, teamDescription, teamName, type };\r\n      addBatch(formData);\r\n    }\r\n  };\r\n\r\n  const addBatch = async (formData) => {\r\n    var response;\r\n    let form = new URLSearchParams(Object.entries(formData)).toString();\r\n    console.log(form);\r\n    response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/Teams/add?access_token=${userData?.accessToken}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n\r\n        method: \"POST\",\r\n        body: form,\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      toast.error(data?.error?.message);\r\n    } else {\r\n      // console.log(data);\r\n      if (data.code === 404) {\r\n        toast.error(data.msg);\r\n      } else if (data.code == 409) {\r\n        toast.error(data.msg);\r\n      } else {\r\n        setBatchPop(false);\r\n        toast.success(\"Batch Added Succesfully !!\");\r\n      }\r\n      // document.getElementById(\"adduser\").reset();\r\n\r\n      // router.push(\"/all_teams\");\r\n    }\r\n  };\r\n\r\n  const getBatchData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/Teams/getListofTeamsforbatch?filter=%7B%22limit%22%3A${limit},%22start%22%3A${page},%22order%22%3A%22teamId%22,%22search%22%3A%22${search}%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setTeamData(data.data.list);\r\n        setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setTeamData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBatchData();\r\n  }, [batchPop, search, limit, page]);\r\n  useEffect(() => {\r\n    getClientData();\r\n    setProgramData([]);\r\n    setProjectData([]);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (programId) {\r\n      getProgramData();\r\n      setProjectData([]);\r\n    }\r\n    if (projectId) {\r\n      getProjectData();\r\n    }\r\n  }, [programId, projectId]);\r\n  const getClientData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/clients/listofclient?filter=%7B%22search%22%3A%22%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setClientData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setClientData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n  const getProgramData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/projects/listofProgramName?id=${programId}&filter=%7B%22search%22%3A%22%22%7D&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setProgramData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setProgramData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n  const getProjectData = () => {\r\n    fetch(\r\n      `${process.env.REACT_APP_PUBLIC_URL}/api/programTrainers/getprogramTrainersName?id=${projectId}&access_token=${userData?.accessToken}`\r\n    )\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response statusText\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setProjectData(data.data);\r\n        //setTotalCount(data.data.totalCount);\r\n      })\r\n      .catch((error) => {\r\n        setProjectData([]);\r\n        console.error(\"There was an error!\", error);\r\n        if (error === \"Token Expired\" || error === \"Malformed User\") {\r\n          signOut();\r\n        }\r\n      });\r\n  };\r\n\r\n  const npages = totalCount;\r\n  const pgindex = npages - 5;\r\n  // const pgindex = npages;\r\n  console.log(page, pgindex);\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full mt-0 justify-center items-center \">\r\n      <Program\r\n        teamData={teamData}\r\n        setBucket={setBucket}\r\n        setBatchPop={setBatchPop}\r\n        batchPop={batchPop}\r\n        schedulePop={schedulePop}\r\n        setSchedulePop={setSchedulePop}\r\n        setBatchListPop={setBatchListPop}\r\n        id={id}\r\n        batchListPop={batchListPop}\r\n        setId={setId}\r\n        bucket={bucket}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProgram;\r\n"],"names":["_ref","index","program","programManager","bucket","fetchProgramList","setBatchListPop","setId","setSelectedRow","setPopup","add","setAdd","useState","userData","signOut","useAuth","navigate","useNavigate","css","setCss","useEffect","map","item","id","console","log","programStartDate","Date","toISOString","split","programEndDate","_jsx","_Fragment","children","_jsxs","className","type","onClick","concat","programName","clientName","programType","trainingType","location","userType","Link","to","AiOutlineEdit","title","AiOutlineDelete","color","programList","setBucket","next","previous","pgindex","page","setLimit","setPage","setSearch","search","popup","selectedRow","programData","doesItemExist","length","findIndex","newBucket","splice","warn","batchQuestionId","fill","viewBox","xmlns","fillRule","d","clipRule","value","placeholder","onChange","e","target","DeletePopupCard","cancelDelete","confirmDelete","async","response","fetch","process","accessToken","headers","method","data","json","ok","message","statusText","code","toast","error","msg","success","handleProgramDelete","scope","ProgramList","uuid_v4","batchListPop","selected","setSelected","setProgramData","pageNo","setPageNo","totalCount","setTotalCount","setPgindex","pageLimit","setPageLimit","setProgramList","then","Promise","reject","catch","filter","params","encodeURIComponent","JSON","stringify","programs","lastPage","AllProgramTable","teamData","setTeamData","limit","schedulePop","setSchedulePop","batchPop","setBatchPop","csv","setCsv","clientData","setClientData","programId","setProgramId","projectId","setProjectId","projectData","setProjectData","list","getClientData","getProgramData","getProjectData","Program"],"sourceRoot":""}
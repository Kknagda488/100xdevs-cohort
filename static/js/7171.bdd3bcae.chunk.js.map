{"version":3,"file":"static/js/7171.bdd3bcae.chunk.js","mappings":"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","sources":["components/const/index.js","pages/training/program/NomineeForm.jsx"],"sourcesContent":["module.exports = {\r\n    EMAIL_SUFFIX: process.env.REACT_APP_PUBLIC_EMAIL_SUFFIX,\r\n};\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { EMAIL_SUFFIX } from \"../../../components/const\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/auth\";\r\n\r\nfunction NomineeForm() {\r\n    const { programId } = useParams();\r\n    const { userData } = useAuth()\r\n    const [employeeId, setEmployeeId] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const [employee, setEmployee] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false)\r\n    const [errMsg, setErrMsg] = useState(\"\")\r\n    // const [longitude, setLongitude] = useState(null)\r\n    // const [lattitude, setLattitude] = useState(null)\r\n    const [formData, setFormData] = useState({\r\n        programId,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        city: \"\",\r\n        pincode: \"\",\r\n        managerName: \"\",\r\n        managerEmail: \"\",\r\n    });\r\n    const handleNomineeFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            let form = { ...formData };\r\n            // Array.from(e.currentTarget.elements).forEach((field) => {\r\n            //   if (!field.name) return;\r\n            //   if (field.name == \"email\" || field.name == \"managerEmail\") {\r\n            //     var pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\r\n            //     const isValid = pattern.test(field.value.trim());\r\n            //     if (isValid) {\r\n            //       const index = field.value.indexOf(\"@\");\r\n            //       formData[field.name] =\r\n            //         field.value.substr(0, index).trim() + EMAIL_SUFFIX;\r\n            //     } else {\r\n            //       formData[field.name] = field.value.trim() + EMAIL_SUFFIX;\r\n            //     }\r\n            //   } else {\r\n            //     formData[field.name] = field.value;\r\n            //   }\r\n            // });\r\n            var pattern = /^[^@]+$/;\r\n            // const isEmail = pattern.test(form[\"email\"].trim());\r\n            // if (!isEmail) {\r\n            //   toast.error(\"Invalid Email\");\r\n            //   return;\r\n            // }\r\n            // const isEmail2 = pattern.test(form[\"managerEmail\"].trim());\r\n            // if (!isEmail2) {\r\n            //   toast.error(\"Invalid manager Email\");\r\n            //   return;\r\n            // }\r\n            form[\"email\"] = form[\"email\"].trim() + EMAIL_SUFFIX;\r\n            form[\"managerEmail\"] = form[\"managerEmail\"].trim() + EMAIL_SUFFIX;\r\n            // form[\"lattitude\"] = lattitude\r\n            // form[\"longitude\"] = longitude\r\n\r\n            const formFields = new URLSearchParams(Object.entries(form)).toString();\r\n            const response = await fetch(\r\n                `${process.env.REACT_APP_PUBLIC_URL}/api/nominees/register?access_token=${userData?.accessToken}`,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    },\r\n\r\n                    method: \"POST\",\r\n                    body: formFields,\r\n                }\r\n            );\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                const error = (data && data.msg) || response.statusText;\r\n                return toast.error(error);\r\n            } else if (data.status === \"failure\") {\r\n                if (data.code == 409) {\r\n                    setIsError(true)\r\n                    setErrMsg(data?.msg)\r\n                    return\r\n                } else {\r\n                    toast.error(data?.msg);\r\n                }\r\n            } else {\r\n                toast.success(\"Register successful.\");\r\n                e.target.reset();\r\n                setSuccess(true);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            programId,\r\n        }));\r\n    }, [programId]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //   const getLocation = () => {\r\n    //     navigator.geolocation.getCurrentPosition(position => {\r\n    //       setLattitude(position.coords.latitude)\r\n    //       setLongitude(position.coords.longitude)\r\n    //     }, err => console.log(err))\r\n    //   }\r\n    //   getLocation()\r\n    // },[])\r\n    // const fetchEmployeeDetails = async (e) => {\r\n    //   setEmployee(null);\r\n    //   e.preventDefault();\r\n    //   try {\r\n    //     const response = await fetch(\r\n    //       `${process.env.NEXT_PUBLIC_URL}/api/employees/getEmployeeDetails/${employeeId}`\r\n    //     );\r\n    //     const data = await response.json();\r\n    //     if (data.data) {\r\n    //       setEmployee(data.data);\r\n    //     } else {\r\n    //       throw Error(\"Employee not found\");\r\n    //     }\r\n    //   } catch (error) {\r\n    //     toast.error(error?.message);\r\n    //   }\r\n    // };\r\n\r\n    const handeInputChange = (e) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n    return (\r\n        <div className=\" bg-white\">\r\n            <div\r\n                className=\"block sm:flex justify-between items-center\"\r\n                style={{ maxWidth: \"700px\", margin: \"40px auto\" }}\r\n            >\r\n                <img\r\n                    src=\"/LSS Logo.png\"\r\n                    className=\"sm:mx-0 mx-auto\"\r\n                    style={{ height: \"5.5rem\" }}\r\n                ></img>\r\n                <img\r\n                    src=\"/IDFC-logo-website.jpg\"\r\n                    className=\"sm:mx-0 mx-auto\"\r\n                    style={{ height: \"80px\" }}\r\n                ></img>\r\n            </div>\r\n            <div\r\n                className=\"flex justify-center\"\r\n                style={{ paddingBottom: \"260px\", maxWidth: \"700px\", margin: \"0 auto\" }}\r\n            >\r\n                <div>\r\n                    {(!success && !isError) ? (\r\n                        <div style={{ marginTop: \"-20px\" }}>\r\n                            <div className=\"flex items-center justify-center p-5\">\r\n                                <div className=\"rounded overflow-hidden shadow-lg p-5 bg-[white] \">\r\n                                    <h1 className=\"text-xl text-700\">Nominee Registration</h1>\r\n                                    <br />\r\n                                    {/* <form onSubmit={fetchEmployeeDetails}>\r\n                <div className=\"flex flex-wrap\">\r\n                  <div className=\"w-3/2 px-2\">\r\n                    <label className=\"leading-loose\">Employee Id</label>\r\n                    <input\r\n                      name=\"employeeId\"\r\n                      className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                      placeholder=\"Provide Employee Id\"\r\n                      required\r\n                      value={employeeId}\r\n                      onChange={(e) => setEmployeeId(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"py-1 mt-7 space-x-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"bg-sky-500 flex-inline justify-center items-center text-white px-4 py-1 rounded-md focus:outline-none\"\r\n                    >\r\n                      Find\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form> */}\r\n                                    <form onSubmit={handleNomineeFormSubmit}>\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2  gap-1\">\r\n                                            <input\r\n                                                name=\"programId\"\r\n                                                type=\"hidden\"\r\n                                                defaultValue={programId}\r\n                                            />\r\n                                            <div className=\"w-full px-2\">\r\n                                                <label className=\"leading-loose\">First name*</label>\r\n                                                <input\r\n                                                    name=\"firstName\"\r\n                                                    className=\"px-4 bg-white py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                                                    placeholder=\"Provide first name\"\r\n                                                    value={formData.firstName}\r\n                                                    onChange={handeInputChange}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"w-full px-2\">\r\n                                                <label className=\"leading-loose\">Last name*</label>\r\n                                                <input\r\n                                                    name=\"lastName\"\r\n                                                    className=\"px-4 bg-white py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                                                    placeholder=\"Provide last name\"\r\n                                                    value={formData.lastName}\r\n                                                    onChange={handeInputChange}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"w-full md:col-span-2  px-2\">\r\n                                                <label className=\"leading-loose\">Email*</label>\r\n                                                <div className=\"flex flex-wrap items-stretch w-full relative\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"email\"\r\n                                                        className=\"flex-shrink flex-grow flex-auto leading-normal w-px flex-1 border h-10 border-grey-light rounded outline-none rounded-r-none px-3 relative\"\r\n                                                        placeholder=\"Email\"\r\n                                                        value={formData.email}\r\n                                                        onChange={handeInputChange}\r\n                                                        required\r\n                                                    ></input>\r\n                                                    <div className=\"flex -mr-px\">\r\n                                                        <span className=\"flex items-center leading-normal bg-grey-lighter rounded rounded-l-none border border-l-0 border-grey-light px-3 whitespace-no-wrap text-grey-dark text-sm\">\r\n                                                            {EMAIL_SUFFIX}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"w-full px-2\">\r\n                                                <label className=\"leading-loose\">City*</label>\r\n                                                <input\r\n                                                    name=\"city\"\r\n                                                    className=\"px-4 bg-white py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                                                    placeholder=\"Provide city\"\r\n                                                    value={formData.city}\r\n                                                    onChange={handeInputChange}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"w-full px-2\">\r\n                                                <label className=\"leading-loose\">Pincode*</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    name=\"pincode\"\r\n                                                    value={formData.pincode}\r\n                                                    onChange={handeInputChange}\r\n                                                    className=\"px-4 bg-white py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                                                    placeholder=\"Provide pincode\"\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"w-full   px-2\">\r\n                                                <label className=\"leading-loose\">Manager name*</label>\r\n                                                <input\r\n                                                    name=\"managerName\"\r\n                                                    value={formData.managerName}\r\n                                                    onChange={handeInputChange}\r\n                                                    className=\"px-4 bg-white py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                                                    placeholder=\"Provide manager name\"\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"w-full   px-2\">\r\n                                                <label className=\"leading-loose\">Manager email*</label>\r\n                                                <div className=\"flex flex-wrap items-stretch w-full mb-4 relative\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"managerEmail\"\r\n                                                        value={formData.managerEmail}\r\n                                                        onChange={handeInputChange}\r\n                                                        className=\"flex-shrink flex-grow flex-auto leading-normal w-px flex-1 border h-10 border-grey-light rounded outline-none rounded-r-none px-3 relative\"\r\n                                                        placeholder=\"Manager email\"\r\n                                                        required\r\n                                                    ></input>\r\n                                                    <div className=\"flex -mr-px\">\r\n                                                        <span className=\"flex items-center leading-normal bg-grey-lighter rounded rounded-l-none border border-l-0 border-grey-light px-3 whitespace-no-wrap text-grey-dark text-sm\">\r\n                                                            {EMAIL_SUFFIX}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\" text-red-500 text-xs mt-1 px-2\">\r\n                                            Note: Please provide text before @ in a email field. eg.\r\n                                            John.doe instead of John.doe{EMAIL_SUFFIX}\r\n                                        </div>\r\n                                        {/* <div className=\"w-1/2 px-2\">\r\n              <label className=\"leading-loose\">Branch Name</label>\r\n              <input\r\n                name=\"branchName\"\r\n                className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\r\n                placeholder=\"Provide employee id\"\r\n                required\r\n                readOnly\r\n                defaultValue={employee.branchName}\r\n              />\r\n            </div> */}\r\n                                        <div className=\"py-4 px-2 space-x-4\">\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                disabled={loading}\r\n                                                className=\"bg-[#9d1d27] flex-inline justify-center items-center text-white px-4 py-2 rounded-md focus:outline-none\"\r\n                                            >\r\n                                                Register\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                    {success && (\r\n                        <div>\r\n                            <div className=\"flex items-center justify-center\">\r\n                                <div className=\"rounded overflow-hidden shadow-lg bg-[white] p-5 \">\r\n                                    <div className=\"flex flex-col items-center space-y-2 \">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            className=\"text-green-600 w-28 h-28\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            stroke=\"currentColor\"\r\n                                            strokeWidth=\"1\"\r\n                                        >\r\n                                            <path\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\"\r\n                                                d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                                            />\r\n                                        </svg>\r\n                                        <h2 className=\"text-xl text-center font-bold\">\r\n                                            Registration completed successfully!\r\n                                        </h2>\r\n                                        <br />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {\r\n                        isError ?\r\n                            <div>\r\n                                <div className=\"flex items-center justify-center\">\r\n                                    <div className=\"rounded overflow-hidden shadow-lg bg-[white] p-5 \">\r\n                                        <div className=\"flex flex-col items-center space-y-3 \">\r\n                                            <AiOutlineCloseCircle size={100} color=\"#b21c29\" />\r\n                                            <h2 className=\"text-lg text-center font-bold\">\r\n                                                {errMsg}\r\n                                            </h2>\r\n                                            <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NomineeForm;\r\n"],"names":["module","exports","EMAIL_SUFFIX","process","programId","useParams","userData","useAuth","employeeId","setEmployeeId","useState","success","setSuccess","employee","setEmployee","loading","setLoading","isError","setIsError","errMsg","setErrMsg","formData","setFormData","firstName","lastName","email","city","pincode","managerName","managerEmail","useEffect","prev","handeInputChange","e","target","name","value","_jsxs","className","children","style","maxWidth","margin","_jsx","src","height","paddingBottom","marginTop","onSubmit","async","preventDefault","form","trim","formFields","URLSearchParams","Object","entries","toString","response","fetch","concat","accessToken","headers","method","body","data","json","ok","error","msg","statusText","toast","status","code","reset","console","log","type","defaultValue","placeholder","onChange","required","disabled","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","AiOutlineCloseCircle","size","color"],"sourceRoot":""}